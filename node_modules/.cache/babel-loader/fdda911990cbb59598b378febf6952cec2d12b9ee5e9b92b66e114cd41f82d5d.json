{"ast":null,"code":"// 더미 데이터 - 경기도 도서관 (시립 중앙도서관 + 동네 작은도서관)\nexport const dummyLibraries = [\n// 수원시 도서관들\n{\n  id: '1',\n  name: '경기도립중앙도서관',\n  address: '경기 수원시 영통구 월드컵로 235',\n  phone: '031-249-4800',\n  hours: '09:00-18:00',\n  website: 'https://www.library.kr/',\n  distance: 0.8,\n  coordinates: {\n    lat: 37.299,\n    lng: 127.070\n  },\n  type: '공공도서관'\n}, {\n  id: '2',\n  name: '수원시립중앙도서관',\n  address: '경기 수원시 영통구 광교로 183',\n  phone: '031-228-4300',\n  hours: '09:00-22:00',\n  website: 'https://www.suwonlib.go.kr/',\n  distance: 1.2,\n  coordinates: {\n    lat: 37.295,\n    lng: 127.075\n  },\n  type: '공공도서관'\n}, {\n  id: '3',\n  name: '영통구립도서관',\n  address: '경기 수원시 영통구 영통동 999-1',\n  phone: '031-228-4350',\n  hours: '09:00-20:00',\n  website: 'https://www.suwonlib.go.kr/',\n  distance: 1.5,\n  coordinates: {\n    lat: 37.293,\n    lng: 127.073\n  },\n  type: '구립도서관'\n}, {\n  id: '4',\n  name: '광교작은도서관',\n  address: '경기 수원시 영통구 광교동 1275',\n  phone: '031-228-4380',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 1.8,\n  coordinates: {\n    lat: 37.291,\n    lng: 127.077\n  },\n  type: '작은도서관'\n}, {\n  id: '5',\n  name: '망포작은도서관',\n  address: '경기 수원시 영통구 망포동 578-2',\n  phone: '031-228-4390',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 2.1,\n  coordinates: {\n    lat: 37.285,\n    lng: 127.065\n  },\n  type: '작은도서관'\n},\n// 성남시 도서관들\n{\n  id: '6',\n  name: '성남시립중앙도서관',\n  address: '경기 성남시 분당구 양현로 346',\n  phone: '031-729-4600',\n  hours: '09:00-18:00',\n  website: 'https://www.snlib.go.kr/',\n  distance: 2.5,\n  coordinates: {\n    lat: 37.350,\n    lng: 127.105\n  },\n  type: '공공도서관'\n}, {\n  id: '7',\n  name: '분당구립정자도서관',\n  address: '경기 성남시 분당구 정자동 178-1',\n  phone: '031-729-4650',\n  hours: '09:00-20:00',\n  website: 'https://www.snlib.go.kr/',\n  distance: 2.8,\n  coordinates: {\n    lat: 37.365,\n    lng: 127.110\n  },\n  type: '구립도서관'\n}, {\n  id: '8',\n  name: '서현작은도서관',\n  address: '경기 성남시 분당구 서현동 271-3',\n  phone: '031-729-4670',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.1,\n  coordinates: {\n    lat: 37.348,\n    lng: 127.123\n  },\n  type: '작은도서관'\n}, {\n  id: '9',\n  name: '야탑작은도서관',\n  address: '경기 성남시 분당구 야탑동 344-10',\n  phone: '031-729-4680',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.3,\n  coordinates: {\n    lat: 37.341,\n    lng: 127.128\n  },\n  type: '작은도서관'\n},\n// 고양시 도서관들\n{\n  id: '10',\n  name: '고양시립중앙도서관',\n  address: '경기 고양시 덕양구 고양대로 1955',\n  phone: '031-8075-9300',\n  hours: '09:00-18:00',\n  website: 'https://www.goyanglib.go.kr/',\n  distance: 4.2,\n  coordinates: {\n    lat: 37.650,\n    lng: 126.830\n  },\n  type: '공공도서관'\n}, {\n  id: '11',\n  name: '일산동구립도서관',\n  address: '경기 고양시 일산동구 백석동 1256',\n  phone: '031-8075-9350',\n  hours: '09:00-20:00',\n  website: 'https://www.goyanglib.go.kr/',\n  distance: 4.5,\n  coordinates: {\n    lat: 37.670,\n    lng: 126.775\n  },\n  type: '구립도서관'\n}, {\n  id: '12',\n  name: '백석작은도서관',\n  address: '경기 고양시 일산동구 백석동 1234-5',\n  phone: '031-8075-9380',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.8,\n  coordinates: {\n    lat: 37.675,\n    lng: 126.780\n  },\n  type: '작은도서관'\n}, {\n  id: '13',\n  name: '마두작은도서관',\n  address: '경기 고양시 일산동구 마두동 775-2',\n  phone: '031-8075-9390',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 5.1,\n  coordinates: {\n    lat: 37.655,\n    lng: 126.785\n  },\n  type: '작은도서관'\n},\n// 부천시 도서관들\n{\n  id: '14',\n  name: '부천시립중앙도서관',\n  address: '경기 부천시 원미구 길주로 1',\n  phone: '032-625-4700',\n  hours: '09:00-18:00',\n  website: 'https://www.bclib.go.kr/',\n  distance: 3.1,\n  coordinates: {\n    lat: 37.490,\n    lng: 126.783\n  },\n  type: '공공도서관'\n}, {\n  id: '15',\n  name: '원미구립도서관',\n  address: '경기 부천시 원미구 중동 1033-3',\n  phone: '032-625-4750',\n  hours: '09:00-20:00',\n  website: 'https://www.bclib.go.kr/',\n  distance: 3.4,\n  coordinates: {\n    lat: 37.485,\n    lng: 126.788\n  },\n  type: '구립도서관'\n}, {\n  id: '16',\n  name: '중동작은도서관',\n  address: '경기 부천시 원미구 중동 1178-1',\n  phone: '032-625-4780',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.7,\n  coordinates: {\n    lat: 37.488,\n    lng: 126.791\n  },\n  type: '작은도서관'\n}, {\n  id: '17',\n  name: '역곡작은도서관',\n  address: '경기 부천시 원미구 역곡동 201-8',\n  phone: '032-625-4790',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.0,\n  coordinates: {\n    lat: 37.486,\n    lng: 126.794\n  },\n  type: '작은도서관'\n},\n// 안양시 도서관들\n{\n  id: '18',\n  name: '안양시립중앙도서관',\n  address: '경기 안양시 만안구 문예로 30',\n  phone: '031-389-0800',\n  hours: '09:00-22:00',\n  website: 'https://www.aylib.go.kr/',\n  distance: 3.8,\n  coordinates: {\n    lat: 37.400,\n    lng: 126.950\n  },\n  type: '공공도서관'\n}, {\n  id: '19',\n  name: '만안구립도서관',\n  address: '경기 안양시 만안구 안양동 678-49',\n  phone: '031-389-0850',\n  hours: '09:00-20:00',\n  website: 'https://www.aylib.go.kr/',\n  distance: 4.1,\n  coordinates: {\n    lat: 37.395,\n    lng: 126.955\n  },\n  type: '구립도서관'\n}, {\n  id: '20',\n  name: '안양동작은도서관',\n  address: '경기 안양시 만안구 안양동 123-45',\n  phone: '031-389-0880',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.4,\n  coordinates: {\n    lat: 37.398,\n    lng: 126.958\n  },\n  type: '작은도서관'\n},\n// 용인시 도서관들\n{\n  id: '21',\n  name: '용인시립중앙도서관',\n  address: '경기 용인시 처인구 중부대로 1199',\n  phone: '031-324-4800',\n  hours: '09:00-18:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 4.8,\n  coordinates: {\n    lat: 37.230,\n    lng: 127.208\n  },\n  type: '공공도서관'\n}, {\n  id: '22',\n  name: '수지구립도서관',\n  address: '경기 용인시 수지구 수지동 1234-1',\n  phone: '031-324-4850',\n  hours: '09:00-20:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.1,\n  coordinates: {\n    lat: 37.325,\n    lng: 127.095\n  },\n  type: '구립도서관'\n}, {\n  id: '23',\n  name: '기흥구립도서관',\n  address: '경기 용인시 기흥구 구갈동 567-8',\n  phone: '031-324-4880',\n  hours: '09:00-20:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.4,\n  coordinates: {\n    lat: 37.275,\n    lng: 127.115\n  },\n  type: '구립도서관'\n}, {\n  id: '23-1',\n  name: '처인도서관',\n  address: '경기 용인시 처인구 금령로 33번길 15',\n  phone: '031-324-4670',\n  hours: '09:00-18:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.6,\n  coordinates: {\n    lat: 37.236,\n    lng: 127.200\n  },\n  type: '공공도서관'\n}, {\n  id: '23-2',\n  name: '서농도서관',\n  address: '경기 용인시 기흥구 서천서로 83',\n  phone: '031-324-4680',\n  hours: '09:00-18:00',\n  website: '',\n  distance: 5.8,\n  coordinates: {\n    lat: 37.241,\n    lng: 127.077\n  },\n  type: '공공도서관'\n}, {\n  id: '23-3',\n  name: '포곡도서관',\n  address: '경기 용인시 처인구 포곡읍 에버랜드로 860',\n  phone: '031-324-4690',\n  hours: '09:00-18:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 6.0,\n  coordinates: {\n    lat: 37.294,\n    lng: 127.202\n  },\n  type: '공공도서관'\n}, {\n  id: '23-4',\n  name: '흥덕도서관',\n  address: '경기 용인시 기흥구 흥덕중앙로 120',\n  phone: '031-324-4700',\n  hours: '09:00-18:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.2,\n  coordinates: {\n    lat: 37.238,\n    lng: 127.119\n  },\n  type: '공공도서관'\n},\n// 화성시 도서관들\n{\n  id: '24',\n  name: '화성시립중앙도서관',\n  address: '경기 화성시 남양읍 시청로 155',\n  phone: '031-369-6800',\n  hours: '09:00-18:00',\n  website: 'https://www.hscitylib.go.kr/',\n  distance: 6.2,\n  coordinates: {\n    lat: 37.200,\n    lng: 126.831\n  },\n  type: '공공도서관'\n}, {\n  id: '25',\n  name: '동탄구립도서관',\n  address: '경기 화성시 동탄면 동탄대로 300',\n  phone: '031-369-6850',\n  hours: '09:00-20:00',\n  website: 'https://www.hscitylib.go.kr/',\n  distance: 6.5,\n  coordinates: {\n    lat: 37.205,\n    lng: 127.078\n  },\n  type: '구립도서관'\n}];\n\n// 더미 도서 데이터\nexport const dummyBooks = [{\n  id: 1,\n  title: '82년생 김지영',\n  author: '조남주',\n  publisher: '민음사',\n  isbn: '9788937473722',\n  category: '소설',\n  publishYear: '2016',\n  description: '한국 여성의 현실을 담은 화제의 소설',\n  imageUrl: ''\n}, {\n  id: 2,\n  title: '미드나잇 라이브러리',\n  author: '매트 헤이그',\n  publisher: '인플루엔셜',\n  isbn: '9791197377109',\n  category: '소설',\n  publishYear: '2020',\n  description: '후회와 선택에 관한 철학적 소설',\n  imageUrl: ''\n}, {\n  id: 3,\n  title: '사피엔스',\n  author: '유발 하라리',\n  publisher: '김영사',\n  isbn: '9788934972464',\n  category: '인문',\n  publishYear: '2015',\n  description: '인류의 역사를 다룬 베스트셀러',\n  imageUrl: ''\n}, {\n  id: 4,\n  title: '아몬드',\n  author: '손원평',\n  publisher: '창비',\n  isbn: '9788936434267',\n  category: '소설',\n  publishYear: '2017',\n  description: '감정을 느끼지 못하는 소년의 성장 소설',\n  imageUrl: ''\n}, {\n  id: 5,\n  title: '정의란 무엇인가',\n  author: '마이클 샌델',\n  publisher: '김영사',\n  isbn: '9788934942467',\n  category: '철학',\n  publishYear: '2010',\n  description: '정의에 대한 철학적 탐구',\n  imageUrl: ''\n}];\n\n// 더미 독서모임 데이터\nexport const dummyReadingGroups = [{\n  id: 1,\n  name: '시니어 독서 클럽',\n  description: '50-60대를 위한 독서 모임입니다.',\n  libraryId: '1',\n  libraryName: '경기도립중앙도서관',\n  meetingDate: '2024-01-15',\n  meetingTime: '14:00',\n  maxMembers: 15,\n  currentMembers: 8,\n  bookTitle: '82년생 김지영',\n  bookAuthor: '조남주',\n  category: '소설',\n  difficulty: '쉬움',\n  meetingType: 'library',\n  organizer: '김도서',\n  contact: '010-1234-5678',\n  status: 'active'\n}, {\n  id: 2,\n  name: '역사 탐구 모임',\n  description: '한국사와 세계사를 함께 읽는 모임',\n  libraryId: '2',\n  libraryName: '수원시립중앙도서관',\n  meetingDate: '2024-01-20',\n  meetingTime: '10:00',\n  maxMembers: 12,\n  currentMembers: 6,\n  bookTitle: '사피엔스',\n  bookAuthor: '유발 하라리',\n  category: '인문',\n  difficulty: '보통',\n  meetingType: 'library',\n  organizer: '박역사',\n  contact: '010-2345-6789',\n  status: 'active'\n}];\n/**\n * 경기도 공공데이터 API 서비스 클래스\n * 실제 구현 시 아래 API들을 활용할 수 있습니다:\n * \n * 1. 경기데이터드림 (data.gg.go.kr)\n *    - 경기도 도서관 정보 API\n *    - 도서관 시설 현황 API\n *    - 문화시설 통합 정보 API\n * \n * 2. 도서관정보나루 (data4library.kr) \n *    - 전국 도서관 표준 API\n *    - 도서 검색 API\n *    - 대출/예약 현황 API\n * \n * 3. 서울열린데이터광장 등 시군별 Open API\n *    - 각 시군별 도서관 API\n *    - 지역별 문화시설 API\n */\nexport class LibraryAPIService {\n  constructor(config) {\n    this.config = void 0;\n    this.config = config;\n  }\n\n  /**\n   * 경기도 도서관 목록 조회\n   * 실제 API: https://openapi.gg.go.kr/TBGGIBLLBR\n   */\n  async getLibraries(location, radius) {\n    try {\n      // 경기데이터드림 도서관 현황 API 호출 (올바른 엔드포인트)\n      const apiUrl = `https://openapi.gg.go.kr/TBGGIBLLBR`;\n      const params = new URLSearchParams({\n        KEY: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d',\n        Type: 'json',\n        pIndex: '1',\n        pSize: '500' // 검색 범위 확대\n      });\n      const response = await fetch(`${apiUrl}?${params}`);\n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // 경기데이터드림 API 응답 구조에 맞게 데이터 변환\n      let libraries = [];\n      if (data.TBGGIBLLBR && data.TBGGIBLLBR[1] && data.TBGGIBLLBR[1].row) {\n        libraries = data.TBGGIBLLBR[1].row.map((item, index) => ({\n          id: (index + 1).toString(),\n          name: item.LBRRY_NM || '도서관명 없음',\n          address: item.REFINE_ROADNM_ADDR || item.REFINE_LOTNO_ADDR || '주소 없음',\n          phone: item.TELNO || '전화번호 없음',\n          hours: item.OPER_TIME || '09:00-18:00',\n          // 실제 운영시간 사용\n          website: item.HMPG_ADDR || '',\n          distance: Math.round(Math.random() * 5 * 10) / 10,\n          // 임시 거리 계산\n          coordinates: {\n            lat: parseFloat(item.REFINE_WGS84_LAT) || 37.5,\n            lng: parseFloat(item.REFINE_WGS84_LOGT) || 127.0\n          },\n          type: '공공도서관'\n        }));\n      }\n\n      // 용인시 도서관들 수동 추가 (API에서 검색되지 않는 경우 대비)\n      const additionalLibraries = [{\n        id: 'yongin_central',\n        name: '용인시립중앙도서관',\n        address: '경기도 용인시 처인구 중부대로 1199',\n        phone: '031-324-4600',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 1.2,\n        coordinates: {\n          lat: 37.231,\n          lng: 127.208\n        },\n        type: '공공도서관'\n      }, {\n        id: 'giheung_lib',\n        name: '기흥도서관',\n        address: '경기도 용인시 기흥구 기흥로 19',\n        phone: '031-324-4660',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 1.8,\n        coordinates: {\n          lat: 37.275,\n          lng: 127.115\n        },\n        type: '공공도서관'\n      }, {\n        id: 'suji_lib',\n        name: '수지도서관',\n        address: '경기도 용인시 수지구 포은대로 435',\n        phone: '031-324-4650',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 2.1,\n        coordinates: {\n          lat: 37.324,\n          lng: 127.094\n        },\n        type: '공공도서관'\n      }, {\n        id: 'cheoin_lib',\n        name: '처인도서관',\n        address: '경기도 용인시 처인구 금령로 33번길 15',\n        phone: '031-324-4670',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 2.3,\n        coordinates: {\n          lat: 37.236,\n          lng: 127.200\n        },\n        type: '공공도서관'\n      }, {\n        id: 'seongnam_lib',\n        name: '서농도서관',\n        address: '경기도 용인시 기흥구 서천서로 83',\n        phone: '031-324-4680',\n        hours: '09:00-18:00',\n        website: '',\n        distance: 2.5,\n        coordinates: {\n          lat: 37.241,\n          lng: 127.077\n        },\n        type: '공공도서관'\n      }, {\n        id: 'pogok_lib',\n        name: '포곡도서관',\n        address: '경기도 용인시 처인구 포곡읍 에버랜드로 860',\n        phone: '031-324-4690',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 3.2,\n        coordinates: {\n          lat: 37.294,\n          lng: 127.202\n        },\n        type: '공공도서관'\n      }, {\n        id: 'heungdeok_lib',\n        name: '흥덕도서관',\n        address: '경기도 용인시 기흥구 흥덕중앙로 120',\n        phone: '031-324-4700',\n        hours: '09:00-18:00',\n        website: 'https://www.yonginlib.go.kr',\n        distance: 2.8,\n        coordinates: {\n          lat: 37.238,\n          lng: 127.119\n        },\n        type: '공공도서관'\n      }];\n      return [...libraries, ...additionalLibraries];\n    } catch (error) {\n      console.error('도서관 정보 조회 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return dummyLibraries; // 오류 시 더미 데이터 반환\n    }\n  }\n\n  /**\n   * 도서 검색 - 도서관정보나루 API 활용\n   * 실제 API: http://data4library.kr/api/srchBooks\n   */\n  async searchBooks(params) {\n    try {\n      var _data$response, _data$response2, _data$response3, _data$response4, _data$response4$docs;\n      const apiUrl = 'http://data4library.kr/api/srchBooks';\n      const searchParams = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        title: params.query,\n        pageNo: (params.pageNo || 1).toString(),\n        pageSize: (params.pageSize || 10).toString(),\n        format: 'json'\n      });\n      console.log('도서 검색 API 호출:', `${apiUrl}?${searchParams}`);\n      const response = await fetch(`${apiUrl}?${searchParams}`);\n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('📊 도서검색 API 전체 응답:', JSON.stringify(data, null, 2));\n      console.log('🔍 도서검색 API 응답 구조 분석:');\n      console.log('- data.response:', data.response);\n      console.log('- data.response.docs:', (_data$response = data.response) === null || _data$response === void 0 ? void 0 : _data$response.docs);\n      console.log('- data.response.book:', (_data$response2 = data.response) === null || _data$response2 === void 0 ? void 0 : _data$response2.book);\n      console.log('- data.response.result:', (_data$response3 = data.response) === null || _data$response3 === void 0 ? void 0 : _data$response3.result);\n      console.log('- docs 길이:', (_data$response4 = data.response) === null || _data$response4 === void 0 ? void 0 : (_data$response4$docs = _data$response4.docs) === null || _data$response4$docs === void 0 ? void 0 : _data$response4$docs.length);\n\n      // API 응답 구조 확인\n      let rawBooks = [];\n      if (data.response && data.response.docs) {\n        rawBooks = data.response.docs;\n      } else if (data.response && data.response.book) {\n        rawBooks = Array.isArray(data.response.book) ? data.response.book : [data.response.book];\n      } else if (data.response && data.response.result) {\n        rawBooks = data.response.result.docs || data.response.result;\n      }\n      console.log('📚 원본 도서 데이터:', rawBooks);\n      if (rawBooks && rawBooks.length > 0) {\n        const books = rawBooks.filter(book => {\n          console.log('📖 개별 도서 데이터 확인:', book);\n          return book.bookname && book.bookname.trim() !== '';\n        }).map((book, index) => ({\n          id: book.isbn || `book_${index}`,\n          title: book.bookname.trim(),\n          // 제목 공백 제거\n          author: book.authors || '작가 미상',\n          publisher: book.publisher || '출판사 미상',\n          isbn: book.isbn || '',\n          category: book.class_nm || '일반',\n          publishYear: book.publication_year || '2023',\n          description: book.description || '',\n          imageUrl: book.bookImageURL || '',\n          loanCount: parseInt(book.loan_count) || 0\n        }));\n        console.log('✅ 변환된 도서 데이터:', books);\n        console.log(`🎯 제목이 있는 도서 ${books.length}권을 찾았습니다.`);\n        return books;\n      }\n\n      // API 응답이 예상과 다른 경우 더미 데이터 반환\n      console.warn('API 응답 구조가 예상과 다름, 더미 데이터 사용');\n      return this.getDummyBooks(params.query);\n    } catch (error) {\n      console.error('도서 검색 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return this.getDummyBooks(params.query);\n    }\n  }\n\n  /**\n   * 더미 도서 데이터 필터링\n   */\n  getDummyBooks(query) {\n    return dummyBooks.filter(book => book.title.toLowerCase().includes(query.toLowerCase()) || book.author.toLowerCase().includes(query.toLowerCase())).map(book => ({\n      id: book.id.toString(),\n      title: book.title,\n      author: book.author,\n      publisher: book.publisher,\n      isbn: book.isbn,\n      category: book.category,\n      publishYear: book.publishYear,\n      description: book.description,\n      imageUrl: book.imageUrl,\n      loanCount: Math.floor(Math.random() * 100) + 10\n    }));\n  }\n\n  /**\n   * 도서 소장 현황 조회\n   * 실제 API: http://data4library.kr/api/libSrchByBook\n   */\n  async getBookAvailability(isbn) {\n    try {\n      const apiUrl = 'http://data4library.kr/api/libSrchByBook';\n      const params = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        isbn: isbn,\n        format: 'json'\n      });\n      const response = await fetch(`${apiUrl}?${params}`);\n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.response && data.response.libs) {\n        const availability = data.response.libs.map(lib => ({\n          libraryId: lib.lib.libCode || '',\n          libraryName: lib.lib.libName || '도서관명 없음',\n          available: lib.book.loanAvailable === 'Y',\n          loanable: lib.book.loanAvailable === 'Y',\n          reservable: lib.book.reserveAvailable === 'Y',\n          dueDate: lib.book.returnPlanDate || undefined\n        }));\n        return availability;\n      }\n      return [];\n    } catch (error) {\n      console.error('도서 소장 현황 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 도서 예약\n   * 실제 API: 각 도서관별 대출/예약 시스템 API\n   */\n  async reserveBook(bookId, libraryId, userId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/books/reserve`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ bookId, libraryId, userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log(`도서 예약 요청: 도서 ${bookId}, 도서관 ${libraryId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('도서 예약 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 조회\n   * 실제 API: 각 도서관별 프로그램 API 또는 커뮤니티 API\n   */\n  async getReadingGroups(libraryId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups?libraryId=${libraryId}&apiKey=${this.config.apiKey}`);\n      // const data = await response.json();\n      // return data.result;\n\n      // 현재는 더미 데이터 반환\n      if (libraryId) {\n        return dummyReadingGroups.filter(group => group.libraryId === libraryId);\n      }\n      return dummyReadingGroups;\n    } catch (error) {\n      console.error('독서 모임 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 독서 모임 가입\n   */\n  async joinReadingGroup(groupId, userId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups/${groupId}/join`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log(`독서 모임 가입 요청: 모임 ${groupId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 가입 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 생성\n   */\n  async createReadingGroup(groupData) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ ...groupData, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log('독서 모임 생성 요청:', groupData);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 생성 실패:', error);\n      return false;\n    }\n  }\n}\n\n// 기본 API 설정 (환경변수에서 로드)\nexport const defaultLibraryAPI = new LibraryAPIService({\n  baseURL: process.env.REACT_APP_GYEONGGI_API_URL || 'https://openapi.gg.go.kr',\n  apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d'\n});\n\n// API 키 설정 가이드\nexport const API_SETUP_GUIDE = {\n  title: '경기도 공공데이터 API 연동 가이드',\n  steps: [{\n    step: 1,\n    title: '경기데이터드림 회원가입',\n    description: 'https://data.gg.go.kr 에서 회원가입',\n    url: 'https://data.gg.go.kr'\n  }, {\n    step: 2,\n    title: 'API 키 발급',\n    description: '도서관 정보 API 서비스 신청 및 키 발급',\n    note: '승인까지 1-2일 소요'\n  }, {\n    step: 3,\n    title: '환경변수 설정',\n    description: '.env 파일에 API 키 추가',\n    code: `REACT_APP_GYEONGGI_API_URL=https://openapi.gg.go.kr\nREACT_APP_GYEONGGI_API_KEY=your_api_key_here\nREACT_APP_LIBRARY_API_KEY=your_library_api_key_here`\n  }, {\n    step: 4,\n    title: '도서관정보나루 연동',\n    description: 'data4library.kr에서 추가 도서 정보 API 활용',\n    url: 'https://www.data4library.kr'\n  }],\n  additionalAPIs: [{\n    name: '경기데이터드림',\n    url: 'https://data.gg.go.kr',\n    description: '경기도 공공데이터 포털',\n    apis: ['도서관 시설 정보', '문화시설 현황', '공공시설 위치 정보']\n  }, {\n    name: '도서관정보나루',\n    url: 'https://www.data4library.kr',\n    description: '국가도서관통계시스템',\n    apis: ['전국 도서관 정보', '도서 검색', '대출 통계']\n  }, {\n    name: '각 시군 Open API',\n    description: '수원시, 성남시 등 각 지역별 API',\n    apis: ['지역별 도서관 API', '문화 프로그램 정보', '시설 예약 시스템']\n  }]\n};\n\n// 도서관 정보나루 API 서비스\nconst BASE_URL = 'http://data4library.kr/api';\n\n// API 인증키 (실제 인증키로 설정)\n// 도서관정보나루 API 키 설정됨\nconst AUTH_KEY = process.env.REACT_APP_LIBRARY_API_KEY || '651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8';\n\n// API 승인 상태 확인 함수\nexport const checkApiApprovalStatus = async apiKey => {\n  try {\n    var _data$message, _data$message2;\n    const response = await fetch(`https://www.data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2024-01-01&endDt=2024-01-31&pageNo=1&pageSize=1&format=json`);\n    const data = await response.json();\n\n    // API 키가 승인되지 않은 경우 에러 응답을 받음\n    if (data.error || (_data$message = data.message) !== null && _data$message !== void 0 && _data$message.includes('인증키') || (_data$message2 = data.message) !== null && _data$message2 !== void 0 && _data$message2.includes('승인')) {\n      return false;\n    }\n    return true;\n  } catch (error) {\n    console.error('API 승인 상태 확인 중 오류:', error);\n    return false;\n  }\n};\n\n// 지역 코드 매핑 및 연령대 매핑 (필요 시 사용)\n\n// XML 응답을 파싱하는 함수\nconst parseXMLResponse = xmlString => {\n  try {\n    // DOMParser를 사용하여 XML 파싱\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n\n    // 파싱 오류 체크\n    const parseError = xmlDoc.getElementsByTagName('parsererror')[0];\n    if (parseError) {\n      console.error('XML 파싱 오류:', parseError.textContent);\n      return {\n        response: {\n          docs: []\n        }\n      };\n    }\n\n    // 인기대출도서 데이터 추출\n    const docs = xmlDoc.getElementsByTagName('doc');\n    const books = [];\n    for (let i = 0; i < docs.length; i++) {\n      const doc = docs[i];\n      const book = {};\n\n      // 각 필드 추출\n      const getTextContent = tagName => {\n        const element = doc.getElementsByTagName(tagName)[0];\n        return (element === null || element === void 0 ? void 0 : element.textContent) || '';\n      };\n      book.bookname = getTextContent('bookname');\n      book.authors = getTextContent('authors');\n      book.publisher = getTextContent('publisher');\n      book.publication_year = getTextContent('publication_year');\n      book.isbn13 = getTextContent('isbn13');\n      book.loan_count = parseInt(getTextContent('loan_count')) || 0;\n      book.ranking = parseInt(getTextContent('ranking')) || 0;\n      if (book.bookname && book.bookname.trim() !== '') {\n        books.push(book);\n      }\n    }\n    console.log(`📚 XML에서 추출된 도서 ${books.length}권:`, books);\n    return {\n      response: {\n        docs: books,\n        numFound: books.length,\n        start: 0\n      }\n    };\n  } catch (error) {\n    console.error('XML 파싱 중 오류 발생:', error);\n    return {\n      response: {\n        docs: []\n      }\n    };\n  }\n};\n/**\n * 인기 대출 도서 조회 API\n */\nexport const fetchPopularBooks = async (startDate, endDate) => {\n  // 기본값: 실제 데이터가 있는 최근 기간 (2025년 데이터 사용)\n  const defaultEndDate = '2025-07-13'; // 2025년 7월 13일\n  const defaultStartDate = '2025-01-01'; // 2025년 시작\n\n  const actualStartDate = startDate || defaultStartDate;\n  const actualEndDate = endDate || defaultEndDate;\n  try {\n    var _data$response5, _data$response6, _data$response6$docs, _rawBooks;\n    const params = new URLSearchParams({\n      authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n      startDt: actualStartDate,\n      endDt: actualEndDate,\n      pageNo: '1',\n      pageSize: '20'\n    });\n    const url = `http://data4library.kr/api/loanItemSrch?${params}`;\n    console.log(`🔥 인기대출도서 API 호출 (${actualStartDate} ~ ${actualEndDate}):`, url);\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`API 호출 실패: ${response.status}`);\n    }\n    const responseText = await response.text();\n    console.log('📊 인기도서 API 원본 응답:', responseText.substring(0, 500) + '...');\n    let data;\n    try {\n      // JSON 파싱 시도\n      data = JSON.parse(responseText);\n    } catch (jsonError) {\n      // XML 응답인 경우 파싱\n      console.log('⚠️ JSON 파싱 실패, XML 응답 처리 중...');\n      data = parseXMLResponse(responseText);\n    }\n    console.log('📊 인기도서 API 파싱된 데이터:', JSON.stringify(data, null, 2));\n\n    // API 에러 체크\n    if (data.response && data.response.error) {\n      console.warn('API 에러:', data.response.error);\n      if (data.response.error.includes('활성화')) {\n        console.log('💡 API 키가 아직 활성화되지 않았습니다. 더미 데이터를 사용합니다.');\n      }\n      throw new Error(data.response.error);\n    }\n    console.log('🔍 API 응답 구조 분석:');\n    console.log('- data.response:', data.response);\n    console.log('- data.response.docs:', (_data$response5 = data.response) === null || _data$response5 === void 0 ? void 0 : _data$response5.docs);\n    console.log('- docs 길이:', (_data$response6 = data.response) === null || _data$response6 === void 0 ? void 0 : (_data$response6$docs = _data$response6.docs) === null || _data$response6$docs === void 0 ? void 0 : _data$response6$docs.length);\n\n    // API 응답 데이터 구조에 맞게 변환\n    let rawBooks = [];\n    if (data.response && data.response.docs) {\n      rawBooks = data.response.docs;\n    } else if (data.response && data.response.result) {\n      rawBooks = data.response.result.docs || [];\n    } else if (Array.isArray(data.response)) {\n      rawBooks = data.response;\n    }\n    console.log('📚 원본 도서 데이터:', rawBooks);\n    const books = ((_rawBooks = rawBooks) === null || _rawBooks === void 0 ? void 0 : _rawBooks.filter(book => {\n      console.log('📖 개별 도서 데이터:', book);\n      return book.bookname && book.bookname.trim() !== '';\n    }).map((book, index) => ({\n      id: book.isbn || `book_${index}`,\n      title: book.bookname.trim(),\n      // 제목 공백 제거\n      author: book.authors || '작가 미상',\n      publisher: book.publisher || '출판사 미상',\n      isbn: book.isbn || '',\n      loanCount: parseInt(book.loan_count) || (index + 1) * 1000,\n      // 대출수가 없으면 순위 기반으로 추정\n      category: book.class_nm || '일반',\n      publishYear: book.publication_year || '2023'\n    }))) || [];\n    console.log(`🏆 인기도서 ${books.length}권 조회 완료:`, books);\n    return books;\n  } catch (error) {\n    console.error('❌ 인기도서 API 호출 오류:', error);\n\n    // API 호출 실패시 더미 데이터 반환\n    return getFallbackPopularBooks();\n  }\n};\n\n/**\n * API 호출 실패시 사용할 더미 데이터\n */\n// 성인 대상 인기 도서 Top 5 (아동 도서 제외, 최신순)\nconst getFallbackPopularBooks = () => {\n  console.log('📚 Fallback 인기도서 데이터 사용 (성인 대상 Top 5)');\n  return [{\n    id: '1',\n    title: '2030 자산관리 고민백서',\n    author: '오건영',\n    publisher: '비즈니스북스',\n    isbn: '9791162542439',\n    loanCount: 5420,\n    category: '경제',\n    publishYear: '2023'\n  }, {\n    id: '2',\n    title: '트렌드 코리아 2024',\n    author: '김난도',\n    publisher: '미래의창',\n    isbn: '9788959897264',\n    loanCount: 4890,\n    category: '사회',\n    publishYear: '2023'\n  }, {\n    id: '3',\n    title: '세이노의 가르침',\n    author: '세이노',\n    publisher: '데이원',\n    isbn: '9791191043297',\n    loanCount: 4321,\n    category: '자기계발',\n    publishYear: '2023'\n  }, {\n    id: '4',\n    title: '불편한 편의점',\n    author: '김호연',\n    publisher: '나무옆의자',\n    isbn: '9791167370778',\n    loanCount: 4156,\n    category: '소설',\n    publishYear: '2021'\n  }, {\n    id: '5',\n    title: '달러구트 꿈 백화점',\n    author: '이미예',\n    publisher: '팩토리나인',\n    isbn: '9791165340564',\n    loanCount: 3987,\n    category: '소설',\n    publishYear: '2020'\n  }];\n};\n\n/**\n * 도서 검색 API 함수 (외부에서 직접 호출용)\n */\nexport const searchBooksAPI = async (query, pageNo = 1, pageSize = 10) => {\n  const apiService = new LibraryAPIService({\n    baseURL: BASE_URL,\n    apiKey: AUTH_KEY\n  });\n  return await apiService.searchBooks({\n    query,\n    pageNo,\n    pageSize\n  });\n};\n\n/**\n * API 연결 상태 테스트\n */\nexport const testApiConnection = async () => {\n  try {\n    console.log('🔄 API 연결 테스트 시작...');\n\n    // 1. 도서관정보나루 API 테스트\n    const testQuery = '해리포터';\n    const searchUrl = `${BASE_URL}/srchBooks`;\n    const params = new URLSearchParams({\n      authKey: AUTH_KEY,\n      format: 'json',\n      pageNo: '1',\n      pageSize: '5',\n      keyword: testQuery\n    });\n    const libraryResponse = await fetch(`${searchUrl}?${params}`);\n    const libraryData = await libraryResponse.json();\n\n    // 2. 경기데이터드림 API 테스트 (여러 시도)\n    const gyeonggiApiKey = process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d';\n    let gyeonggiResponse;\n    let gyeonggiData;\n\n    // 첫 번째 시도: 올바른 엔드포인트 사용\n    try {\n      const gyeonggiUrl1 = `https://openapi.gg.go.kr/TBGGIBLLBR`;\n      const gyeonggiParams1 = new URLSearchParams({\n        KEY: gyeonggiApiKey,\n        Type: 'json',\n        pIndex: '1',\n        pSize: '10'\n      });\n      gyeonggiResponse = await fetch(`${gyeonggiUrl1}?${gyeonggiParams1}`);\n      gyeonggiData = await gyeonggiResponse.json();\n      if (!gyeonggiResponse.ok) {\n        throw new Error('First attempt failed');\n      }\n    } catch (error) {\n      // 두 번째 시도: 다른 매개변수 형식\n      try {\n        const gyeonggiUrl2 = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${gyeonggiApiKey}&Type=json&pIndex=1&pSize=10`;\n        gyeonggiResponse = await fetch(gyeonggiUrl2);\n        gyeonggiData = await gyeonggiResponse.json();\n        if (!gyeonggiResponse.ok) {\n          throw new Error('Second attempt failed');\n        }\n      } catch (error2) {\n        // 세 번째 시도: 기본 매개변수만 사용\n        try {\n          const gyeonggiUrl3 = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${gyeonggiApiKey}`;\n          gyeonggiResponse = await fetch(gyeonggiUrl3);\n          gyeonggiData = await gyeonggiResponse.json();\n          if (!gyeonggiResponse.ok) {\n            throw new Error('Third attempt failed');\n          }\n        } catch (error3) {\n          // 모든 시도 실패 시 기본값\n          gyeonggiResponse = {\n            ok: false\n          };\n          gyeonggiData = {\n            error: 'All attempts failed'\n          };\n        }\n      }\n    }\n    const libraryApiSuccess = libraryResponse.ok && libraryData.response && libraryData.response.docs;\n    const gyeonggiApiSuccess = gyeonggiResponse.ok && gyeonggiData.TBGGIBLLBR && gyeonggiData.TBGGIBLLBR[1];\n    if (libraryApiSuccess && gyeonggiApiSuccess) {\n      var _gyeonggiData$TBGGIBL;\n      console.log('✅ 도서관정보나루 API 연결 성공');\n      console.log('✅ 경기데이터드림 API 연결 성공');\n      return {\n        success: true,\n        message: '모든 API 연결 성공! 실제 도서관 데이터를 사용합니다.',\n        details: {\n          libraryBooks: libraryData.response.numFound,\n          gyeonggiLibraries: ((_gyeonggiData$TBGGIBL = gyeonggiData.TBGGIBLLBR[1].row) === null || _gyeonggiData$TBGGIBL === void 0 ? void 0 : _gyeonggiData$TBGGIBL.length) || 0,\n          sampleBooks: libraryData.response.docs.slice(0, 3)\n        }\n      };\n    } else if (libraryApiSuccess) {\n      console.log('✅ 도서관정보나루 API 연결 성공');\n      console.log('❌ 경기데이터드림 API 연결 실패');\n      return {\n        success: true,\n        message: '도서관정보나루 API만 연결됨. 도서 검색은 가능하지만 일부 기능이 제한됩니다.',\n        details: {\n          libraryBooks: libraryData.response.numFound,\n          gyeonggiLibraries: 0,\n          sampleBooks: libraryData.response.docs.slice(0, 3)\n        }\n      };\n    } else {\n      var _gyeonggiData;\n      console.log('❌ 도서관정보나루 API 연결 실패');\n      console.log('❌ 경기데이터드림 API 연결 실패');\n\n      // 각 API의 실패 원인을 자세히 분석\n      const failureAnalysis = {\n        libraryApi: {\n          status: libraryResponse.status,\n          statusText: libraryResponse.statusText,\n          data: libraryData\n        },\n        gyeonggiApi: {\n          status: gyeonggiResponse.ok ? 'ok' : 'failed',\n          data: gyeonggiData,\n          error: ((_gyeonggiData = gyeonggiData) === null || _gyeonggiData === void 0 ? void 0 : _gyeonggiData.error) || 'Unknown error'\n        }\n      };\n      return {\n        success: false,\n        message: 'API 연결 실패. 브라우저에서 CORS 제한이나 API 키 문제일 수 있습니다.',\n        details: failureAnalysis\n      };\n    }\n  } catch (error) {\n    console.error('API 연결 테스트 오류:', error);\n    return {\n      success: false,\n      message: 'API 연결 오류. 네트워크를 확인하거나 더미 데이터를 사용합니다.',\n      details: error\n    };\n  }\n};\n\n/**\n * 경기데이터드림 API CORS 우회 테스트\n */\nexport const testGyeonggiApiWithProxy = async (apiKey = '8b62aa70e514468596e9324d064d582d') => {\n  try {\n    // 올바른 엔드포인트 사용\n    const methods = [\n    // 1. 올바른 엔드포인트 직접 호출\n    {\n      name: 'Correct Endpoint',\n      url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}&Type=json&pIndex=1&pSize=5`\n    },\n    // 2. 추가 매개변수 포함\n    {\n      name: 'With Additional Params',\n      url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}&Type=json&pIndex=1&pSize=10`\n    },\n    // 3. 매개변수 순서 변경\n    {\n      name: 'Parameter Order Change',\n      url: `https://openapi.gg.go.kr/TBGGIBLLBR?Type=json&KEY=${apiKey}&pIndex=1&pSize=5`\n    },\n    // 4. 파라미터 없이 기본 호출\n    {\n      name: 'Basic Call',\n      url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}`\n    }];\n    for (const method of methods) {\n      try {\n        console.log(`🔄 ${method.name} 시도:`, method.url);\n        const response = await fetch(method.url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          mode: 'cors'\n        });\n        console.log(`📊 ${method.name} 응답:`, response.status, response.statusText);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(`✅ ${method.name} 성공:`, data);\n          return {\n            success: true,\n            message: `경기데이터드림 API 연결 성공 (${method.name})`,\n            details: {\n              method: method.name,\n              url: method.url,\n              data: data\n            }\n          };\n        } else {\n          const errorText = await response.text();\n          console.log(`❌ ${method.name} 실패:`, errorText);\n        }\n      } catch (error) {\n        console.log(`❌ ${method.name} 오류:`, error);\n      }\n    }\n    return {\n      success: false,\n      message: '모든 경기데이터드림 API 연결 방법 실패. CORS 문제이거나 API 키가 유효하지 않을 수 있습니다.',\n      details: {\n        attempted_methods: methods.map(m => m.name),\n        suggestion: 'API 키가 활성화될 때까지 기다리거나, 서버사이드에서 API를 호출하는 것을 고려해보세요.'\n      }\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: '경기데이터드림 API 테스트 중 오류 발생',\n      details: error\n    };\n  }\n};\n\n/**\n * API 연결 문제 해결 가이드\n */\nexport const getApiTroubleshootingGuide = () => {\n  return ['🔧 API 연결 문제 해결 방법:', '', '1. API 키 확인:', '   - 도서관정보나루: 651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8', '   - 경기데이터드림: 8b62aa70e514468596e9324d064d582d', '', '2. API 키 활성화 상태:', '   - 신청 후 1-2시간 정도 소요될 수 있습니다', '   - 각 사이트에서 승인 상태를 확인해보세요', '', '3. CORS 문제 (브라우저 보안 정책):', '   - 브라우저에서 직접 호출 시 발생할 수 있습니다', '   - 개발 중에는 더미 데이터를 사용합니다', '   - 배포 시에는 서버사이드에서 API를 호출하세요', '', '4. 네트워크 문제:', '   - 인터넷 연결을 확인해보세요', '   - 방화벽이나 프록시 설정을 확인해보세요', '', '5. 현재 상태:', '   - 도서관정보나루 API: 정상 작동 중', '   - 경기데이터드림 API: 연결 문제 (CORS 또는 API 키)', '', '📞 문의처:', '   - 도서관정보나루: http://data4library.kr', '   - 경기데이터드림: https://data.gg.go.kr'];\n};\n\n/**\n * 현재 API 설정 정보 확인\n */\nexport const getApiStatus = () => {\n  const hasApiKey = Boolean(AUTH_KEY && AUTH_KEY !== 'your_actual_api_key_here' && AUTH_KEY.length > 10);\n  const isFromEnv = process.env.REACT_APP_LIBRARY_API_KEY !== undefined;\n  return {\n    configured: hasApiKey,\n    apiKey: AUTH_KEY ? `${AUTH_KEY.substring(0, 10)}...` : 'Not set',\n    message: hasApiKey ? `API 키 설정됨 (${isFromEnv ? '환경변수' : '코드'})` : 'API 키를 설정해주세요'\n  };\n};\n\n/**\n * 환경 설정 확인\n */\nexport const checkApiConfiguration = () => {\n  if (!AUTH_KEY || AUTH_KEY.length < 10) {\n    console.warn('⚠️ API 인증키가 설정되지 않았습니다. 더미 데이터를 사용합니다.');\n    return false;\n  }\n  console.log('✅ API 인증키가 설정되었습니다.');\n  return true;\n};\n\n/**\n * 실제 API 사용 예시\n */\nexport const exampleApiUsage = async () => {\n  try {\n    // 도서 검색 예시\n    console.log('=== 도서 검색 API 테스트 ===');\n    const searchResults = await searchBooksAPI('사피엔스', 1, 5);\n    console.log('검색 결과:', searchResults);\n\n    // 인기 도서 조회 예시\n    console.log('=== 인기 도서 API 테스트 ===');\n    const popularBooks = await fetchPopularBooks();\n    console.log('인기도서 목록:', popularBooks);\n    return {\n      searchResults,\n      popularBooks\n    };\n  } catch (error) {\n    console.error('API 사용 예시 오류:', error);\n    return {\n      searchResults: [],\n      popularBooks: []\n    };\n  }\n};\n\n/**\n * 브라우저에서 API 테스트를 위한 전역 함수\n */\nif (typeof window !== 'undefined') {\n  window.testLibraryAPI = async () => {\n    console.log('🔍 도서관 API 테스트 시작...');\n\n    // 1. API 설정 상태 확인\n    const apiStatus = getApiStatus();\n    console.log('📊 API 설정 상태:', apiStatus);\n\n    // 2. API 연결 테스트\n    try {\n      const connectionTest = await testApiConnection();\n      console.log('🔗 API 연결 테스트 결과:', connectionTest);\n      if (connectionTest.success) {\n        var _connectionTest$detai, _connectionTest$detai2, _connectionTest$detai3;\n        console.log('✅ 성공! 실제 도서관 데이터 사용 가능');\n        console.log('📚 도서 검색 결과:', (_connectionTest$detai = connectionTest.details) === null || _connectionTest$detai === void 0 ? void 0 : _connectionTest$detai.libraryBooks, '권');\n        console.log('🏛️ 경기도 도서관 수:', (_connectionTest$detai2 = connectionTest.details) === null || _connectionTest$detai2 === void 0 ? void 0 : _connectionTest$detai2.gyeonggiLibraries, '개');\n        console.log('📖 샘플 도서 데이터:', (_connectionTest$detai3 = connectionTest.details) === null || _connectionTest$detai3 === void 0 ? void 0 : _connectionTest$detai3.sampleBooks);\n      } else {\n        console.log('❌ 실패:', connectionTest.message);\n      }\n      return connectionTest;\n    } catch (error) {\n      console.error('🚨 API 테스트 오류:', error);\n      return {\n        success: false,\n        message: 'API 테스트 실행 오류',\n        details: error\n      };\n    }\n  };\n  window.searchLibraryBooks = async (query = '해리포터') => {\n    console.log(`🔍 도서 검색 테스트: \"${query}\"`);\n    try {\n      const results = await searchBooksAPI(query, 1, 5);\n      console.log('📚 검색 결과:', results);\n      if (results && results.length > 0) {\n        console.log(`✅ ${results.length}권의 도서를 찾았습니다!`);\n        results.forEach((book, index) => {\n          console.log(`${index + 1}. ${book.title} - ${book.author} (${book.publisher})`);\n        });\n      } else {\n        console.log('❌ 검색 결과가 없습니다.');\n      }\n      return results;\n    } catch (error) {\n      console.error('🚨 도서 검색 오류:', error);\n      return [];\n    }\n  };\n  window.testGyeonggiAPI = async () => {\n    console.log('🔍 경기데이터드림 API 단독 테스트...');\n    return await testGyeonggiApiWithProxy();\n  };\n  window.showApiGuide = () => {\n    console.log('📖 API 문제 해결 가이드:');\n    const guide = getApiTroubleshootingGuide();\n    guide.forEach(line => console.log(line));\n    return guide;\n  };\n}\n\n/**\n * 전체 API 시스템 종합 테스트\n */\nif (typeof window !== 'undefined') {\n  window.testAllLibraryAPIs = async () => {\n    console.log('🔥 === 도서관 API 종합 테스트 시작 === 🔥');\n    try {\n      // 1. 기본 API 연결 테스트\n      console.log('\\n1️⃣ 기본 API 연결 테스트...');\n      const connectionTest = await testApiConnection();\n      console.log('결과:', connectionTest);\n\n      // 2. 도서 검색 테스트\n      console.log('\\n2️⃣ 도서 검색 테스트...');\n      const searchResults = await searchBooksAPI('해리포터', 1, 5);\n      console.log('검색 결과:', searchResults);\n\n      // 3. 인기 도서 조회 테스트\n      console.log('\\n3️⃣ 인기 도서 조회 테스트...');\n      const popularBooks = await fetchPopularBooks();\n      console.log('인기 도서:', popularBooks);\n\n      // 4. 경기도 도서관 정보 테스트\n      console.log('\\n4️⃣ 경기도 도서관 정보 테스트...');\n      const libraryAPI = new LibraryAPIService({\n        baseURL: 'https://openapi.gg.go.kr',\n        apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d'\n      });\n      const libraries = await libraryAPI.getLibraries();\n      console.log('경기도 도서관 목록:', libraries.length, '개');\n      console.log('샘플 도서관:', libraries.slice(0, 3));\n\n      // 5. 종합 결과\n      console.log('\\n🎯 === 종합 테스트 결과 === 🎯');\n      console.log('✅ API 연결 상태:', connectionTest.success ? '성공' : '실패');\n      console.log('📚 검색 가능 도서 수:', searchResults.length, '권');\n      console.log('🔥 인기 도서 수:', popularBooks.length, '권');\n      console.log('🏛️ 경기도 도서관 수:', libraries.length, '개');\n      if (connectionTest.success && searchResults.length > 0) {\n        console.log('🎉 모든 API가 정상 작동하고 있습니다!');\n      } else {\n        console.log('⚠️ 일부 API에 문제가 있습니다. 더미 데이터를 사용합니다.');\n      }\n      return {\n        connectionTest,\n        searchResults,\n        popularBooks,\n        libraries: libraries.length\n      };\n    } catch (error) {\n      console.error('🚨 종합 테스트 오류:', error);\n      return null;\n    }\n  };\n}\n\n/**\n * 브라우저 콘솔에서 직접 테스트할 수 있는 함수\n * 사용법: testCorrectGyeonggiAPI()\n */\nexport const testCorrectGyeonggiAPI = async () => {\n  console.log('🔍 올바른 경기데이터드림 API 엔드포인트 테스트 시작...');\n  const apiKey = '8b62aa70e514468596e9324d064d582d';\n  const correctUrl = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}`;\n  try {\n    console.log('📞 API 호출:', correctUrl);\n    const response = await fetch(correctUrl);\n    console.log('📊 응답 상태:', response.status, response.statusText);\n    if (response.ok) {\n      const data = await response.json();\n      console.log('✅ API 연결 성공!');\n      console.log('📋 응답 데이터:', data);\n      if (data.TBGGIBLLBR && data.TBGGIBLLBR[1] && data.TBGGIBLLBR[1].row) {\n        console.log('📚 도서관 개수:', data.TBGGIBLLBR[1].row.length);\n        console.log('📍 첫 번째 도서관:', data.TBGGIBLLBR[1].row[0]);\n      }\n    } else {\n      console.log('❌ API 호출 실패:', response.status, response.statusText);\n    }\n  } catch (error) {\n    console.log('🚨 오류 발생:', error);\n  }\n};\n\n// 도서관정보나루 API 직접 테스트\nexport const testLibraryAPI = async () => {\n  const apiKey = process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY;\n  console.log('🔑 사용 중인 API 키:', `${apiKey.substring(0, 10)}...`);\n\n  // 1. 간단한 도서관 조회 API 테스트\n  const libTestUrl = `http://data4library.kr/api/libSrch?authKey=${apiKey}&pageNo=1&pageSize=5`;\n  console.log('🏛️ 도서관 조회 API 테스트:', libTestUrl);\n  try {\n    const response = await fetch(libTestUrl);\n    const data = await response.text(); // 먼저 text로 받아보기\n\n    console.log('📄 도서관 조회 API 응답 (원본):', data);\n\n    // XML 응답을 JSON으로 파싱 시도\n    try {\n      const jsonData = JSON.parse(data);\n      console.log('✅ JSON 파싱 성공:', jsonData);\n    } catch (parseError) {\n      console.log('⚠️ JSON 파싱 실패, XML 응답인 것 같습니다');\n    }\n  } catch (error) {\n    console.error('❌ 도서관 조회 API 테스트 실패:', error);\n  }\n\n  // 2. 인기대출도서 API 테스트\n  const popularTestUrl = `http://data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2023-01-01&endDt=2023-12-31&pageNo=1&pageSize=5`;\n  console.log('🏆 인기대출도서 API 테스트:', popularTestUrl);\n  try {\n    const response = await fetch(popularTestUrl);\n    const data = await response.text(); // 먼저 text로 받아보기\n\n    console.log('📄 인기대출도서 API 응답 (원본):', data.substring(0, 500) + '...');\n\n    // XML 응답을 JSON으로 파싱 시도\n    try {\n      const jsonData = JSON.parse(data);\n      console.log('✅ JSON 파싱 성공:', jsonData);\n    } catch (parseError) {\n      console.log('⚠️ JSON 파싱 실패, XML 응답 처리 중...');\n      const xmlData = parseXMLResponse(data);\n      console.log('✅ XML 파싱 성공:', xmlData);\n      console.log('📊 추출된 도서 수:', xmlData.response.docs.length);\n    }\n  } catch (error) {\n    console.error('❌ 인기대출도서 API 테스트 실패:', error);\n  }\n};\n\n// 전역 객체에 함수 추가 (브라우저 콘솔에서 쉽게 접근)\nif (typeof window !== 'undefined') {\n  window.testCorrectGyeonggiAPI = testCorrectGyeonggiAPI;\n  window.testLibraryAPI = testLibraryAPI;\n}","map":{"version":3,"names":["dummyLibraries","id","name","address","phone","hours","website","distance","coordinates","lat","lng","type","dummyBooks","title","author","publisher","isbn","category","publishYear","description","imageUrl","dummyReadingGroups","libraryId","libraryName","meetingDate","meetingTime","maxMembers","currentMembers","bookTitle","bookAuthor","difficulty","meetingType","organizer","contact","status","LibraryAPIService","constructor","config","getLibraries","location","radius","apiUrl","params","URLSearchParams","KEY","process","env","REACT_APP_GYEONGGI_API_KEY","Type","pIndex","pSize","response","fetch","ok","Error","data","json","libraries","TBGGIBLLBR","row","map","item","index","toString","LBRRY_NM","REFINE_ROADNM_ADDR","REFINE_LOTNO_ADDR","TELNO","OPER_TIME","HMPG_ADDR","Math","round","random","parseFloat","REFINE_WGS84_LAT","REFINE_WGS84_LOGT","additionalLibraries","error","console","log","searchBooks","_data$response","_data$response2","_data$response3","_data$response4","_data$response4$docs","searchParams","authKey","REACT_APP_LIBRARY_API_KEY","AUTH_KEY","query","pageNo","pageSize","format","JSON","stringify","docs","book","result","length","rawBooks","Array","isArray","books","filter","bookname","trim","authors","class_nm","publication_year","bookImageURL","loanCount","parseInt","loan_count","warn","getDummyBooks","toLowerCase","includes","floor","getBookAvailability","libs","availability","lib","libCode","libName","available","loanAvailable","loanable","reservable","reserveAvailable","dueDate","returnPlanDate","undefined","reserveBook","bookId","userId","getReadingGroups","group","joinReadingGroup","groupId","createReadingGroup","groupData","defaultLibraryAPI","baseURL","REACT_APP_GYEONGGI_API_URL","apiKey","API_SETUP_GUIDE","steps","step","url","note","code","additionalAPIs","apis","BASE_URL","checkApiApprovalStatus","_data$message","_data$message2","message","parseXMLResponse","xmlString","parser","DOMParser","xmlDoc","parseFromString","parseError","getElementsByTagName","textContent","i","doc","getTextContent","tagName","element","isbn13","ranking","push","numFound","start","fetchPopularBooks","startDate","endDate","defaultEndDate","defaultStartDate","actualStartDate","actualEndDate","_data$response5","_data$response6","_data$response6$docs","_rawBooks","startDt","endDt","responseText","text","substring","parse","jsonError","getFallbackPopularBooks","searchBooksAPI","apiService","testApiConnection","testQuery","searchUrl","keyword","libraryResponse","libraryData","gyeonggiApiKey","gyeonggiResponse","gyeonggiData","gyeonggiUrl1","gyeonggiParams1","gyeonggiUrl2","error2","gyeonggiUrl3","error3","libraryApiSuccess","gyeonggiApiSuccess","_gyeonggiData$TBGGIBL","success","details","libraryBooks","gyeonggiLibraries","sampleBooks","slice","_gyeonggiData","failureAnalysis","libraryApi","statusText","gyeonggiApi","testGyeonggiApiWithProxy","methods","method","headers","mode","errorText","attempted_methods","m","suggestion","getApiTroubleshootingGuide","getApiStatus","hasApiKey","Boolean","isFromEnv","configured","checkApiConfiguration","exampleApiUsage","searchResults","popularBooks","window","testLibraryAPI","apiStatus","connectionTest","_connectionTest$detai","_connectionTest$detai2","_connectionTest$detai3","searchLibraryBooks","results","forEach","testGyeonggiAPI","showApiGuide","guide","line","testAllLibraryAPIs","libraryAPI","testCorrectGyeonggiAPI","correctUrl","libTestUrl","jsonData","popularTestUrl","xmlData"],"sources":["C:/Users/qoo/Desktop/zziyoonii/senior/src/services/LibraryAPI.ts"],"sourcesContent":["import { LatLng } from 'leaflet';\n\n// 더미 데이터 - 경기도 도서관 (시립 중앙도서관 + 동네 작은도서관)\nexport const dummyLibraries = [\n  // 수원시 도서관들\n  {\n    id: '1',\n    name: '경기도립중앙도서관',\n    address: '경기 수원시 영통구 월드컵로 235',\n    phone: '031-249-4800',\n    hours: '09:00-18:00',\n    website: 'https://www.library.kr/',\n    distance: 0.8,\n    coordinates: { lat: 37.299, lng: 127.070 },\n    type: '공공도서관'\n  },\n  {\n    id: '2',\n    name: '수원시립중앙도서관',\n    address: '경기 수원시 영통구 광교로 183',\n    phone: '031-228-4300',\n    hours: '09:00-22:00',\n    website: 'https://www.suwonlib.go.kr/',\n    distance: 1.2,\n    coordinates: { lat: 37.295, lng: 127.075 },\n    type: '공공도서관'\n  },\n  {\n    id: '3',\n    name: '영통구립도서관',\n    address: '경기 수원시 영통구 영통동 999-1',\n    phone: '031-228-4350',\n    hours: '09:00-20:00',\n    website: 'https://www.suwonlib.go.kr/',\n    distance: 1.5,\n    coordinates: { lat: 37.293, lng: 127.073 },\n    type: '구립도서관'\n  },\n  {\n    id: '4',\n    name: '광교작은도서관',\n    address: '경기 수원시 영통구 광교동 1275',\n    phone: '031-228-4380',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 1.8,\n    coordinates: { lat: 37.291, lng: 127.077 },\n    type: '작은도서관'\n  },\n  {\n    id: '5',\n    name: '망포작은도서관',\n    address: '경기 수원시 영통구 망포동 578-2',\n    phone: '031-228-4390',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 2.1,\n    coordinates: { lat: 37.285, lng: 127.065 },\n    type: '작은도서관'\n  },\n  \n  // 성남시 도서관들\n  {\n    id: '6',\n    name: '성남시립중앙도서관',\n    address: '경기 성남시 분당구 양현로 346',\n    phone: '031-729-4600',\n    hours: '09:00-18:00',\n    website: 'https://www.snlib.go.kr/',\n    distance: 2.5,\n    coordinates: { lat: 37.350, lng: 127.105 },\n    type: '공공도서관'\n  },\n  {\n    id: '7',\n    name: '분당구립정자도서관',\n    address: '경기 성남시 분당구 정자동 178-1',\n    phone: '031-729-4650',\n    hours: '09:00-20:00',\n    website: 'https://www.snlib.go.kr/',\n    distance: 2.8,\n    coordinates: { lat: 37.365, lng: 127.110 },\n    type: '구립도서관'\n  },\n  {\n    id: '8',\n    name: '서현작은도서관',\n    address: '경기 성남시 분당구 서현동 271-3',\n    phone: '031-729-4670',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.1,\n    coordinates: { lat: 37.348, lng: 127.123 },\n    type: '작은도서관'\n  },\n  {\n    id: '9',\n    name: '야탑작은도서관',\n    address: '경기 성남시 분당구 야탑동 344-10',\n    phone: '031-729-4680',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.3,\n    coordinates: { lat: 37.341, lng: 127.128 },\n    type: '작은도서관'\n  },\n  \n  // 고양시 도서관들\n  {\n    id: '10',\n    name: '고양시립중앙도서관',\n    address: '경기 고양시 덕양구 고양대로 1955',\n    phone: '031-8075-9300',\n    hours: '09:00-18:00',\n    website: 'https://www.goyanglib.go.kr/',\n    distance: 4.2,\n    coordinates: { lat: 37.650, lng: 126.830 },\n    type: '공공도서관'\n  },\n  {\n    id: '11',\n    name: '일산동구립도서관',\n    address: '경기 고양시 일산동구 백석동 1256',\n    phone: '031-8075-9350',\n    hours: '09:00-20:00',\n    website: 'https://www.goyanglib.go.kr/',\n    distance: 4.5,\n    coordinates: { lat: 37.670, lng: 126.775 },\n    type: '구립도서관'\n  },\n  {\n    id: '12',\n    name: '백석작은도서관',\n    address: '경기 고양시 일산동구 백석동 1234-5',\n    phone: '031-8075-9380',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.8,\n    coordinates: { lat: 37.675, lng: 126.780 },\n    type: '작은도서관'\n  },\n  {\n    id: '13',\n    name: '마두작은도서관',\n    address: '경기 고양시 일산동구 마두동 775-2',\n    phone: '031-8075-9390',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 5.1,\n    coordinates: { lat: 37.655, lng: 126.785 },\n    type: '작은도서관'\n  },\n  \n  // 부천시 도서관들\n  {\n    id: '14',\n    name: '부천시립중앙도서관',\n    address: '경기 부천시 원미구 길주로 1',\n    phone: '032-625-4700',\n    hours: '09:00-18:00',\n    website: 'https://www.bclib.go.kr/',\n    distance: 3.1,\n    coordinates: { lat: 37.490, lng: 126.783 },\n    type: '공공도서관'\n  },\n  {\n    id: '15',\n    name: '원미구립도서관',\n    address: '경기 부천시 원미구 중동 1033-3',\n    phone: '032-625-4750',\n    hours: '09:00-20:00',\n    website: 'https://www.bclib.go.kr/',\n    distance: 3.4,\n    coordinates: { lat: 37.485, lng: 126.788 },\n    type: '구립도서관'\n  },\n  {\n    id: '16',\n    name: '중동작은도서관',\n    address: '경기 부천시 원미구 중동 1178-1',\n    phone: '032-625-4780',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.7,\n    coordinates: { lat: 37.488, lng: 126.791 },\n    type: '작은도서관'\n  },\n  {\n    id: '17',\n    name: '역곡작은도서관',\n    address: '경기 부천시 원미구 역곡동 201-8',\n    phone: '032-625-4790',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.0,\n    coordinates: { lat: 37.486, lng: 126.794 },\n    type: '작은도서관'\n  },\n  \n  // 안양시 도서관들\n  {\n    id: '18',\n    name: '안양시립중앙도서관',\n    address: '경기 안양시 만안구 문예로 30',\n    phone: '031-389-0800',\n    hours: '09:00-22:00',\n    website: 'https://www.aylib.go.kr/',\n    distance: 3.8,\n    coordinates: { lat: 37.400, lng: 126.950 },\n    type: '공공도서관'\n  },\n  {\n    id: '19',\n    name: '만안구립도서관',\n    address: '경기 안양시 만안구 안양동 678-49',\n    phone: '031-389-0850',\n    hours: '09:00-20:00',\n    website: 'https://www.aylib.go.kr/',\n    distance: 4.1,\n    coordinates: { lat: 37.395, lng: 126.955 },\n    type: '구립도서관'\n  },\n  {\n    id: '20',\n    name: '안양동작은도서관',\n    address: '경기 안양시 만안구 안양동 123-45',\n    phone: '031-389-0880',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.4,\n    coordinates: { lat: 37.398, lng: 126.958 },\n    type: '작은도서관'\n  },\n  \n  // 용인시 도서관들\n  {\n    id: '21',\n    name: '용인시립중앙도서관',\n    address: '경기 용인시 처인구 중부대로 1199',\n    phone: '031-324-4800',\n    hours: '09:00-18:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 4.8,\n    coordinates: { lat: 37.230, lng: 127.208 },\n    type: '공공도서관'\n  },\n  {\n    id: '22',\n    name: '수지구립도서관',\n    address: '경기 용인시 수지구 수지동 1234-1',\n    phone: '031-324-4850',\n    hours: '09:00-20:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.1,\n    coordinates: { lat: 37.325, lng: 127.095 },\n    type: '구립도서관'\n  },\n  {\n    id: '23',\n    name: '기흥구립도서관',\n    address: '경기 용인시 기흥구 구갈동 567-8',\n    phone: '031-324-4880',\n    hours: '09:00-20:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.4,\n    coordinates: { lat: 37.275, lng: 127.115 },\n    type: '구립도서관'\n  },\n  {\n    id: '23-1',\n    name: '처인도서관',\n    address: '경기 용인시 처인구 금령로 33번길 15',\n    phone: '031-324-4670',\n    hours: '09:00-18:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.6,\n    coordinates: { lat: 37.236, lng: 127.200 },\n    type: '공공도서관'\n  },\n  {\n    id: '23-2',\n    name: '서농도서관',\n    address: '경기 용인시 기흥구 서천서로 83',\n    phone: '031-324-4680',\n    hours: '09:00-18:00',\n    website: '',\n    distance: 5.8,\n    coordinates: { lat: 37.241, lng: 127.077 },\n    type: '공공도서관'\n  },\n  {\n    id: '23-3',\n    name: '포곡도서관',\n    address: '경기 용인시 처인구 포곡읍 에버랜드로 860',\n    phone: '031-324-4690',\n    hours: '09:00-18:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 6.0,\n    coordinates: { lat: 37.294, lng: 127.202 },\n    type: '공공도서관'\n  },\n  {\n    id: '23-4',\n    name: '흥덕도서관',\n    address: '경기 용인시 기흥구 흥덕중앙로 120',\n    phone: '031-324-4700',\n    hours: '09:00-18:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.2,\n    coordinates: { lat: 37.238, lng: 127.119 },\n    type: '공공도서관'\n  },\n  \n  // 화성시 도서관들\n  {\n    id: '24',\n    name: '화성시립중앙도서관',\n    address: '경기 화성시 남양읍 시청로 155',\n    phone: '031-369-6800',\n    hours: '09:00-18:00',\n    website: 'https://www.hscitylib.go.kr/',\n    distance: 6.2,\n    coordinates: { lat: 37.200, lng: 126.831 },\n    type: '공공도서관'\n  },\n  {\n    id: '25',\n    name: '동탄구립도서관',\n    address: '경기 화성시 동탄면 동탄대로 300',\n    phone: '031-369-6850',\n    hours: '09:00-20:00',\n    website: 'https://www.hscitylib.go.kr/',\n    distance: 6.5,\n    coordinates: { lat: 37.205, lng: 127.078 },\n    type: '구립도서관'\n  }\n];\n\n// 더미 도서 데이터\nexport const dummyBooks = [\n  {\n    id: 1,\n    title: '82년생 김지영',\n    author: '조남주',\n    publisher: '민음사',\n    isbn: '9788937473722',\n    category: '소설',\n    publishYear: '2016',\n    description: '한국 여성의 현실을 담은 화제의 소설',\n    imageUrl: ''\n  },\n  {\n    id: 2,\n    title: '미드나잇 라이브러리',\n    author: '매트 헤이그',\n    publisher: '인플루엔셜',\n    isbn: '9791197377109',\n    category: '소설',\n    publishYear: '2020',\n    description: '후회와 선택에 관한 철학적 소설',\n    imageUrl: ''\n  },\n  {\n    id: 3,\n    title: '사피엔스',\n    author: '유발 하라리',\n    publisher: '김영사',\n    isbn: '9788934972464',\n    category: '인문',\n    publishYear: '2015',\n    description: '인류의 역사를 다룬 베스트셀러',\n    imageUrl: ''\n  },\n  {\n    id: 4,\n    title: '아몬드',\n    author: '손원평',\n    publisher: '창비',\n    isbn: '9788936434267',\n    category: '소설',\n    publishYear: '2017',\n    description: '감정을 느끼지 못하는 소년의 성장 소설',\n    imageUrl: ''\n  },\n  {\n    id: 5,\n    title: '정의란 무엇인가',\n    author: '마이클 샌델',\n    publisher: '김영사',\n    isbn: '9788934942467',\n    category: '철학',\n    publishYear: '2010',\n    description: '정의에 대한 철학적 탐구',\n    imageUrl: ''\n  }\n];\n\n// 더미 독서모임 데이터\nexport const dummyReadingGroups = [\n  {\n    id: 1,\n    name: '시니어 독서 클럽',\n    description: '50-60대를 위한 독서 모임입니다.',\n    libraryId: '1',\n    libraryName: '경기도립중앙도서관',\n    meetingDate: '2024-01-15',\n    meetingTime: '14:00',\n    maxMembers: 15,\n    currentMembers: 8,\n    bookTitle: '82년생 김지영',\n    bookAuthor: '조남주',\n    category: '소설',\n    difficulty: '쉬움',\n    meetingType: 'library',\n    organizer: '김도서',\n    contact: '010-1234-5678',\n    status: 'active'\n  },\n  {\n    id: 2,\n    name: '역사 탐구 모임',\n    description: '한국사와 세계사를 함께 읽는 모임',\n    libraryId: '2',\n    libraryName: '수원시립중앙도서관',\n    meetingDate: '2024-01-20',\n    meetingTime: '10:00',\n    maxMembers: 12,\n    currentMembers: 6,\n    bookTitle: '사피엔스',\n    bookAuthor: '유발 하라리',\n    category: '인문',\n    difficulty: '보통',\n    meetingType: 'library',\n    organizer: '박역사',\n    contact: '010-2345-6789',\n    status: 'active'\n  }\n];\n\nexport interface LibraryAPIConfig {\n  baseURL: string;\n  apiKey: string;\n}\n\nexport interface GyeonggiLibraryData {\n  libraryName: string;\n  address: string;\n  phoneNumber: string;\n  website?: string;\n  operatingHours: string;\n  latitude?: number;\n  longitude?: number;\n  libraryType: string;\n}\n\nexport interface BookSearchParams {\n  query: string;\n  libraryId?: string;\n  startDate?: string;\n  endDate?: string;\n  pageNo?: number;\n  pageSize?: number;\n}\n\nexport interface BookSearchResult {\n  id: string;\n  title: string;\n  author: string;\n  publisher: string;\n  isbn: string;\n  category: string;\n  publishYear: string;\n  description?: string;\n  imageUrl?: string;\n  loanCount?: number;\n  availability?: LibraryAvailability[];\n}\n\nexport interface LibraryAvailability {\n  libraryId: string;\n  libraryName: string;\n  available: boolean;\n  loanable: boolean;\n  reservable: boolean;\n  dueDate?: string;\n}\n\n/**\n * 경기도 공공데이터 API 서비스 클래스\n * 실제 구현 시 아래 API들을 활용할 수 있습니다:\n * \n * 1. 경기데이터드림 (data.gg.go.kr)\n *    - 경기도 도서관 정보 API\n *    - 도서관 시설 현황 API\n *    - 문화시설 통합 정보 API\n * \n * 2. 도서관정보나루 (data4library.kr) \n *    - 전국 도서관 표준 API\n *    - 도서 검색 API\n *    - 대출/예약 현황 API\n * \n * 3. 서울열린데이터광장 등 시군별 Open API\n *    - 각 시군별 도서관 API\n *    - 지역별 문화시설 API\n */\nexport class LibraryAPIService {\n  private config: LibraryAPIConfig;\n\n  constructor(config: LibraryAPIConfig) {\n    this.config = config;\n  }\n\n  /**\n   * 경기도 도서관 목록 조회\n   * 실제 API: https://openapi.gg.go.kr/TBGGIBLLBR\n   */\n  async getLibraries(location?: LatLng, radius?: number): Promise<any[]> {\n    try {\n      // 경기데이터드림 도서관 현황 API 호출 (올바른 엔드포인트)\n      const apiUrl = `https://openapi.gg.go.kr/TBGGIBLLBR`;\n      const params = new URLSearchParams({\n        KEY: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d',\n        Type: 'json',\n        pIndex: '1',\n        pSize: '500' // 검색 범위 확대\n      });\n\n      const response = await fetch(`${apiUrl}?${params}`);\n      \n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      // 경기데이터드림 API 응답 구조에 맞게 데이터 변환\n      let libraries = [];\n      if (data.TBGGIBLLBR && data.TBGGIBLLBR[1] && data.TBGGIBLLBR[1].row) {\n        libraries = data.TBGGIBLLBR[1].row.map((item: any, index: number) => ({\n          id: (index + 1).toString(),\n          name: item.LBRRY_NM || '도서관명 없음',\n          address: item.REFINE_ROADNM_ADDR || item.REFINE_LOTNO_ADDR || '주소 없음',\n          phone: item.TELNO || '전화번호 없음',\n          hours: item.OPER_TIME || '09:00-18:00', // 실제 운영시간 사용\n          website: item.HMPG_ADDR || '',\n          distance: Math.round(Math.random() * 5 * 10) / 10, // 임시 거리 계산\n          coordinates: {\n            lat: parseFloat(item.REFINE_WGS84_LAT) || 37.5,\n            lng: parseFloat(item.REFINE_WGS84_LOGT) || 127.0\n          },\n          type: '공공도서관'\n        }));\n      }\n\n      // 용인시 도서관들 수동 추가 (API에서 검색되지 않는 경우 대비)\n      const additionalLibraries = [\n        {\n          id: 'yongin_central',\n          name: '용인시립중앙도서관',\n          address: '경기도 용인시 처인구 중부대로 1199',\n          phone: '031-324-4600',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 1.2,\n          coordinates: { lat: 37.231, lng: 127.208 },\n          type: '공공도서관'\n        },\n        {\n          id: 'giheung_lib',\n          name: '기흥도서관',\n          address: '경기도 용인시 기흥구 기흥로 19',\n          phone: '031-324-4660',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 1.8,\n          coordinates: { lat: 37.275, lng: 127.115 },\n          type: '공공도서관'\n        },\n        {\n          id: 'suji_lib',\n          name: '수지도서관',\n          address: '경기도 용인시 수지구 포은대로 435',\n          phone: '031-324-4650',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 2.1,\n          coordinates: { lat: 37.324, lng: 127.094 },\n          type: '공공도서관'\n        },\n        {\n          id: 'cheoin_lib',\n          name: '처인도서관',\n          address: '경기도 용인시 처인구 금령로 33번길 15',\n          phone: '031-324-4670',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 2.3,\n          coordinates: { lat: 37.236, lng: 127.200 },\n          type: '공공도서관'\n        },\n        {\n          id: 'seongnam_lib',\n          name: '서농도서관',\n          address: '경기도 용인시 기흥구 서천서로 83',\n          phone: '031-324-4680',\n          hours: '09:00-18:00',\n          website: '',\n          distance: 2.5,\n          coordinates: { lat: 37.241, lng: 127.077 },\n          type: '공공도서관'\n        },\n        {\n          id: 'pogok_lib',\n          name: '포곡도서관',\n          address: '경기도 용인시 처인구 포곡읍 에버랜드로 860',\n          phone: '031-324-4690',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 3.2,\n          coordinates: { lat: 37.294, lng: 127.202 },\n          type: '공공도서관'\n        },\n        {\n          id: 'heungdeok_lib',\n          name: '흥덕도서관',\n          address: '경기도 용인시 기흥구 흥덕중앙로 120',\n          phone: '031-324-4700',\n          hours: '09:00-18:00',\n          website: 'https://www.yonginlib.go.kr',\n          distance: 2.8,\n          coordinates: { lat: 37.238, lng: 127.119 },\n          type: '공공도서관'\n        }\n      ];\n\n      return [...libraries, ...additionalLibraries];\n      \n    } catch (error) {\n      console.error('도서관 정보 조회 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return dummyLibraries; // 오류 시 더미 데이터 반환\n    }\n  }\n\n  /**\n   * 도서 검색 - 도서관정보나루 API 활용\n   * 실제 API: http://data4library.kr/api/srchBooks\n   */\n  async searchBooks(params: BookSearchParams): Promise<BookSearchResult[]> {\n    try {\n      const apiUrl = 'http://data4library.kr/api/srchBooks';\n      const searchParams = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        title: params.query,\n        pageNo: (params.pageNo || 1).toString(),\n        pageSize: (params.pageSize || 10).toString(),\n        format: 'json'\n      });\n\n      console.log('도서 검색 API 호출:', `${apiUrl}?${searchParams}`);\n      \n      const response = await fetch(`${apiUrl}?${searchParams}`);\n      \n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      console.log('📊 도서검색 API 전체 응답:', JSON.stringify(data, null, 2));\n      \n      console.log('🔍 도서검색 API 응답 구조 분석:');\n      console.log('- data.response:', data.response);\n      console.log('- data.response.docs:', data.response?.docs);\n      console.log('- data.response.book:', data.response?.book);\n      console.log('- data.response.result:', data.response?.result);\n      console.log('- docs 길이:', data.response?.docs?.length);\n      \n      // API 응답 구조 확인\n      let rawBooks = [];\n      if (data.response && data.response.docs) {\n        rawBooks = data.response.docs;\n      } else if (data.response && data.response.book) {\n        rawBooks = Array.isArray(data.response.book) ? data.response.book : [data.response.book];\n      } else if (data.response && data.response.result) {\n        rawBooks = data.response.result.docs || data.response.result;\n      }\n      \n      console.log('📚 원본 도서 데이터:', rawBooks);\n      \n      if (rawBooks && rawBooks.length > 0) {\n        const books: BookSearchResult[] = rawBooks\n          .filter((book: any) => {\n            console.log('📖 개별 도서 데이터 확인:', book);\n            return book.bookname && book.bookname.trim() !== '';\n          })\n          .map((book: any, index: number) => ({\n            id: book.isbn || `book_${index}`,\n            title: book.bookname.trim(), // 제목 공백 제거\n            author: book.authors || '작가 미상',\n            publisher: book.publisher || '출판사 미상',\n            isbn: book.isbn || '',\n            category: book.class_nm || '일반',\n            publishYear: book.publication_year || '2023',\n            description: book.description || '',\n            imageUrl: book.bookImageURL || '',\n            loanCount: parseInt(book.loan_count) || 0\n          }));\n        \n        console.log('✅ 변환된 도서 데이터:', books);\n        console.log(`🎯 제목이 있는 도서 ${books.length}권을 찾았습니다.`);\n        return books;\n      }\n      \n      // API 응답이 예상과 다른 경우 더미 데이터 반환\n      console.warn('API 응답 구조가 예상과 다름, 더미 데이터 사용');\n      return this.getDummyBooks(params.query);\n      \n    } catch (error) {\n      console.error('도서 검색 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return this.getDummyBooks(params.query);\n    }\n  }\n\n  /**\n   * 더미 도서 데이터 필터링\n   */\n  private getDummyBooks(query: string): BookSearchResult[] {\n    return dummyBooks\n      .filter(book => \n        book.title.toLowerCase().includes(query.toLowerCase()) || \n        book.author.toLowerCase().includes(query.toLowerCase())\n      )\n      .map(book => ({\n        id: book.id.toString(),\n        title: book.title,\n        author: book.author,\n        publisher: book.publisher,\n        isbn: book.isbn,\n        category: book.category,\n        publishYear: book.publishYear,\n        description: book.description,\n        imageUrl: book.imageUrl,\n        loanCount: Math.floor(Math.random() * 100) + 10\n      }));\n  }\n\n  /**\n   * 도서 소장 현황 조회\n   * 실제 API: http://data4library.kr/api/libSrchByBook\n   */\n  async getBookAvailability(isbn: string): Promise<LibraryAvailability[]> {\n    try {\n      const apiUrl = 'http://data4library.kr/api/libSrchByBook';\n      const params = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        isbn: isbn,\n        format: 'json'\n      });\n\n      const response = await fetch(`${apiUrl}?${params}`);\n      \n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.response && data.response.libs) {\n        const availability: LibraryAvailability[] = data.response.libs.map((lib: any) => ({\n          libraryId: lib.lib.libCode || '',\n          libraryName: lib.lib.libName || '도서관명 없음',\n          available: lib.book.loanAvailable === 'Y',\n          loanable: lib.book.loanAvailable === 'Y',\n          reservable: lib.book.reserveAvailable === 'Y',\n          dueDate: lib.book.returnPlanDate || undefined\n        }));\n        \n        return availability;\n      }\n      \n      return [];\n      \n    } catch (error) {\n      console.error('도서 소장 현황 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 도서 예약\n   * 실제 API: 각 도서관별 대출/예약 시스템 API\n   */\n  async reserveBook(bookId: string, libraryId: string, userId: string): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/books/reserve`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ bookId, libraryId, userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log(`도서 예약 요청: 도서 ${bookId}, 도서관 ${libraryId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('도서 예약 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 조회\n   * 실제 API: 각 도서관별 프로그램 API 또는 커뮤니티 API\n   */\n  async getReadingGroups(libraryId?: string): Promise<any[]> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups?libraryId=${libraryId}&apiKey=${this.config.apiKey}`);\n      // const data = await response.json();\n      // return data.result;\n      \n      // 현재는 더미 데이터 반환\n      if (libraryId) {\n        return dummyReadingGroups.filter(group => group.libraryId === libraryId);\n      }\n      return dummyReadingGroups;\n    } catch (error) {\n      console.error('독서 모임 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 독서 모임 가입\n   */\n  async joinReadingGroup(groupId: string, userId: string): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups/${groupId}/join`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log(`독서 모임 가입 요청: 모임 ${groupId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 가입 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 생성\n   */\n  async createReadingGroup(groupData: any): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ ...groupData, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log('독서 모임 생성 요청:', groupData);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 생성 실패:', error);\n      return false;\n    }\n  }\n}\n\n// 기본 API 설정 (환경변수에서 로드)\nexport const defaultLibraryAPI = new LibraryAPIService({\n  baseURL: process.env.REACT_APP_GYEONGGI_API_URL || 'https://openapi.gg.go.kr',\n      apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d'\n});\n\n// API 키 설정 가이드\nexport const API_SETUP_GUIDE = {\n  title: '경기도 공공데이터 API 연동 가이드',\n  steps: [\n    {\n      step: 1,\n      title: '경기데이터드림 회원가입',\n      description: 'https://data.gg.go.kr 에서 회원가입',\n      url: 'https://data.gg.go.kr'\n    },\n    {\n      step: 2,\n      title: 'API 키 발급',\n      description: '도서관 정보 API 서비스 신청 및 키 발급',\n      note: '승인까지 1-2일 소요'\n    },\n    {\n      step: 3,\n      title: '환경변수 설정',\n      description: '.env 파일에 API 키 추가',\n      code: `REACT_APP_GYEONGGI_API_URL=https://openapi.gg.go.kr\nREACT_APP_GYEONGGI_API_KEY=your_api_key_here\nREACT_APP_LIBRARY_API_KEY=your_library_api_key_here`\n    },\n    {\n      step: 4,\n      title: '도서관정보나루 연동',\n      description: 'data4library.kr에서 추가 도서 정보 API 활용',\n      url: 'https://www.data4library.kr'\n    }\n  ],\n  additionalAPIs: [\n    {\n      name: '경기데이터드림',\n      url: 'https://data.gg.go.kr',\n      description: '경기도 공공데이터 포털',\n      apis: [\n        '도서관 시설 정보',\n        '문화시설 현황',\n        '공공시설 위치 정보'\n      ]\n    },\n    {\n      name: '도서관정보나루',\n      url: 'https://www.data4library.kr',\n      description: '국가도서관통계시스템',\n      apis: [\n        '전국 도서관 정보',\n        '도서 검색',\n        '대출 통계'\n      ]\n    },\n    {\n      name: '각 시군 Open API',\n      description: '수원시, 성남시 등 각 지역별 API',\n      apis: [\n        '지역별 도서관 API',\n        '문화 프로그램 정보',\n        '시설 예약 시스템'\n      ]\n    }\n  ]\n};\n\n// 도서관 정보나루 API 서비스\nconst BASE_URL = 'http://data4library.kr/api';\n\n// API 인증키 (실제 인증키로 설정)\n// 도서관정보나루 API 키 설정됨\nconst AUTH_KEY = process.env.REACT_APP_LIBRARY_API_KEY || '651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8';\n\n// API 승인 상태 확인 함수\nexport const checkApiApprovalStatus = async (apiKey: string): Promise<boolean> => {\n  try {\n    const response = await fetch(`https://www.data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2024-01-01&endDt=2024-01-31&pageNo=1&pageSize=1&format=json`);\n    const data = await response.json();\n    \n    // API 키가 승인되지 않은 경우 에러 응답을 받음\n    if (data.error || data.message?.includes('인증키') || data.message?.includes('승인')) {\n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('API 승인 상태 확인 중 오류:', error);\n    return false;\n  }\n};\n\n// 지역 코드 매핑 및 연령대 매핑 (필요 시 사용)\n\n// XML 응답을 파싱하는 함수\nconst parseXMLResponse = (xmlString: string): any => {\n  try {\n    // DOMParser를 사용하여 XML 파싱\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n    \n    // 파싱 오류 체크\n    const parseError = xmlDoc.getElementsByTagName('parsererror')[0];\n    if (parseError) {\n      console.error('XML 파싱 오류:', parseError.textContent);\n      return { response: { docs: [] } };\n    }\n    \n    // 인기대출도서 데이터 추출\n    const docs = xmlDoc.getElementsByTagName('doc');\n    const books: any[] = [];\n    \n    for (let i = 0; i < docs.length; i++) {\n      const doc = docs[i];\n      const book: any = {};\n      \n      // 각 필드 추출\n      const getTextContent = (tagName: string): string => {\n        const element = doc.getElementsByTagName(tagName)[0];\n        return element?.textContent || '';\n      };\n      \n      book.bookname = getTextContent('bookname');\n      book.authors = getTextContent('authors');\n      book.publisher = getTextContent('publisher');\n      book.publication_year = getTextContent('publication_year');\n      book.isbn13 = getTextContent('isbn13');\n      book.loan_count = parseInt(getTextContent('loan_count')) || 0;\n      book.ranking = parseInt(getTextContent('ranking')) || 0;\n      \n      if (book.bookname && book.bookname.trim() !== '') {\n        books.push(book);\n      }\n    }\n    \n    console.log(`📚 XML에서 추출된 도서 ${books.length}권:`, books);\n    \n    return {\n      response: {\n        docs: books,\n        numFound: books.length,\n        start: 0\n      }\n    };\n  } catch (error) {\n    console.error('XML 파싱 중 오류 발생:', error);\n    return { response: { docs: [] } };\n  }\n};\n\nexport interface PopularBookData {\n  id: string;\n  title: string;\n  author: string;\n  publisher: string;\n  isbn: string;\n  loanCount: number;\n  category: string;\n  publishYear: string;\n}\n\nexport interface ApiResponse {\n  response: {\n    docs: PopularBookData[];\n    numFound: number;\n    start: number;\n  };\n}\n\n/**\n * 인기 대출 도서 조회 API\n */\nexport const fetchPopularBooks = async (\n  startDate?: string,\n  endDate?: string\n): Promise<PopularBookData[]> => {\n  // 기본값: 실제 데이터가 있는 최근 기간 (2025년 데이터 사용)\n  const defaultEndDate = '2025-07-13';  // 2025년 7월 13일\n  const defaultStartDate = '2025-01-01'; // 2025년 시작\n  \n  const actualStartDate = startDate || defaultStartDate;\n  const actualEndDate = endDate || defaultEndDate;\n  try {\n    const params = new URLSearchParams({\n      authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n      startDt: actualStartDate,\n      endDt: actualEndDate,\n      pageNo: '1',\n      pageSize: '20'\n    });\n\n    const url = `http://data4library.kr/api/loanItemSrch?${params}`;\n    \n    console.log(`🔥 인기대출도서 API 호출 (${actualStartDate} ~ ${actualEndDate}):`, url);\n    \n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      throw new Error(`API 호출 실패: ${response.status}`);\n    }\n    \n    const responseText = await response.text();\n    console.log('📊 인기도서 API 원본 응답:', responseText.substring(0, 500) + '...');\n    \n    let data;\n    try {\n      // JSON 파싱 시도\n      data = JSON.parse(responseText);\n    } catch (jsonError) {\n      // XML 응답인 경우 파싱\n      console.log('⚠️ JSON 파싱 실패, XML 응답 처리 중...');\n      data = parseXMLResponse(responseText);\n    }\n    \n    console.log('📊 인기도서 API 파싱된 데이터:', JSON.stringify(data, null, 2));\n    \n    // API 에러 체크\n    if (data.response && data.response.error) {\n      console.warn('API 에러:', data.response.error);\n      if (data.response.error.includes('활성화')) {\n        console.log('💡 API 키가 아직 활성화되지 않았습니다. 더미 데이터를 사용합니다.');\n      }\n      throw new Error(data.response.error);\n    }\n    \n    console.log('🔍 API 응답 구조 분석:');\n    console.log('- data.response:', data.response);\n    console.log('- data.response.docs:', data.response?.docs);\n    console.log('- docs 길이:', data.response?.docs?.length);\n    \n    // API 응답 데이터 구조에 맞게 변환\n    let rawBooks = [];\n    if (data.response && data.response.docs) {\n      rawBooks = data.response.docs;\n    } else if (data.response && data.response.result) {\n      rawBooks = data.response.result.docs || [];\n    } else if (Array.isArray(data.response)) {\n      rawBooks = data.response;\n    }\n    \n    console.log('📚 원본 도서 데이터:', rawBooks);\n    \n    const books: PopularBookData[] = rawBooks\n      ?.filter((book: any) => {\n        console.log('📖 개별 도서 데이터:', book);\n        return book.bookname && book.bookname.trim() !== '';\n      })\n      .map((book: any, index: number) => ({\n        id: book.isbn || `book_${index}`,\n        title: book.bookname.trim(), // 제목 공백 제거\n        author: book.authors || '작가 미상',\n        publisher: book.publisher || '출판사 미상',\n        isbn: book.isbn || '',\n        loanCount: parseInt(book.loan_count) || (index + 1) * 1000, // 대출수가 없으면 순위 기반으로 추정\n        category: book.class_nm || '일반',\n        publishYear: book.publication_year || '2023'\n      })) || [];\n    \n    console.log(`🏆 인기도서 ${books.length}권 조회 완료:`, books);\n    return books;\n    \n  } catch (error) {\n    console.error('❌ 인기도서 API 호출 오류:', error);\n    \n    // API 호출 실패시 더미 데이터 반환\n    return getFallbackPopularBooks();\n  }\n};\n\n/**\n * API 호출 실패시 사용할 더미 데이터\n */\n// 성인 대상 인기 도서 Top 5 (아동 도서 제외, 최신순)\nconst getFallbackPopularBooks = (): PopularBookData[] => {\n  console.log('📚 Fallback 인기도서 데이터 사용 (성인 대상 Top 5)');\n  \n  return [\n    {\n      id: '1',\n      title: '2030 자산관리 고민백서',\n      author: '오건영',\n      publisher: '비즈니스북스',\n      isbn: '9791162542439',\n      loanCount: 5420,\n      category: '경제',\n      publishYear: '2023'\n    },\n    {\n      id: '2',\n      title: '트렌드 코리아 2024',\n      author: '김난도',\n      publisher: '미래의창',\n      isbn: '9788959897264',\n      loanCount: 4890,\n      category: '사회',\n      publishYear: '2023'\n    },\n    {\n      id: '3',\n      title: '세이노의 가르침',\n      author: '세이노',\n      publisher: '데이원',\n      isbn: '9791191043297',\n      loanCount: 4321,\n      category: '자기계발',\n      publishYear: '2023'\n    },\n    {\n      id: '4',\n      title: '불편한 편의점',\n      author: '김호연',\n      publisher: '나무옆의자',\n      isbn: '9791167370778',\n      loanCount: 4156,\n      category: '소설',\n      publishYear: '2021'\n    },\n    {\n      id: '5',\n      title: '달러구트 꿈 백화점',\n      author: '이미예',\n      publisher: '팩토리나인',\n      isbn: '9791165340564',\n      loanCount: 3987,\n      category: '소설',\n      publishYear: '2020'\n    }\n  ];\n};\n\n/**\n * 도서 검색 API 함수 (외부에서 직접 호출용)\n */\nexport const searchBooksAPI = async (\n  query: string,\n  pageNo: number = 1,\n  pageSize: number = 10\n): Promise<BookSearchResult[]> => {\n  const apiService = new LibraryAPIService({\n    baseURL: BASE_URL,\n    apiKey: AUTH_KEY\n  });\n  \n  return await apiService.searchBooks({\n    query,\n    pageNo,\n    pageSize\n  });\n};\n\n/**\n * API 연결 상태 테스트\n */\nexport const testApiConnection = async (): Promise<{\n  success: boolean;\n  message: string;\n  details?: any;\n}> => {\n  try {\n    console.log('🔄 API 연결 테스트 시작...');\n    \n    // 1. 도서관정보나루 API 테스트\n    const testQuery = '해리포터';\n    const searchUrl = `${BASE_URL}/srchBooks`;\n    const params = new URLSearchParams({\n      authKey: AUTH_KEY,\n      format: 'json',\n      pageNo: '1',\n      pageSize: '5',\n      keyword: testQuery\n    });\n\n    const libraryResponse = await fetch(`${searchUrl}?${params}`);\n    const libraryData = await libraryResponse.json();\n\n    // 2. 경기데이터드림 API 테스트 (여러 시도)\n    const gyeonggiApiKey = process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d';\n    let gyeonggiResponse: Response;\n    let gyeonggiData: any;\n    \n    // 첫 번째 시도: 올바른 엔드포인트 사용\n    try {\n      const gyeonggiUrl1 = `https://openapi.gg.go.kr/TBGGIBLLBR`;\n      const gyeonggiParams1 = new URLSearchParams({\n        KEY: gyeonggiApiKey,\n        Type: 'json',\n        pIndex: '1',\n        pSize: '10'\n      });\n      \n      gyeonggiResponse = await fetch(`${gyeonggiUrl1}?${gyeonggiParams1}`);\n      gyeonggiData = await gyeonggiResponse.json();\n      \n      if (!gyeonggiResponse.ok) {\n        throw new Error('First attempt failed');\n      }\n    } catch (error) {\n      // 두 번째 시도: 다른 매개변수 형식\n      try {\n        const gyeonggiUrl2 = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${gyeonggiApiKey}&Type=json&pIndex=1&pSize=10`;\n        gyeonggiResponse = await fetch(gyeonggiUrl2);\n        gyeonggiData = await gyeonggiResponse.json();\n        \n        if (!gyeonggiResponse.ok) {\n          throw new Error('Second attempt failed');\n        }\n      } catch (error2) {\n        // 세 번째 시도: 기본 매개변수만 사용\n        try {\n          const gyeonggiUrl3 = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${gyeonggiApiKey}`;\n          gyeonggiResponse = await fetch(gyeonggiUrl3);\n          gyeonggiData = await gyeonggiResponse.json();\n          \n          if (!gyeonggiResponse.ok) {\n            throw new Error('Third attempt failed');\n          }\n        } catch (error3) {\n          // 모든 시도 실패 시 기본값\n          gyeonggiResponse = { ok: false } as Response;\n          gyeonggiData = { error: 'All attempts failed' };\n        }\n      }\n    }\n\n    const libraryApiSuccess = libraryResponse.ok && libraryData.response && libraryData.response.docs;\n    const gyeonggiApiSuccess = gyeonggiResponse.ok && gyeonggiData.TBGGIBLLBR && gyeonggiData.TBGGIBLLBR[1];\n\n    if (libraryApiSuccess && gyeonggiApiSuccess) {\n      console.log('✅ 도서관정보나루 API 연결 성공');\n      console.log('✅ 경기데이터드림 API 연결 성공');\n      return {\n        success: true,\n        message: '모든 API 연결 성공! 실제 도서관 데이터를 사용합니다.',\n        details: {\n          libraryBooks: libraryData.response.numFound,\n          gyeonggiLibraries: gyeonggiData.TBGGIBLLBR[1].row?.length || 0,\n          sampleBooks: libraryData.response.docs.slice(0, 3)\n        }\n      };\n    } else if (libraryApiSuccess) {\n      console.log('✅ 도서관정보나루 API 연결 성공');\n      console.log('❌ 경기데이터드림 API 연결 실패');\n      return {\n        success: true,\n        message: '도서관정보나루 API만 연결됨. 도서 검색은 가능하지만 일부 기능이 제한됩니다.',\n        details: {\n          libraryBooks: libraryData.response.numFound,\n          gyeonggiLibraries: 0,\n          sampleBooks: libraryData.response.docs.slice(0, 3)\n        }\n      };\n    } else {\n      console.log('❌ 도서관정보나루 API 연결 실패');\n      console.log('❌ 경기데이터드림 API 연결 실패');\n      \n      // 각 API의 실패 원인을 자세히 분석\n      const failureAnalysis = {\n        libraryApi: {\n          status: libraryResponse.status,\n          statusText: libraryResponse.statusText,\n          data: libraryData\n        },\n        gyeonggiApi: {\n          status: gyeonggiResponse.ok ? 'ok' : 'failed',\n          data: gyeonggiData,\n          error: gyeonggiData?.error || 'Unknown error'\n        }\n      };\n      \n      return {\n        success: false,\n        message: 'API 연결 실패. 브라우저에서 CORS 제한이나 API 키 문제일 수 있습니다.',\n        details: failureAnalysis\n      };\n    }\n  } catch (error) {\n    console.error('API 연결 테스트 오류:', error);\n    return {\n      success: false,\n      message: 'API 연결 오류. 네트워크를 확인하거나 더미 데이터를 사용합니다.',\n      details: error\n    };\n  }\n};\n\n/**\n * 경기데이터드림 API CORS 우회 테스트\n */\nexport const testGyeonggiApiWithProxy = async (apiKey: string = '8b62aa70e514468596e9324d064d582d'): Promise<{\n  success: boolean;\n  message: string;\n  details?: any;\n}> => {\n  try {\n    // 올바른 엔드포인트 사용\n    const methods = [\n      // 1. 올바른 엔드포인트 직접 호출\n      {\n        name: 'Correct Endpoint',\n        url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}&Type=json&pIndex=1&pSize=5`\n      },\n      // 2. 추가 매개변수 포함\n      {\n        name: 'With Additional Params',\n        url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}&Type=json&pIndex=1&pSize=10`\n      },\n      // 3. 매개변수 순서 변경\n      {\n        name: 'Parameter Order Change',\n        url: `https://openapi.gg.go.kr/TBGGIBLLBR?Type=json&KEY=${apiKey}&pIndex=1&pSize=5`\n      },\n      // 4. 파라미터 없이 기본 호출\n      {\n        name: 'Basic Call',\n        url: `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}`\n      }\n    ];\n\n    for (const method of methods) {\n      try {\n        console.log(`🔄 ${method.name} 시도:`, method.url);\n        \n        const response = await fetch(method.url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          mode: 'cors'\n        });\n\n        console.log(`📊 ${method.name} 응답:`, response.status, response.statusText);\n        \n        if (response.ok) {\n          const data = await response.json();\n          console.log(`✅ ${method.name} 성공:`, data);\n          \n          return {\n            success: true,\n            message: `경기데이터드림 API 연결 성공 (${method.name})`,\n            details: {\n              method: method.name,\n              url: method.url,\n              data: data\n            }\n          };\n        } else {\n          const errorText = await response.text();\n          console.log(`❌ ${method.name} 실패:`, errorText);\n        }\n      } catch (error) {\n        console.log(`❌ ${method.name} 오류:`, error);\n      }\n    }\n\n    return {\n      success: false,\n      message: '모든 경기데이터드림 API 연결 방법 실패. CORS 문제이거나 API 키가 유효하지 않을 수 있습니다.',\n      details: {\n        attempted_methods: methods.map(m => m.name),\n        suggestion: 'API 키가 활성화될 때까지 기다리거나, 서버사이드에서 API를 호출하는 것을 고려해보세요.'\n      }\n    };\n\n  } catch (error) {\n    return {\n      success: false,\n      message: '경기데이터드림 API 테스트 중 오류 발생',\n      details: error\n    };\n  }\n};\n\n/**\n * API 연결 문제 해결 가이드\n */\nexport const getApiTroubleshootingGuide = (): string[] => {\n  return [\n    '🔧 API 연결 문제 해결 방법:',\n    '',\n    '1. API 키 확인:',\n    '   - 도서관정보나루: 651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8',\n    '   - 경기데이터드림: 8b62aa70e514468596e9324d064d582d',\n    '',\n    '2. API 키 활성화 상태:',\n    '   - 신청 후 1-2시간 정도 소요될 수 있습니다',\n    '   - 각 사이트에서 승인 상태를 확인해보세요',\n    '',\n    '3. CORS 문제 (브라우저 보안 정책):',\n    '   - 브라우저에서 직접 호출 시 발생할 수 있습니다',\n    '   - 개발 중에는 더미 데이터를 사용합니다',\n    '   - 배포 시에는 서버사이드에서 API를 호출하세요',\n    '',\n    '4. 네트워크 문제:',\n    '   - 인터넷 연결을 확인해보세요',\n    '   - 방화벽이나 프록시 설정을 확인해보세요',\n    '',\n    '5. 현재 상태:',\n    '   - 도서관정보나루 API: 정상 작동 중',\n    '   - 경기데이터드림 API: 연결 문제 (CORS 또는 API 키)',\n    '',\n    '📞 문의처:',\n    '   - 도서관정보나루: http://data4library.kr',\n    '   - 경기데이터드림: https://data.gg.go.kr'\n  ];\n};\n\n/**\n * 현재 API 설정 정보 확인\n */\nexport const getApiStatus = (): {\n  configured: boolean;\n  apiKey: string;\n  message: string;\n} => {\n  const hasApiKey = Boolean(AUTH_KEY && AUTH_KEY !== 'your_actual_api_key_here' && AUTH_KEY.length > 10);\n  const isFromEnv = process.env.REACT_APP_LIBRARY_API_KEY !== undefined;\n  \n  return {\n    configured: hasApiKey,\n    apiKey: AUTH_KEY ? `${AUTH_KEY.substring(0, 10)}...` : 'Not set',\n    message: hasApiKey \n      ? `API 키 설정됨 (${isFromEnv ? '환경변수' : '코드'})`\n      : 'API 키를 설정해주세요'\n  };\n};\n\n/**\n * 환경 설정 확인\n */\nexport const checkApiConfiguration = (): boolean => {\n  if (!AUTH_KEY || AUTH_KEY.length < 10) {\n    console.warn('⚠️ API 인증키가 설정되지 않았습니다. 더미 데이터를 사용합니다.');\n    return false;\n  }\n  console.log('✅ API 인증키가 설정되었습니다.');\n  return true;\n};\n\n/**\n * 실제 API 사용 예시\n */\nexport const exampleApiUsage = async () => {\n  try {\n    // 도서 검색 예시\n    console.log('=== 도서 검색 API 테스트 ===');\n    const searchResults = await searchBooksAPI('사피엔스', 1, 5);\n    console.log('검색 결과:', searchResults);\n    \n    // 인기 도서 조회 예시\n    console.log('=== 인기 도서 API 테스트 ===');\n    const popularBooks = await fetchPopularBooks();\n    console.log('인기도서 목록:', popularBooks);\n    \n    return { searchResults, popularBooks };\n  } catch (error) {\n    console.error('API 사용 예시 오류:', error);\n    return { searchResults: [], popularBooks: [] };\n  }\n}; \n\n/**\n * 브라우저에서 API 테스트를 위한 전역 함수\n */\nif (typeof window !== 'undefined') {\n  (window as any).testLibraryAPI = async () => {\n    console.log('🔍 도서관 API 테스트 시작...');\n    \n    // 1. API 설정 상태 확인\n    const apiStatus = getApiStatus();\n    console.log('📊 API 설정 상태:', apiStatus);\n    \n    // 2. API 연결 테스트\n    try {\n      const connectionTest = await testApiConnection();\n      console.log('🔗 API 연결 테스트 결과:', connectionTest);\n      \n      if (connectionTest.success) {\n        console.log('✅ 성공! 실제 도서관 데이터 사용 가능');\n        console.log('📚 도서 검색 결과:', connectionTest.details?.libraryBooks, '권');\n        console.log('🏛️ 경기도 도서관 수:', connectionTest.details?.gyeonggiLibraries, '개');\n        console.log('📖 샘플 도서 데이터:', connectionTest.details?.sampleBooks);\n      } else {\n        console.log('❌ 실패:', connectionTest.message);\n      }\n      \n      return connectionTest;\n    } catch (error) {\n      console.error('🚨 API 테스트 오류:', error);\n      return { success: false, message: 'API 테스트 실행 오류', details: error };\n    }\n  };\n  \n  (window as any).searchLibraryBooks = async (query: string = '해리포터') => {\n    console.log(`🔍 도서 검색 테스트: \"${query}\"`);\n    \n    try {\n      const results = await searchBooksAPI(query, 1, 5);\n      console.log('📚 검색 결과:', results);\n      \n      if (results && results.length > 0) {\n        console.log(`✅ ${results.length}권의 도서를 찾았습니다!`);\n        results.forEach((book, index) => {\n          console.log(`${index + 1}. ${book.title} - ${book.author} (${book.publisher})`);\n        });\n      } else {\n        console.log('❌ 검색 결과가 없습니다.');\n      }\n      \n      return results;\n    } catch (error) {\n      console.error('🚨 도서 검색 오류:', error);\n      return [];\n    }\n  };\n  \n  (window as any).testGyeonggiAPI = async () => {\n    console.log('🔍 경기데이터드림 API 단독 테스트...');\n    return await testGyeonggiApiWithProxy();\n  };\n  \n  (window as any).showApiGuide = () => {\n    console.log('📖 API 문제 해결 가이드:');\n    const guide = getApiTroubleshootingGuide();\n    guide.forEach(line => console.log(line));\n    return guide;\n  };\n} \n\n/**\n * 전체 API 시스템 종합 테스트\n */\nif (typeof window !== 'undefined') {\n  (window as any).testAllLibraryAPIs = async () => {\n    console.log('🔥 === 도서관 API 종합 테스트 시작 === 🔥');\n    \n    try {\n      // 1. 기본 API 연결 테스트\n      console.log('\\n1️⃣ 기본 API 연결 테스트...');\n      const connectionTest = await testApiConnection();\n      console.log('결과:', connectionTest);\n      \n      // 2. 도서 검색 테스트\n      console.log('\\n2️⃣ 도서 검색 테스트...');\n      const searchResults = await searchBooksAPI('해리포터', 1, 5);\n      console.log('검색 결과:', searchResults);\n      \n      // 3. 인기 도서 조회 테스트\n      console.log('\\n3️⃣ 인기 도서 조회 테스트...');\n              const popularBooks = await fetchPopularBooks();\n      console.log('인기 도서:', popularBooks);\n      \n      // 4. 경기도 도서관 정보 테스트\n      console.log('\\n4️⃣ 경기도 도서관 정보 테스트...');\n      const libraryAPI = new LibraryAPIService({\n        baseURL: 'https://openapi.gg.go.kr',\n        apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || '8b62aa70e514468596e9324d064d582d'\n      });\n      \n      const libraries = await libraryAPI.getLibraries();\n      console.log('경기도 도서관 목록:', libraries.length, '개');\n      console.log('샘플 도서관:', libraries.slice(0, 3));\n      \n      // 5. 종합 결과\n      console.log('\\n🎯 === 종합 테스트 결과 === 🎯');\n      console.log('✅ API 연결 상태:', connectionTest.success ? '성공' : '실패');\n      console.log('📚 검색 가능 도서 수:', searchResults.length, '권');\n      console.log('🔥 인기 도서 수:', popularBooks.length, '권');\n      console.log('🏛️ 경기도 도서관 수:', libraries.length, '개');\n      \n      if (connectionTest.success && searchResults.length > 0) {\n        console.log('🎉 모든 API가 정상 작동하고 있습니다!');\n      } else {\n        console.log('⚠️ 일부 API에 문제가 있습니다. 더미 데이터를 사용합니다.');\n      }\n      \n      return {\n        connectionTest,\n        searchResults,\n        popularBooks,\n        libraries: libraries.length\n      };\n      \n    } catch (error) {\n      console.error('🚨 종합 테스트 오류:', error);\n      return null;\n    }\n  };\n} \n\n/**\n * 브라우저 콘솔에서 직접 테스트할 수 있는 함수\n * 사용법: testCorrectGyeonggiAPI()\n */\nexport const testCorrectGyeonggiAPI = async (): Promise<void> => {\n  console.log('🔍 올바른 경기데이터드림 API 엔드포인트 테스트 시작...');\n  \n  const apiKey = '8b62aa70e514468596e9324d064d582d';\n  const correctUrl = `https://openapi.gg.go.kr/TBGGIBLLBR?KEY=${apiKey}`;\n  \n  try {\n    console.log('📞 API 호출:', correctUrl);\n    const response = await fetch(correctUrl);\n    \n    console.log('📊 응답 상태:', response.status, response.statusText);\n    \n    if (response.ok) {\n      const data = await response.json();\n      console.log('✅ API 연결 성공!');\n      console.log('📋 응답 데이터:', data);\n      \n      if (data.TBGGIBLLBR && data.TBGGIBLLBR[1] && data.TBGGIBLLBR[1].row) {\n        console.log('📚 도서관 개수:', data.TBGGIBLLBR[1].row.length);\n        console.log('📍 첫 번째 도서관:', data.TBGGIBLLBR[1].row[0]);\n      }\n    } else {\n      console.log('❌ API 호출 실패:', response.status, response.statusText);\n    }\n  } catch (error) {\n    console.log('🚨 오류 발생:', error);\n  }\n};\n\n// 도서관정보나루 API 직접 테스트\nexport const testLibraryAPI = async (): Promise<void> => {\n  const apiKey = process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY;\n  \n  console.log('🔑 사용 중인 API 키:', `${apiKey.substring(0, 10)}...`);\n  \n  // 1. 간단한 도서관 조회 API 테스트\n  const libTestUrl = `http://data4library.kr/api/libSrch?authKey=${apiKey}&pageNo=1&pageSize=5`;\n  console.log('🏛️ 도서관 조회 API 테스트:', libTestUrl);\n  \n  try {\n    const response = await fetch(libTestUrl);\n    const data = await response.text(); // 먼저 text로 받아보기\n    \n    console.log('📄 도서관 조회 API 응답 (원본):', data);\n    \n    // XML 응답을 JSON으로 파싱 시도\n    try {\n      const jsonData = JSON.parse(data);\n      console.log('✅ JSON 파싱 성공:', jsonData);\n    } catch (parseError) {\n      console.log('⚠️ JSON 파싱 실패, XML 응답인 것 같습니다');\n    }\n  } catch (error) {\n    console.error('❌ 도서관 조회 API 테스트 실패:', error);\n  }\n  \n  // 2. 인기대출도서 API 테스트\n  const popularTestUrl = `http://data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2023-01-01&endDt=2023-12-31&pageNo=1&pageSize=5`;\n  console.log('🏆 인기대출도서 API 테스트:', popularTestUrl);\n  \n  try {\n    const response = await fetch(popularTestUrl);\n    const data = await response.text(); // 먼저 text로 받아보기\n    \n    console.log('📄 인기대출도서 API 응답 (원본):', data.substring(0, 500) + '...');\n    \n    // XML 응답을 JSON으로 파싱 시도\n    try {\n      const jsonData = JSON.parse(data);\n      console.log('✅ JSON 파싱 성공:', jsonData);\n    } catch (parseError) {\n      console.log('⚠️ JSON 파싱 실패, XML 응답 처리 중...');\n      const xmlData = parseXMLResponse(data);\n      console.log('✅ XML 파싱 성공:', xmlData);\n      console.log('📊 추출된 도서 수:', xmlData.response.docs.length);\n    }\n  } catch (error) {\n    console.error('❌ 인기대출도서 API 테스트 실패:', error);\n  }\n};\n\n// 전역 객체에 함수 추가 (브라우저 콘솔에서 쉽게 접근)\nif (typeof window !== 'undefined') {\n  (window as any).testCorrectGyeonggiAPI = testCorrectGyeonggiAPI;\n  (window as any).testLibraryAPI = testLibraryAPI;\n} "],"mappings":"AAEA;AACA,OAAO,MAAMA,cAAc,GAAG;AAC5B;AACA;EACEC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,qBAAqB;EAC9BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,yBAAyB;EAClCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,oBAAoB;EAC7BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,6BAA6B;EACtCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,6BAA6B;EACtCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,qBAAqB;EAC9BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,oBAAoB;EAC7BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,uBAAuB;EAChCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,wBAAwB;EACjCC,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,uBAAuB;EAChCC,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,kBAAkB;EAC3BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,mBAAmB;EAC5BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,uBAAuB;EAChCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE,uBAAuB;EAChCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,uBAAuB;EAChCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,wBAAwB;EACjCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,oBAAoB;EAC7BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,0BAA0B;EACnCC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,sBAAsB;EAC/BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC;AAED;AACA;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE,oBAAoB;EAC7BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,EACD;EACEV,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,qBAAqB;EAC9BC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,8BAA8B;EACvCC,QAAQ,EAAE,GAAG;EACbC,WAAW,EAAE;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAC1CC,IAAI,EAAE;AACR,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,CACxB;EACEX,EAAE,EAAE,CAAC;EACLY,KAAK,EAAE,UAAU;EACjBC,MAAM,EAAE,KAAK;EACbC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEnB,EAAE,EAAE,CAAC;EACLY,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,OAAO;EAClBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,mBAAmB;EAChCC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEnB,EAAE,EAAE,CAAC;EACLY,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,kBAAkB;EAC/BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEnB,EAAE,EAAE,CAAC;EACLY,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,KAAK;EACbC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,uBAAuB;EACpCC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEnB,EAAE,EAAE,CAAC;EACLY,KAAK,EAAE,UAAU;EACjBC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,MAAM;EACnBC,WAAW,EAAE,eAAe;EAC5BC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAChC;EACEpB,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,WAAW;EACjBiB,WAAW,EAAE,sBAAsB;EACnCG,SAAS,EAAE,GAAG;EACdC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,CAAC;EACjBC,SAAS,EAAE,UAAU;EACrBC,UAAU,EAAE,KAAK;EACjBZ,QAAQ,EAAE,IAAI;EACda,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,eAAe;EACxBC,MAAM,EAAE;AACV,CAAC,EACD;EACEjC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,UAAU;EAChBiB,WAAW,EAAE,oBAAoB;EACjCG,SAAS,EAAE,GAAG;EACdC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,CAAC;EACjBC,SAAS,EAAE,MAAM;EACjBC,UAAU,EAAE,QAAQ;EACpBZ,QAAQ,EAAE,IAAI;EACda,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,eAAe;EACxBC,MAAM,EAAE;AACV,CAAC,CACF;AAkDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,CAAC;EAG7BC,WAAWA,CAACC,MAAwB,EAAE;IAAA,KAF9BA,MAAM;IAGZ,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;;EAEA;AACF;AACA;AACA;EACE,MAAMC,YAAYA,CAACC,QAAiB,EAAEC,MAAe,EAAkB;IACrE,IAAI;MACF;MACA,MAAMC,MAAM,GAAG,qCAAqC;MACpD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI,kCAAkC;QACjFC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE,KAAK,CAAC;MACf,CAAC,CAAC;MAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,IAAIC,MAAM,EAAE,CAAC;MAEnD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACjB,MAAM,EAAE,CAAC;MAClD;MAEA,MAAMqB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAIF,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,IAAIH,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,EAAE;QACnEF,SAAS,GAAGF,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,CAAC,CAACC,IAAS,EAAEC,KAAa,MAAM;UACpE7D,EAAE,EAAE,CAAC6D,KAAK,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;UAC1B7D,IAAI,EAAE2D,IAAI,CAACG,QAAQ,IAAI,SAAS;UAChC7D,OAAO,EAAE0D,IAAI,CAACI,kBAAkB,IAAIJ,IAAI,CAACK,iBAAiB,IAAI,OAAO;UACrE9D,KAAK,EAAEyD,IAAI,CAACM,KAAK,IAAI,SAAS;UAC9B9D,KAAK,EAAEwD,IAAI,CAACO,SAAS,IAAI,aAAa;UAAE;UACxC9D,OAAO,EAAEuD,IAAI,CAACQ,SAAS,IAAI,EAAE;UAC7B9D,QAAQ,EAAE+D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;UAAE;UACnDhE,WAAW,EAAE;YACXC,GAAG,EAAEgE,UAAU,CAACZ,IAAI,CAACa,gBAAgB,CAAC,IAAI,IAAI;YAC9ChE,GAAG,EAAE+D,UAAU,CAACZ,IAAI,CAACc,iBAAiB,CAAC,IAAI;UAC7C,CAAC;UACDhE,IAAI,EAAE;QACR,CAAC,CAAC,CAAC;MACL;;MAEA;MACA,MAAMiE,mBAAmB,GAAG,CAC1B;QACE3E,EAAE,EAAE,gBAAgB;QACpBC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,uBAAuB;QAChCC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,aAAa;QACjBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,oBAAoB;QAC7BC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,UAAU;QACdC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,sBAAsB;QAC/BC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,YAAY;QAChBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,yBAAyB;QAClCC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,cAAc;QAClBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,qBAAqB;QAC9BC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,WAAW;QACfC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,2BAA2B;QACpCC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,EACD;QACEV,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,uBAAuB;QAChCC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,6BAA6B;QACtCC,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE;UAAEC,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC1CC,IAAI,EAAE;MACR,CAAC,CACF;MAED,OAAO,CAAC,GAAG8C,SAAS,EAAE,GAAGmB,mBAAmB,CAAC;IAE/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,OAAO/E,cAAc,CAAC,CAAC;IACzB;EACF;;EAEA;AACF;AACA;AACA;EACE,MAAMgF,WAAWA,CAACtC,MAAwB,EAA+B;IACvE,IAAI;MAAA,IAAAuC,cAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,oBAAA;MACF,MAAM5C,MAAM,GAAG,sCAAsC;MACrD,MAAM6C,YAAY,GAAG,IAAI3C,eAAe,CAAC;QACvC4C,OAAO,EAAE1C,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,IAAIC,QAAQ;QAC1D5E,KAAK,EAAE6B,MAAM,CAACgD,KAAK;QACnBC,MAAM,EAAE,CAACjD,MAAM,CAACiD,MAAM,IAAI,CAAC,EAAE5B,QAAQ,CAAC,CAAC;QACvC6B,QAAQ,EAAE,CAAClD,MAAM,CAACkD,QAAQ,IAAI,EAAE,EAAE7B,QAAQ,CAAC,CAAC;QAC5C8B,MAAM,EAAE;MACV,CAAC,CAAC;MAEFf,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,GAAGtC,MAAM,IAAI6C,YAAY,EAAE,CAAC;MAEzD,MAAMnC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,IAAI6C,YAAY,EAAE,CAAC;MAEzD,IAAI,CAACnC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACjB,MAAM,EAAE,CAAC;MAClD;MAEA,MAAMqB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElCsB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEe,IAAI,CAACC,SAAS,CAACxC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAEhEuB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAExB,IAAI,CAACJ,QAAQ,CAAC;MAC9C2B,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAAE,cAAA,GAAE1B,IAAI,CAACJ,QAAQ,cAAA8B,cAAA,uBAAbA,cAAA,CAAee,IAAI,CAAC;MACzDlB,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAAG,eAAA,GAAE3B,IAAI,CAACJ,QAAQ,cAAA+B,eAAA,uBAAbA,eAAA,CAAee,IAAI,CAAC;MACzDnB,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAAI,eAAA,GAAE5B,IAAI,CAACJ,QAAQ,cAAAgC,eAAA,uBAAbA,eAAA,CAAee,MAAM,CAAC;MAC7DpB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAAK,eAAA,GAAE7B,IAAI,CAACJ,QAAQ,cAAAiC,eAAA,wBAAAC,oBAAA,GAAbD,eAAA,CAAeY,IAAI,cAAAX,oBAAA,uBAAnBA,oBAAA,CAAqBc,MAAM,CAAC;;MAEtD;MACA,IAAIC,QAAQ,GAAG,EAAE;MACjB,IAAI7C,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC6C,IAAI,EAAE;QACvCI,QAAQ,GAAG7C,IAAI,CAACJ,QAAQ,CAAC6C,IAAI;MAC/B,CAAC,MAAM,IAAIzC,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC8C,IAAI,EAAE;QAC9CG,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAAC/C,IAAI,CAACJ,QAAQ,CAAC8C,IAAI,CAAC,GAAG1C,IAAI,CAACJ,QAAQ,CAAC8C,IAAI,GAAG,CAAC1C,IAAI,CAACJ,QAAQ,CAAC8C,IAAI,CAAC;MAC1F,CAAC,MAAM,IAAI1C,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC+C,MAAM,EAAE;QAChDE,QAAQ,GAAG7C,IAAI,CAACJ,QAAQ,CAAC+C,MAAM,CAACF,IAAI,IAAIzC,IAAI,CAACJ,QAAQ,CAAC+C,MAAM;MAC9D;MAEApB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEqB,QAAQ,CAAC;MAEtC,IAAIA,QAAQ,IAAIA,QAAQ,CAACD,MAAM,GAAG,CAAC,EAAE;QACnC,MAAMI,KAAyB,GAAGH,QAAQ,CACvCI,MAAM,CAAEP,IAAS,IAAK;UACrBnB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEkB,IAAI,CAAC;UACrC,OAAOA,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;QACrD,CAAC,CAAC,CACD9C,GAAG,CAAC,CAACqC,IAAS,EAAEnC,KAAa,MAAM;UAClC7D,EAAE,EAAEgG,IAAI,CAACjF,IAAI,IAAI,QAAQ8C,KAAK,EAAE;UAChCjD,KAAK,EAAEoF,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAE;UAC7B5F,MAAM,EAAEmF,IAAI,CAACU,OAAO,IAAI,OAAO;UAC/B5F,SAAS,EAAEkF,IAAI,CAAClF,SAAS,IAAI,QAAQ;UACrCC,IAAI,EAAEiF,IAAI,CAACjF,IAAI,IAAI,EAAE;UACrBC,QAAQ,EAAEgF,IAAI,CAACW,QAAQ,IAAI,IAAI;UAC/B1F,WAAW,EAAE+E,IAAI,CAACY,gBAAgB,IAAI,MAAM;UAC5C1F,WAAW,EAAE8E,IAAI,CAAC9E,WAAW,IAAI,EAAE;UACnCC,QAAQ,EAAE6E,IAAI,CAACa,YAAY,IAAI,EAAE;UACjCC,SAAS,EAAEC,QAAQ,CAACf,IAAI,CAACgB,UAAU,CAAC,IAAI;QAC1C,CAAC,CAAC,CAAC;QAELnC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEwB,KAAK,CAAC;QACnCzB,OAAO,CAACC,GAAG,CAAC,gBAAgBwB,KAAK,CAACJ,MAAM,WAAW,CAAC;QACpD,OAAOI,KAAK;MACd;;MAEA;MACAzB,OAAO,CAACoC,IAAI,CAAC,8BAA8B,CAAC;MAC5C,OAAO,IAAI,CAACC,aAAa,CAACzE,MAAM,CAACgD,KAAK,CAAC;IAEzC,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,OAAO,IAAI,CAACoC,aAAa,CAACzE,MAAM,CAACgD,KAAK,CAAC;IACzC;EACF;;EAEA;AACF;AACA;EACUyB,aAAaA,CAACzB,KAAa,EAAsB;IACvD,OAAO9E,UAAU,CACd4F,MAAM,CAACP,IAAI,IACVA,IAAI,CAACpF,KAAK,CAACuG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,KAAK,CAAC0B,WAAW,CAAC,CAAC,CAAC,IACtDnB,IAAI,CAACnF,MAAM,CAACsG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,KAAK,CAAC0B,WAAW,CAAC,CAAC,CACxD,CAAC,CACAxD,GAAG,CAACqC,IAAI,KAAK;MACZhG,EAAE,EAAEgG,IAAI,CAAChG,EAAE,CAAC8D,QAAQ,CAAC,CAAC;MACtBlD,KAAK,EAAEoF,IAAI,CAACpF,KAAK;MACjBC,MAAM,EAAEmF,IAAI,CAACnF,MAAM;MACnBC,SAAS,EAAEkF,IAAI,CAAClF,SAAS;MACzBC,IAAI,EAAEiF,IAAI,CAACjF,IAAI;MACfC,QAAQ,EAAEgF,IAAI,CAAChF,QAAQ;MACvBC,WAAW,EAAE+E,IAAI,CAAC/E,WAAW;MAC7BC,WAAW,EAAE8E,IAAI,CAAC9E,WAAW;MAC7BC,QAAQ,EAAE6E,IAAI,CAAC7E,QAAQ;MACvB2F,SAAS,EAAEzC,IAAI,CAACgD,KAAK,CAAChD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;IAC/C,CAAC,CAAC,CAAC;EACP;;EAEA;AACF;AACA;AACA;EACE,MAAM+C,mBAAmBA,CAACvG,IAAY,EAAkC;IACtE,IAAI;MACF,MAAMyB,MAAM,GAAG,0CAA0C;MACzD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjC4C,OAAO,EAAE1C,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,IAAIC,QAAQ;QAC1DzE,IAAI,EAAEA,IAAI;QACV6E,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,MAAM1C,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,IAAIC,MAAM,EAAE,CAAC;MAEnD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACjB,MAAM,EAAE,CAAC;MAClD;MAEA,MAAMqB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAACqE,IAAI,EAAE;QACvC,MAAMC,YAAmC,GAAGlE,IAAI,CAACJ,QAAQ,CAACqE,IAAI,CAAC5D,GAAG,CAAE8D,GAAQ,KAAM;UAChFpG,SAAS,EAAEoG,GAAG,CAACA,GAAG,CAACC,OAAO,IAAI,EAAE;UAChCpG,WAAW,EAAEmG,GAAG,CAACA,GAAG,CAACE,OAAO,IAAI,SAAS;UACzCC,SAAS,EAAEH,GAAG,CAACzB,IAAI,CAAC6B,aAAa,KAAK,GAAG;UACzCC,QAAQ,EAAEL,GAAG,CAACzB,IAAI,CAAC6B,aAAa,KAAK,GAAG;UACxCE,UAAU,EAAEN,GAAG,CAACzB,IAAI,CAACgC,gBAAgB,KAAK,GAAG;UAC7CC,OAAO,EAAER,GAAG,CAACzB,IAAI,CAACkC,cAAc,IAAIC;QACtC,CAAC,CAAC,CAAC;QAEH,OAAOX,YAAY;MACrB;MAEA,OAAO,EAAE;IAEX,CAAC,CAAC,OAAO5C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO,EAAE;IACX;EACF;;EAEA;AACF;AACA;AACA;EACE,MAAMwD,WAAWA,CAACC,MAAc,EAAEhH,SAAiB,EAAEiH,MAAc,EAAoB;IACrF,IAAI;MACF;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACAzD,OAAO,CAACC,GAAG,CAAC,gBAAgBuD,MAAM,SAAShH,SAAS,SAASiH,MAAM,EAAE,CAAC;MACtE,OAAO,IAAI;IACb,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC,OAAO,KAAK;IACd;EACF;;EAEA;AACF;AACA;AACA;EACE,MAAM2D,gBAAgBA,CAAClH,SAAkB,EAAkB;IACzD,IAAI;MACF;MACA;MACA;MACA;;MAEA;MACA,IAAIA,SAAS,EAAE;QACb,OAAOD,kBAAkB,CAACmF,MAAM,CAACiC,KAAK,IAAIA,KAAK,CAACnH,SAAS,KAAKA,SAAS,CAAC;MAC1E;MACA,OAAOD,kBAAkB;IAC3B,CAAC,CAAC,OAAOwD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,EAAE;IACX;EACF;;EAEA;AACF;AACA;EACE,MAAM6D,gBAAgBA,CAACC,OAAe,EAAEJ,MAAc,EAAoB;IACxE,IAAI;MACF;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACAzD,OAAO,CAACC,GAAG,CAAC,mBAAmB4D,OAAO,SAASJ,MAAM,EAAE,CAAC;MACxD,OAAO,IAAI;IACb,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF;;EAEA;AACF;AACA;EACE,MAAM+D,kBAAkBA,CAACC,SAAc,EAAoB;IACzD,IAAI;MACF;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA/D,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE8D,SAAS,CAAC;MACtC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOhE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF;AACF;;AAEA;AACA,OAAO,MAAMiE,iBAAiB,GAAG,IAAI3G,iBAAiB,CAAC;EACrD4G,OAAO,EAAElG,OAAO,CAACC,GAAG,CAACkG,0BAA0B,IAAI,0BAA0B;EACzEC,MAAM,EAAEpG,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI;AACxD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMmG,eAAe,GAAG;EAC7BrI,KAAK,EAAE,sBAAsB;EAC7BsI,KAAK,EAAE,CACL;IACEC,IAAI,EAAE,CAAC;IACPvI,KAAK,EAAE,cAAc;IACrBM,WAAW,EAAE,+BAA+B;IAC5CkI,GAAG,EAAE;EACP,CAAC,EACD;IACED,IAAI,EAAE,CAAC;IACPvI,KAAK,EAAE,UAAU;IACjBM,WAAW,EAAE,0BAA0B;IACvCmI,IAAI,EAAE;EACR,CAAC,EACD;IACEF,IAAI,EAAE,CAAC;IACPvI,KAAK,EAAE,SAAS;IAChBM,WAAW,EAAE,mBAAmB;IAChCoI,IAAI,EAAE;AACZ;AACA;EACI,CAAC,EACD;IACEH,IAAI,EAAE,CAAC;IACPvI,KAAK,EAAE,YAAY;IACnBM,WAAW,EAAE,mCAAmC;IAChDkI,GAAG,EAAE;EACP,CAAC,CACF;EACDG,cAAc,EAAE,CACd;IACEtJ,IAAI,EAAE,SAAS;IACfmJ,GAAG,EAAE,uBAAuB;IAC5BlI,WAAW,EAAE,cAAc;IAC3BsI,IAAI,EAAE,CACJ,WAAW,EACX,SAAS,EACT,YAAY;EAEhB,CAAC,EACD;IACEvJ,IAAI,EAAE,SAAS;IACfmJ,GAAG,EAAE,6BAA6B;IAClClI,WAAW,EAAE,YAAY;IACzBsI,IAAI,EAAE,CACJ,WAAW,EACX,OAAO,EACP,OAAO;EAEX,CAAC,EACD;IACEvJ,IAAI,EAAE,eAAe;IACrBiB,WAAW,EAAE,sBAAsB;IACnCsI,IAAI,EAAE,CACJ,aAAa,EACb,YAAY,EACZ,WAAW;EAEf,CAAC;AAEL,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,4BAA4B;;AAE7C;AACA;AACA,MAAMjE,QAAQ,GAAG5C,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,IAAI,kEAAkE;;AAE5H;AACA,OAAO,MAAMmE,sBAAsB,GAAG,MAAOV,MAAc,IAAuB;EAChF,IAAI;IAAA,IAAAW,aAAA,EAAAC,cAAA;IACF,MAAM1G,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD6F,MAAM,sEAAsE,CAAC;IAClK,MAAM1F,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;IAElC;IACA,IAAID,IAAI,CAACsB,KAAK,KAAA+E,aAAA,GAAIrG,IAAI,CAACuG,OAAO,cAAAF,aAAA,eAAZA,aAAA,CAAcvC,QAAQ,CAAC,KAAK,CAAC,KAAAwC,cAAA,GAAItG,IAAI,CAACuG,OAAO,cAAAD,cAAA,eAAZA,cAAA,CAAcxC,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC/E,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOxC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,KAAK;EACd;AACF,CAAC;;AAED;;AAEA;AACA,MAAMkF,gBAAgB,GAAIC,SAAiB,IAAU;EACnD,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACJ,SAAS,EAAE,UAAU,CAAC;;IAE5D;IACA,MAAMK,UAAU,GAAGF,MAAM,CAACG,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAChE,IAAID,UAAU,EAAE;MACdvF,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEwF,UAAU,CAACE,WAAW,CAAC;MACnD,OAAO;QAAEpH,QAAQ,EAAE;UAAE6C,IAAI,EAAE;QAAG;MAAE,CAAC;IACnC;;IAEA;IACA,MAAMA,IAAI,GAAGmE,MAAM,CAACG,oBAAoB,CAAC,KAAK,CAAC;IAC/C,MAAM/D,KAAY,GAAG,EAAE;IAEvB,KAAK,IAAIiE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxE,IAAI,CAACG,MAAM,EAAEqE,CAAC,EAAE,EAAE;MACpC,MAAMC,GAAG,GAAGzE,IAAI,CAACwE,CAAC,CAAC;MACnB,MAAMvE,IAAS,GAAG,CAAC,CAAC;;MAEpB;MACA,MAAMyE,cAAc,GAAIC,OAAe,IAAa;QAClD,MAAMC,OAAO,GAAGH,GAAG,CAACH,oBAAoB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,CAAAC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEL,WAAW,KAAI,EAAE;MACnC,CAAC;MAEDtE,IAAI,CAACQ,QAAQ,GAAGiE,cAAc,CAAC,UAAU,CAAC;MAC1CzE,IAAI,CAACU,OAAO,GAAG+D,cAAc,CAAC,SAAS,CAAC;MACxCzE,IAAI,CAAClF,SAAS,GAAG2J,cAAc,CAAC,WAAW,CAAC;MAC5CzE,IAAI,CAACY,gBAAgB,GAAG6D,cAAc,CAAC,kBAAkB,CAAC;MAC1DzE,IAAI,CAAC4E,MAAM,GAAGH,cAAc,CAAC,QAAQ,CAAC;MACtCzE,IAAI,CAACgB,UAAU,GAAGD,QAAQ,CAAC0D,cAAc,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;MAC7DzE,IAAI,CAAC6E,OAAO,GAAG9D,QAAQ,CAAC0D,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;MAEvD,IAAIzE,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAChDH,KAAK,CAACwE,IAAI,CAAC9E,IAAI,CAAC;MAClB;IACF;IAEAnB,OAAO,CAACC,GAAG,CAAC,mBAAmBwB,KAAK,CAACJ,MAAM,IAAI,EAAEI,KAAK,CAAC;IAEvD,OAAO;MACLpD,QAAQ,EAAE;QACR6C,IAAI,EAAEO,KAAK;QACXyE,QAAQ,EAAEzE,KAAK,CAACJ,MAAM;QACtB8E,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC,CAAC,OAAOpG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO;MAAE1B,QAAQ,EAAE;QAAE6C,IAAI,EAAE;MAAG;IAAE,CAAC;EACnC;AACF,CAAC;AAqBD;AACA;AACA;AACA,OAAO,MAAMkF,iBAAiB,GAAG,MAAAA,CAC/BC,SAAkB,EAClBC,OAAgB,KACe;EAC/B;EACA,MAAMC,cAAc,GAAG,YAAY,CAAC,CAAE;EACtC,MAAMC,gBAAgB,GAAG,YAAY,CAAC,CAAC;;EAEvC,MAAMC,eAAe,GAAGJ,SAAS,IAAIG,gBAAgB;EACrD,MAAME,aAAa,GAAGJ,OAAO,IAAIC,cAAc;EAC/C,IAAI;IAAA,IAAAI,eAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,SAAA;IACF,MAAMlJ,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjC4C,OAAO,EAAE1C,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,IAAIC,QAAQ;MAC1DoG,OAAO,EAAEN,eAAe;MACxBO,KAAK,EAAEN,aAAa;MACpB7F,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMyD,GAAG,GAAG,2CAA2C3G,MAAM,EAAE;IAE/DoC,OAAO,CAACC,GAAG,CAAC,qBAAqBwG,eAAe,MAAMC,aAAa,IAAI,EAAEnC,GAAG,CAAC;IAE7E,MAAMlG,QAAQ,GAAG,MAAMC,KAAK,CAACiG,GAAG,CAAC;IAEjC,IAAI,CAAClG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACjB,MAAM,EAAE,CAAC;IAClD;IAEA,MAAM6J,YAAY,GAAG,MAAM5I,QAAQ,CAAC6I,IAAI,CAAC,CAAC;IAC1ClH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEgH,YAAY,CAACE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;IAEzE,IAAI1I,IAAI;IACR,IAAI;MACF;MACAA,IAAI,GAAGuC,IAAI,CAACoG,KAAK,CAACH,YAAY,CAAC;IACjC,CAAC,CAAC,OAAOI,SAAS,EAAE;MAClB;MACArH,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CxB,IAAI,GAAGwG,gBAAgB,CAACgC,YAAY,CAAC;IACvC;IAEAjH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEe,IAAI,CAACC,SAAS,CAACxC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;IAElE;IACA,IAAIA,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC0B,KAAK,EAAE;MACxCC,OAAO,CAACoC,IAAI,CAAC,SAAS,EAAE3D,IAAI,CAACJ,QAAQ,CAAC0B,KAAK,CAAC;MAC5C,IAAItB,IAAI,CAACJ,QAAQ,CAAC0B,KAAK,CAACwC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACvCvC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACzD;MACA,MAAM,IAAIzB,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAAC0B,KAAK,CAAC;IACtC;IAEAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAExB,IAAI,CAACJ,QAAQ,CAAC;IAC9C2B,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAA0G,eAAA,GAAElI,IAAI,CAACJ,QAAQ,cAAAsI,eAAA,uBAAbA,eAAA,CAAezF,IAAI,CAAC;IACzDlB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAA2G,eAAA,GAAEnI,IAAI,CAACJ,QAAQ,cAAAuI,eAAA,wBAAAC,oBAAA,GAAbD,eAAA,CAAe1F,IAAI,cAAA2F,oBAAA,uBAAnBA,oBAAA,CAAqBxF,MAAM,CAAC;;IAEtD;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAI7C,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC6C,IAAI,EAAE;MACvCI,QAAQ,GAAG7C,IAAI,CAACJ,QAAQ,CAAC6C,IAAI;IAC/B,CAAC,MAAM,IAAIzC,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAAC+C,MAAM,EAAE;MAChDE,QAAQ,GAAG7C,IAAI,CAACJ,QAAQ,CAAC+C,MAAM,CAACF,IAAI,IAAI,EAAE;IAC5C,CAAC,MAAM,IAAIK,KAAK,CAACC,OAAO,CAAC/C,IAAI,CAACJ,QAAQ,CAAC,EAAE;MACvCiD,QAAQ,GAAG7C,IAAI,CAACJ,QAAQ;IAC1B;IAEA2B,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEqB,QAAQ,CAAC;IAEtC,MAAMG,KAAwB,GAAG,EAAAqF,SAAA,GAAAxF,QAAQ,cAAAwF,SAAA,uBAARA,SAAA,CAC7BpF,MAAM,CAAEP,IAAS,IAAK;MACtBnB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEkB,IAAI,CAAC;MAClC,OAAOA,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;IACrD,CAAC,CAAC,CACD9C,GAAG,CAAC,CAACqC,IAAS,EAAEnC,KAAa,MAAM;MAClC7D,EAAE,EAAEgG,IAAI,CAACjF,IAAI,IAAI,QAAQ8C,KAAK,EAAE;MAChCjD,KAAK,EAAEoF,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAE;MAC7B5F,MAAM,EAAEmF,IAAI,CAACU,OAAO,IAAI,OAAO;MAC/B5F,SAAS,EAAEkF,IAAI,CAAClF,SAAS,IAAI,QAAQ;MACrCC,IAAI,EAAEiF,IAAI,CAACjF,IAAI,IAAI,EAAE;MACrB+F,SAAS,EAAEC,QAAQ,CAACf,IAAI,CAACgB,UAAU,CAAC,IAAI,CAACnD,KAAK,GAAG,CAAC,IAAI,IAAI;MAAE;MAC5D7C,QAAQ,EAAEgF,IAAI,CAACW,QAAQ,IAAI,IAAI;MAC/B1F,WAAW,EAAE+E,IAAI,CAACY,gBAAgB,IAAI;IACxC,CAAC,CAAC,CAAC,KAAI,EAAE;IAEX/B,OAAO,CAACC,GAAG,CAAC,WAAWwB,KAAK,CAACJ,MAAM,UAAU,EAAEI,KAAK,CAAC;IACrD,OAAOA,KAAK;EAEd,CAAC,CAAC,OAAO1B,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;;IAEzC;IACA,OAAOuH,uBAAuB,CAAC,CAAC;EAClC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMA,uBAAuB,GAAGA,CAAA,KAAyB;EACvDtH,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EAEpD,OAAO,CACL;IACE9E,EAAE,EAAE,GAAG;IACPY,KAAK,EAAE,gBAAgB;IACvBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,eAAe;IACrB+F,SAAS,EAAE,IAAI;IACf9F,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE;EACf,CAAC,EACD;IACEjB,EAAE,EAAE,GAAG;IACPY,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,MAAM;IACjBC,IAAI,EAAE,eAAe;IACrB+F,SAAS,EAAE,IAAI;IACf9F,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE;EACf,CAAC,EACD;IACEjB,EAAE,EAAE,GAAG;IACPY,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAE,eAAe;IACrB+F,SAAS,EAAE,IAAI;IACf9F,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE;EACf,CAAC,EACD;IACEjB,EAAE,EAAE,GAAG;IACPY,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,OAAO;IAClBC,IAAI,EAAE,eAAe;IACrB+F,SAAS,EAAE,IAAI;IACf9F,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE;EACf,CAAC,EACD;IACEjB,EAAE,EAAE,GAAG;IACPY,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,OAAO;IAClBC,IAAI,EAAE,eAAe;IACrB+F,SAAS,EAAE,IAAI;IACf9F,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE;EACf,CAAC,CACF;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMmL,cAAc,GAAG,MAAAA,CAC5B3G,KAAa,EACbC,MAAc,GAAG,CAAC,EAClBC,QAAgB,GAAG,EAAE,KACW;EAChC,MAAM0G,UAAU,GAAG,IAAInK,iBAAiB,CAAC;IACvC4G,OAAO,EAAEW,QAAQ;IACjBT,MAAM,EAAExD;EACV,CAAC,CAAC;EAEF,OAAO,MAAM6G,UAAU,CAACtH,WAAW,CAAC;IAClCU,KAAK;IACLC,MAAM;IACNC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAM2G,iBAAiB,GAAG,MAAAA,CAAA,KAI3B;EACJ,IAAI;IACFzH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;IAElC;IACA,MAAMyH,SAAS,GAAG,MAAM;IACxB,MAAMC,SAAS,GAAG,GAAG/C,QAAQ,YAAY;IACzC,MAAMhH,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjC4C,OAAO,EAAEE,QAAQ;MACjBI,MAAM,EAAE,MAAM;MACdF,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE,GAAG;MACb8G,OAAO,EAAEF;IACX,CAAC,CAAC;IAEF,MAAMG,eAAe,GAAG,MAAMvJ,KAAK,CAAC,GAAGqJ,SAAS,IAAI/J,MAAM,EAAE,CAAC;IAC7D,MAAMkK,WAAW,GAAG,MAAMD,eAAe,CAACnJ,IAAI,CAAC,CAAC;;IAEhD;IACA,MAAMqJ,cAAc,GAAGhK,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI,kCAAkC;IACnG,IAAI+J,gBAA0B;IAC9B,IAAIC,YAAiB;;IAErB;IACA,IAAI;MACF,MAAMC,YAAY,GAAG,qCAAqC;MAC1D,MAAMC,eAAe,GAAG,IAAItK,eAAe,CAAC;QAC1CC,GAAG,EAAEiK,cAAc;QACnB7J,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF4J,gBAAgB,GAAG,MAAM1J,KAAK,CAAC,GAAG4J,YAAY,IAAIC,eAAe,EAAE,CAAC;MACpEF,YAAY,GAAG,MAAMD,gBAAgB,CAACtJ,IAAI,CAAC,CAAC;MAE5C,IAAI,CAACsJ,gBAAgB,CAACzJ,EAAE,EAAE;QACxB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACd;MACA,IAAI;QACF,MAAMqI,YAAY,GAAG,2CAA2CL,cAAc,8BAA8B;QAC5GC,gBAAgB,GAAG,MAAM1J,KAAK,CAAC8J,YAAY,CAAC;QAC5CH,YAAY,GAAG,MAAMD,gBAAgB,CAACtJ,IAAI,CAAC,CAAC;QAE5C,IAAI,CAACsJ,gBAAgB,CAACzJ,EAAE,EAAE;UACxB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAO6J,MAAM,EAAE;QACf;QACA,IAAI;UACF,MAAMC,YAAY,GAAG,2CAA2CP,cAAc,EAAE;UAChFC,gBAAgB,GAAG,MAAM1J,KAAK,CAACgK,YAAY,CAAC;UAC5CL,YAAY,GAAG,MAAMD,gBAAgB,CAACtJ,IAAI,CAAC,CAAC;UAE5C,IAAI,CAACsJ,gBAAgB,CAACzJ,EAAE,EAAE;YACxB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UACzC;QACF,CAAC,CAAC,OAAO+J,MAAM,EAAE;UACf;UACAP,gBAAgB,GAAG;YAAEzJ,EAAE,EAAE;UAAM,CAAa;UAC5C0J,YAAY,GAAG;YAAElI,KAAK,EAAE;UAAsB,CAAC;QACjD;MACF;IACF;IAEA,MAAMyI,iBAAiB,GAAGX,eAAe,CAACtJ,EAAE,IAAIuJ,WAAW,CAACzJ,QAAQ,IAAIyJ,WAAW,CAACzJ,QAAQ,CAAC6C,IAAI;IACjG,MAAMuH,kBAAkB,GAAGT,gBAAgB,CAACzJ,EAAE,IAAI0J,YAAY,CAACrJ,UAAU,IAAIqJ,YAAY,CAACrJ,UAAU,CAAC,CAAC,CAAC;IAEvG,IAAI4J,iBAAiB,IAAIC,kBAAkB,EAAE;MAAA,IAAAC,qBAAA;MAC3C1I,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO;QACL0I,OAAO,EAAE,IAAI;QACb3D,OAAO,EAAE,kCAAkC;QAC3C4D,OAAO,EAAE;UACPC,YAAY,EAAEf,WAAW,CAACzJ,QAAQ,CAAC6H,QAAQ;UAC3C4C,iBAAiB,EAAE,EAAAJ,qBAAA,GAAAT,YAAY,CAACrJ,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,cAAA6J,qBAAA,uBAA9BA,qBAAA,CAAgCrH,MAAM,KAAI,CAAC;UAC9D0H,WAAW,EAAEjB,WAAW,CAACzJ,QAAQ,CAAC6C,IAAI,CAAC8H,KAAK,CAAC,CAAC,EAAE,CAAC;QACnD;MACF,CAAC;IACH,CAAC,MAAM,IAAIR,iBAAiB,EAAE;MAC5BxI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO;QACL0I,OAAO,EAAE,IAAI;QACb3D,OAAO,EAAE,8CAA8C;QACvD4D,OAAO,EAAE;UACPC,YAAY,EAAEf,WAAW,CAACzJ,QAAQ,CAAC6H,QAAQ;UAC3C4C,iBAAiB,EAAE,CAAC;UACpBC,WAAW,EAAEjB,WAAW,CAACzJ,QAAQ,CAAC6C,IAAI,CAAC8H,KAAK,CAAC,CAAC,EAAE,CAAC;QACnD;MACF,CAAC;IACH,CAAC,MAAM;MAAA,IAAAC,aAAA;MACLjJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;MAElC;MACA,MAAMiJ,eAAe,GAAG;QACtBC,UAAU,EAAE;UACV/L,MAAM,EAAEyK,eAAe,CAACzK,MAAM;UAC9BgM,UAAU,EAAEvB,eAAe,CAACuB,UAAU;UACtC3K,IAAI,EAAEqJ;QACR,CAAC;QACDuB,WAAW,EAAE;UACXjM,MAAM,EAAE4K,gBAAgB,CAACzJ,EAAE,GAAG,IAAI,GAAG,QAAQ;UAC7CE,IAAI,EAAEwJ,YAAY;UAClBlI,KAAK,EAAE,EAAAkJ,aAAA,GAAAhB,YAAY,cAAAgB,aAAA,uBAAZA,aAAA,CAAclJ,KAAK,KAAI;QAChC;MACF,CAAC;MAED,OAAO;QACL4I,OAAO,EAAE,KAAK;QACd3D,OAAO,EAAE,+CAA+C;QACxD4D,OAAO,EAAEM;MACX,CAAC;IACH;EACF,CAAC,CAAC,OAAOnJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO;MACL4I,OAAO,EAAE,KAAK;MACd3D,OAAO,EAAE,uCAAuC;MAChD4D,OAAO,EAAE7I;IACX,CAAC;EACH;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMuJ,wBAAwB,GAAG,MAAAA,CAAOnF,MAAc,GAAG,kCAAkC,KAI5F;EACJ,IAAI;IACF;IACA,MAAMoF,OAAO,GAAG;IACd;IACA;MACEnO,IAAI,EAAE,kBAAkB;MACxBmJ,GAAG,EAAE,2CAA2CJ,MAAM;IACxD,CAAC;IACD;IACA;MACE/I,IAAI,EAAE,wBAAwB;MAC9BmJ,GAAG,EAAE,2CAA2CJ,MAAM;IACxD,CAAC;IACD;IACA;MACE/I,IAAI,EAAE,wBAAwB;MAC9BmJ,GAAG,EAAE,qDAAqDJ,MAAM;IAClE,CAAC;IACD;IACA;MACE/I,IAAI,EAAE,YAAY;MAClBmJ,GAAG,EAAE,2CAA2CJ,MAAM;IACxD,CAAC,CACF;IAED,KAAK,MAAMqF,MAAM,IAAID,OAAO,EAAE;MAC5B,IAAI;QACFvJ,OAAO,CAACC,GAAG,CAAC,MAAMuJ,MAAM,CAACpO,IAAI,MAAM,EAAEoO,MAAM,CAACjF,GAAG,CAAC;QAEhD,MAAMlG,QAAQ,GAAG,MAAMC,KAAK,CAACkL,MAAM,CAACjF,GAAG,EAAE;UACvCiF,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAE;QACR,CAAC,CAAC;QAEF1J,OAAO,CAACC,GAAG,CAAC,MAAMuJ,MAAM,CAACpO,IAAI,MAAM,EAAEiD,QAAQ,CAACjB,MAAM,EAAEiB,QAAQ,CAAC+K,UAAU,CAAC;QAE1E,IAAI/K,QAAQ,CAACE,EAAE,EAAE;UACf,MAAME,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCsB,OAAO,CAACC,GAAG,CAAC,KAAKuJ,MAAM,CAACpO,IAAI,MAAM,EAAEqD,IAAI,CAAC;UAEzC,OAAO;YACLkK,OAAO,EAAE,IAAI;YACb3D,OAAO,EAAE,sBAAsBwE,MAAM,CAACpO,IAAI,GAAG;YAC7CwN,OAAO,EAAE;cACPY,MAAM,EAAEA,MAAM,CAACpO,IAAI;cACnBmJ,GAAG,EAAEiF,MAAM,CAACjF,GAAG;cACf9F,IAAI,EAAEA;YACR;UACF,CAAC;QACH,CAAC,MAAM;UACL,MAAMkL,SAAS,GAAG,MAAMtL,QAAQ,CAAC6I,IAAI,CAAC,CAAC;UACvClH,OAAO,CAACC,GAAG,CAAC,KAAKuJ,MAAM,CAACpO,IAAI,MAAM,EAAEuO,SAAS,CAAC;QAChD;MACF,CAAC,CAAC,OAAO5J,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,KAAKuJ,MAAM,CAACpO,IAAI,MAAM,EAAE2E,KAAK,CAAC;MAC5C;IACF;IAEA,OAAO;MACL4I,OAAO,EAAE,KAAK;MACd3D,OAAO,EAAE,4DAA4D;MACrE4D,OAAO,EAAE;QACPgB,iBAAiB,EAAEL,OAAO,CAACzK,GAAG,CAAC+K,CAAC,IAAIA,CAAC,CAACzO,IAAI,CAAC;QAC3C0O,UAAU,EAAE;MACd;IACF,CAAC;EAEH,CAAC,CAAC,OAAO/J,KAAK,EAAE;IACd,OAAO;MACL4I,OAAO,EAAE,KAAK;MACd3D,OAAO,EAAE,yBAAyB;MAClC4D,OAAO,EAAE7I;IACX,CAAC;EACH;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMgK,0BAA0B,GAAGA,CAAA,KAAgB;EACxD,OAAO,CACL,qBAAqB,EACrB,EAAE,EACF,cAAc,EACd,gFAAgF,EAChF,gDAAgD,EAChD,EAAE,EACF,kBAAkB,EAClB,+BAA+B,EAC/B,4BAA4B,EAC5B,EAAE,EACF,0BAA0B,EAC1B,gCAAgC,EAChC,2BAA2B,EAC3B,gCAAgC,EAChC,EAAE,EACF,aAAa,EACb,qBAAqB,EACrB,2BAA2B,EAC3B,EAAE,EACF,WAAW,EACX,2BAA2B,EAC3B,yCAAyC,EACzC,EAAE,EACF,SAAS,EACT,sCAAsC,EACtC,qCAAqC,CACtC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAIvB;EACH,MAAMC,SAAS,GAAGC,OAAO,CAACvJ,QAAQ,IAAIA,QAAQ,KAAK,0BAA0B,IAAIA,QAAQ,CAACU,MAAM,GAAG,EAAE,CAAC;EACtG,MAAM8I,SAAS,GAAGpM,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,KAAK4C,SAAS;EAErE,OAAO;IACL8G,UAAU,EAAEH,SAAS;IACrB9F,MAAM,EAAExD,QAAQ,GAAG,GAAGA,QAAQ,CAACwG,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,SAAS;IAChEnC,OAAO,EAAEiF,SAAS,GACd,cAAcE,SAAS,GAAG,MAAM,GAAG,IAAI,GAAG,GAC1C;EACN,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAME,qBAAqB,GAAGA,CAAA,KAAe;EAClD,IAAI,CAAC1J,QAAQ,IAAIA,QAAQ,CAACU,MAAM,GAAG,EAAE,EAAE;IACrCrB,OAAO,CAACoC,IAAI,CAAC,wCAAwC,CAAC;IACtD,OAAO,KAAK;EACd;EACApC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMqK,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF;IACAtK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMsK,aAAa,GAAG,MAAMhD,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACxDvH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEsK,aAAa,CAAC;;IAEpC;IACAvK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMuK,YAAY,GAAG,MAAMpE,iBAAiB,CAAC,CAAC;IAC9CpG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEuK,YAAY,CAAC;IAErC,OAAO;MAAED,aAAa;MAAEC;IAAa,CAAC;EACxC,CAAC,CAAC,OAAOzK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO;MAAEwK,aAAa,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAC;EAChD;AACF,CAAC;;AAED;AACA;AACA;AACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAChCA,MAAM,CAASC,cAAc,GAAG,YAAY;IAC3C1K,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;IAEnC;IACA,MAAM0K,SAAS,GAAGX,YAAY,CAAC,CAAC;IAChChK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE0K,SAAS,CAAC;;IAEvC;IACA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMnD,iBAAiB,CAAC,CAAC;MAChDzH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE2K,cAAc,CAAC;MAEhD,IAAIA,cAAc,CAACjC,OAAO,EAAE;QAAA,IAAAkC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QAC1B/K,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC,cAAc,GAAA4K,qBAAA,GAAED,cAAc,CAAChC,OAAO,cAAAiC,qBAAA,uBAAtBA,qBAAA,CAAwBhC,YAAY,EAAE,GAAG,CAAC;QACtE7I,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAA6K,sBAAA,GAAEF,cAAc,CAAChC,OAAO,cAAAkC,sBAAA,uBAAtBA,sBAAA,CAAwBhC,iBAAiB,EAAE,GAAG,CAAC;QAC7E9I,OAAO,CAACC,GAAG,CAAC,eAAe,GAAA8K,sBAAA,GAAEH,cAAc,CAAChC,OAAO,cAAAmC,sBAAA,uBAAtBA,sBAAA,CAAwBhC,WAAW,CAAC;MACnE,CAAC,MAAM;QACL/I,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE2K,cAAc,CAAC5F,OAAO,CAAC;MAC9C;MAEA,OAAO4F,cAAc;IACvB,CAAC,CAAC,OAAO7K,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAE4I,OAAO,EAAE,KAAK;QAAE3D,OAAO,EAAE,eAAe;QAAE4D,OAAO,EAAE7I;MAAM,CAAC;IACrE;EACF,CAAC;EAEA0K,MAAM,CAASO,kBAAkB,GAAG,OAAOpK,KAAa,GAAG,MAAM,KAAK;IACrEZ,OAAO,CAACC,GAAG,CAAC,kBAAkBW,KAAK,GAAG,CAAC;IAEvC,IAAI;MACF,MAAMqK,OAAO,GAAG,MAAM1D,cAAc,CAAC3G,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MACjDZ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEgL,OAAO,CAAC;MAEjC,IAAIA,OAAO,IAAIA,OAAO,CAAC5J,MAAM,GAAG,CAAC,EAAE;QACjCrB,OAAO,CAACC,GAAG,CAAC,KAAKgL,OAAO,CAAC5J,MAAM,eAAe,CAAC;QAC/C4J,OAAO,CAACC,OAAO,CAAC,CAAC/J,IAAI,EAAEnC,KAAK,KAAK;UAC/BgB,OAAO,CAACC,GAAG,CAAC,GAAGjB,KAAK,GAAG,CAAC,KAAKmC,IAAI,CAACpF,KAAK,MAAMoF,IAAI,CAACnF,MAAM,KAAKmF,IAAI,CAAClF,SAAS,GAAG,CAAC;QACjF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL+D,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;MAEA,OAAOgL,OAAO;IAChB,CAAC,CAAC,OAAOlL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,EAAE;IACX;EACF,CAAC;EAEA0K,MAAM,CAASU,eAAe,GAAG,YAAY;IAC5CnL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,OAAO,MAAMqJ,wBAAwB,CAAC,CAAC;EACzC,CAAC;EAEAmB,MAAM,CAASW,YAAY,GAAG,MAAM;IACnCpL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMoL,KAAK,GAAGtB,0BAA0B,CAAC,CAAC;IAC1CsB,KAAK,CAACH,OAAO,CAACI,IAAI,IAAItL,OAAO,CAACC,GAAG,CAACqL,IAAI,CAAC,CAAC;IACxC,OAAOD,KAAK;EACd,CAAC;AACH;;AAEA;AACA;AACA;AACA,IAAI,OAAOZ,MAAM,KAAK,WAAW,EAAE;EAChCA,MAAM,CAASc,kBAAkB,GAAG,YAAY;IAC/CvL,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAE9C,IAAI;MACF;MACAD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,MAAM2K,cAAc,GAAG,MAAMnD,iBAAiB,CAAC,CAAC;MAChDzH,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE2K,cAAc,CAAC;;MAElC;MACA5K,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMsK,aAAa,GAAG,MAAMhD,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;MACxDvH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEsK,aAAa,CAAC;;MAEpC;MACAvK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC5B,MAAMuK,YAAY,GAAG,MAAMpE,iBAAiB,CAAC,CAAC;MACtDpG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuK,YAAY,CAAC;;MAEnC;MACAxK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,MAAMuL,UAAU,GAAG,IAAInO,iBAAiB,CAAC;QACvC4G,OAAO,EAAE,0BAA0B;QACnCE,MAAM,EAAEpG,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI;MACpD,CAAC,CAAC;MAEF,MAAMU,SAAS,GAAG,MAAM6M,UAAU,CAAChO,YAAY,CAAC,CAAC;MACjDwC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEtB,SAAS,CAAC0C,MAAM,EAAE,GAAG,CAAC;MACjDrB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEtB,SAAS,CAACqK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;MAE7C;MACAhJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE2K,cAAc,CAACjC,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC;MACjE3I,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEsK,aAAa,CAAClJ,MAAM,EAAE,GAAG,CAAC;MACxDrB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEuK,YAAY,CAACnJ,MAAM,EAAE,GAAG,CAAC;MACpDrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEtB,SAAS,CAAC0C,MAAM,EAAE,GAAG,CAAC;MAEpD,IAAIuJ,cAAc,CAACjC,OAAO,IAAI4B,aAAa,CAAClJ,MAAM,GAAG,CAAC,EAAE;QACtDrB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACzC,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACpD;MAEA,OAAO;QACL2K,cAAc;QACdL,aAAa;QACbC,YAAY;QACZ7L,SAAS,EAAEA,SAAS,CAAC0C;MACvB,CAAC;IAEH,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO,IAAI;IACb;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAM0L,sBAAsB,GAAG,MAAAA,CAAA,KAA2B;EAC/DzL,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EAEjD,MAAMkE,MAAM,GAAG,kCAAkC;EACjD,MAAMuH,UAAU,GAAG,2CAA2CvH,MAAM,EAAE;EAEtE,IAAI;IACFnE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEyL,UAAU,CAAC;IACrC,MAAMrN,QAAQ,GAAG,MAAMC,KAAK,CAACoN,UAAU,CAAC;IAExC1L,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE5B,QAAQ,CAACjB,MAAM,EAAEiB,QAAQ,CAAC+K,UAAU,CAAC;IAE9D,IAAI/K,QAAQ,CAACE,EAAE,EAAE;MACf,MAAME,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCsB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAExB,IAAI,CAAC;MAE/B,IAAIA,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,IAAIH,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,EAAE;QACnEmB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAExB,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,CAACwC,MAAM,CAAC;QACxDrB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAExB,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;MACxD;IACF,CAAC,MAAM;MACLmB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE5B,QAAQ,CAACjB,MAAM,EAAEiB,QAAQ,CAAC+K,UAAU,CAAC;IACnE;EACF,CAAC,CAAC,OAAOrJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,KAAK,CAAC;EACjC;AACF,CAAC;;AAED;AACA,OAAO,MAAM2K,cAAc,GAAG,MAAAA,CAAA,KAA2B;EACvD,MAAMvG,MAAM,GAAGpG,OAAO,CAACC,GAAG,CAAC0C,yBAAyB,IAAIC,QAAQ;EAEhEX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,GAAGkE,MAAM,CAACgD,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAMwE,UAAU,GAAG,8CAA8CxH,MAAM,sBAAsB;EAC7FnE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE0L,UAAU,CAAC;EAE9C,IAAI;IACF,MAAMtN,QAAQ,GAAG,MAAMC,KAAK,CAACqN,UAAU,CAAC;IACxC,MAAMlN,IAAI,GAAG,MAAMJ,QAAQ,CAAC6I,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEpClH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAExB,IAAI,CAAC;;IAE3C;IACA,IAAI;MACF,MAAMmN,QAAQ,GAAG5K,IAAI,CAACoG,KAAK,CAAC3I,IAAI,CAAC;MACjCuB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE2L,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOrG,UAAU,EAAE;MACnBvF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;;EAEA;EACA,MAAM8L,cAAc,GAAG,mDAAmD1H,MAAM,0DAA0D;EAC1InE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE4L,cAAc,CAAC;EAEjD,IAAI;IACF,MAAMxN,QAAQ,GAAG,MAAMC,KAAK,CAACuN,cAAc,CAAC;IAC5C,MAAMpN,IAAI,GAAG,MAAMJ,QAAQ,CAAC6I,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEpClH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAExB,IAAI,CAAC0I,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;;IAErE;IACA,IAAI;MACF,MAAMyE,QAAQ,GAAG5K,IAAI,CAACoG,KAAK,CAAC3I,IAAI,CAAC;MACjCuB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE2L,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOrG,UAAU,EAAE;MACnBvF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,MAAM6L,OAAO,GAAG7G,gBAAgB,CAACxG,IAAI,CAAC;MACtCuB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE6L,OAAO,CAAC;MACpC9L,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE6L,OAAO,CAACzN,QAAQ,CAAC6C,IAAI,CAACG,MAAM,CAAC;IAC3D;EACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;;AAED;AACA,IAAI,OAAO0K,MAAM,KAAK,WAAW,EAAE;EAChCA,MAAM,CAASgB,sBAAsB,GAAGA,sBAAsB;EAC9DhB,MAAM,CAASC,cAAc,GAAGA,cAAc;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}