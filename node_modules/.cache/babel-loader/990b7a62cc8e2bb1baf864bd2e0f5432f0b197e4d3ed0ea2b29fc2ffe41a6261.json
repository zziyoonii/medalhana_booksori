{"ast":null,"code":"// 더미 데이터 - 경기도 도서관 (시립 중앙도서관 + 동네 작은도서관)\nexport const dummyLibraries = [\n// 수원시 도서관들\n{\n  id: '1',\n  name: '경기도립중앙도서관',\n  address: '경기 수원시 영통구 월드컵로 235',\n  phone: '031-249-4800',\n  hours: '09:00-18:00',\n  website: 'https://www.library.kr/',\n  distance: 0.8,\n  coordinates: {\n    lat: 37.299,\n    lng: 127.070\n  },\n  type: '공공도서관'\n}, {\n  id: '2',\n  name: '수원시립중앙도서관',\n  address: '경기 수원시 영통구 광교로 183',\n  phone: '031-228-4300',\n  hours: '09:00-22:00',\n  website: 'https://www.suwonlib.go.kr/',\n  distance: 1.2,\n  coordinates: {\n    lat: 37.295,\n    lng: 127.075\n  },\n  type: '공공도서관'\n}, {\n  id: '3',\n  name: '영통구립도서관',\n  address: '경기 수원시 영통구 영통동 999-1',\n  phone: '031-228-4350',\n  hours: '09:00-20:00',\n  website: 'https://www.suwonlib.go.kr/',\n  distance: 1.5,\n  coordinates: {\n    lat: 37.293,\n    lng: 127.073\n  },\n  type: '구립도서관'\n}, {\n  id: '4',\n  name: '광교작은도서관',\n  address: '경기 수원시 영통구 광교동 1275',\n  phone: '031-228-4380',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 1.8,\n  coordinates: {\n    lat: 37.291,\n    lng: 127.077\n  },\n  type: '작은도서관'\n}, {\n  id: '5',\n  name: '망포작은도서관',\n  address: '경기 수원시 영통구 망포동 578-2',\n  phone: '031-228-4390',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 2.1,\n  coordinates: {\n    lat: 37.285,\n    lng: 127.065\n  },\n  type: '작은도서관'\n},\n// 성남시 도서관들\n{\n  id: '6',\n  name: '성남시립중앙도서관',\n  address: '경기 성남시 분당구 양현로 346',\n  phone: '031-729-4600',\n  hours: '09:00-18:00',\n  website: 'https://www.snlib.go.kr/',\n  distance: 2.5,\n  coordinates: {\n    lat: 37.350,\n    lng: 127.105\n  },\n  type: '공공도서관'\n}, {\n  id: '7',\n  name: '분당구립정자도서관',\n  address: '경기 성남시 분당구 정자동 178-1',\n  phone: '031-729-4650',\n  hours: '09:00-20:00',\n  website: 'https://www.snlib.go.kr/',\n  distance: 2.8,\n  coordinates: {\n    lat: 37.365,\n    lng: 127.110\n  },\n  type: '구립도서관'\n}, {\n  id: '8',\n  name: '서현작은도서관',\n  address: '경기 성남시 분당구 서현동 271-3',\n  phone: '031-729-4670',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.1,\n  coordinates: {\n    lat: 37.348,\n    lng: 127.123\n  },\n  type: '작은도서관'\n}, {\n  id: '9',\n  name: '야탑작은도서관',\n  address: '경기 성남시 분당구 야탑동 344-10',\n  phone: '031-729-4680',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.3,\n  coordinates: {\n    lat: 37.341,\n    lng: 127.128\n  },\n  type: '작은도서관'\n},\n// 고양시 도서관들\n{\n  id: '10',\n  name: '고양시립중앙도서관',\n  address: '경기 고양시 덕양구 고양대로 1955',\n  phone: '031-8075-9300',\n  hours: '09:00-18:00',\n  website: 'https://www.goyanglib.go.kr/',\n  distance: 4.2,\n  coordinates: {\n    lat: 37.650,\n    lng: 126.830\n  },\n  type: '공공도서관'\n}, {\n  id: '11',\n  name: '일산동구립도서관',\n  address: '경기 고양시 일산동구 백석동 1256',\n  phone: '031-8075-9350',\n  hours: '09:00-20:00',\n  website: 'https://www.goyanglib.go.kr/',\n  distance: 4.5,\n  coordinates: {\n    lat: 37.670,\n    lng: 126.775\n  },\n  type: '구립도서관'\n}, {\n  id: '12',\n  name: '백석작은도서관',\n  address: '경기 고양시 일산동구 백석동 1234-5',\n  phone: '031-8075-9380',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.8,\n  coordinates: {\n    lat: 37.675,\n    lng: 126.780\n  },\n  type: '작은도서관'\n}, {\n  id: '13',\n  name: '마두작은도서관',\n  address: '경기 고양시 일산동구 마두동 775-2',\n  phone: '031-8075-9390',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 5.1,\n  coordinates: {\n    lat: 37.655,\n    lng: 126.785\n  },\n  type: '작은도서관'\n},\n// 부천시 도서관들\n{\n  id: '14',\n  name: '부천시립중앙도서관',\n  address: '경기 부천시 원미구 길주로 1',\n  phone: '032-625-4700',\n  hours: '09:00-18:00',\n  website: 'https://www.bclib.go.kr/',\n  distance: 3.1,\n  coordinates: {\n    lat: 37.490,\n    lng: 126.783\n  },\n  type: '공공도서관'\n}, {\n  id: '15',\n  name: '원미구립도서관',\n  address: '경기 부천시 원미구 중동 1033-3',\n  phone: '032-625-4750',\n  hours: '09:00-20:00',\n  website: 'https://www.bclib.go.kr/',\n  distance: 3.4,\n  coordinates: {\n    lat: 37.485,\n    lng: 126.788\n  },\n  type: '구립도서관'\n}, {\n  id: '16',\n  name: '중동작은도서관',\n  address: '경기 부천시 원미구 중동 1178-1',\n  phone: '032-625-4780',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 3.7,\n  coordinates: {\n    lat: 37.488,\n    lng: 126.791\n  },\n  type: '작은도서관'\n}, {\n  id: '17',\n  name: '역곡작은도서관',\n  address: '경기 부천시 원미구 역곡동 201-8',\n  phone: '032-625-4790',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.0,\n  coordinates: {\n    lat: 37.486,\n    lng: 126.794\n  },\n  type: '작은도서관'\n},\n// 안양시 도서관들\n{\n  id: '18',\n  name: '안양시립중앙도서관',\n  address: '경기 안양시 만안구 문예로 30',\n  phone: '031-389-0800',\n  hours: '09:00-22:00',\n  website: 'https://www.aylib.go.kr/',\n  distance: 3.8,\n  coordinates: {\n    lat: 37.400,\n    lng: 126.950\n  },\n  type: '공공도서관'\n}, {\n  id: '19',\n  name: '만안구립도서관',\n  address: '경기 안양시 만안구 안양동 678-49',\n  phone: '031-389-0850',\n  hours: '09:00-20:00',\n  website: 'https://www.aylib.go.kr/',\n  distance: 4.1,\n  coordinates: {\n    lat: 37.395,\n    lng: 126.955\n  },\n  type: '구립도서관'\n}, {\n  id: '20',\n  name: '안양동작은도서관',\n  address: '경기 안양시 만안구 안양동 123-45',\n  phone: '031-389-0880',\n  hours: '10:00-18:00',\n  website: '',\n  distance: 4.4,\n  coordinates: {\n    lat: 37.398,\n    lng: 126.958\n  },\n  type: '작은도서관'\n},\n// 용인시 도서관들\n{\n  id: '21',\n  name: '용인시립중앙도서관',\n  address: '경기 용인시 처인구 중부대로 1199',\n  phone: '031-324-4800',\n  hours: '09:00-18:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 4.8,\n  coordinates: {\n    lat: 37.230,\n    lng: 127.208\n  },\n  type: '공공도서관'\n}, {\n  id: '22',\n  name: '수지구립도서관',\n  address: '경기 용인시 수지구 수지동 1234-1',\n  phone: '031-324-4850',\n  hours: '09:00-20:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.1,\n  coordinates: {\n    lat: 37.325,\n    lng: 127.095\n  },\n  type: '구립도서관'\n}, {\n  id: '23',\n  name: '기흥구립도서관',\n  address: '경기 용인시 기흥구 구갈동 567-8',\n  phone: '031-324-4880',\n  hours: '09:00-20:00',\n  website: 'https://www.yonginlib.go.kr/',\n  distance: 5.4,\n  coordinates: {\n    lat: 37.275,\n    lng: 127.115\n  },\n  type: '구립도서관'\n},\n// 화성시 도서관들\n{\n  id: '24',\n  name: '화성시립중앙도서관',\n  address: '경기 화성시 남양읍 시청로 155',\n  phone: '031-369-6800',\n  hours: '09:00-18:00',\n  website: 'https://www.hscitylib.go.kr/',\n  distance: 6.2,\n  coordinates: {\n    lat: 37.200,\n    lng: 126.831\n  },\n  type: '공공도서관'\n}, {\n  id: '25',\n  name: '동탄구립도서관',\n  address: '경기 화성시 동탄면 동탄대로 300',\n  phone: '031-369-6850',\n  hours: '09:00-20:00',\n  website: 'https://www.hscitylib.go.kr/',\n  distance: 6.5,\n  coordinates: {\n    lat: 37.205,\n    lng: 127.078\n  },\n  type: '구립도서관'\n}];\n\n// 더미 도서 데이터\nexport const dummyBooks = [{\n  id: 1,\n  title: '82년생 김지영',\n  author: '조남주',\n  publisher: '민음사',\n  isbn: '9788937473722',\n  category: '소설',\n  publishYear: '2016',\n  description: '한국 여성의 현실을 담은 화제의 소설',\n  imageUrl: ''\n}, {\n  id: 2,\n  title: '미드나잇 라이브러리',\n  author: '매트 헤이그',\n  publisher: '인플루엔셜',\n  isbn: '9791197377109',\n  category: '소설',\n  publishYear: '2020',\n  description: '후회와 선택에 관한 철학적 소설',\n  imageUrl: ''\n}, {\n  id: 3,\n  title: '사피엔스',\n  author: '유발 하라리',\n  publisher: '김영사',\n  isbn: '9788934972464',\n  category: '인문',\n  publishYear: '2015',\n  description: '인류의 역사를 다룬 베스트셀러',\n  imageUrl: ''\n}, {\n  id: 4,\n  title: '아몬드',\n  author: '손원평',\n  publisher: '창비',\n  isbn: '9788936434267',\n  category: '소설',\n  publishYear: '2017',\n  description: '감정을 느끼지 못하는 소년의 성장 소설',\n  imageUrl: ''\n}, {\n  id: 5,\n  title: '정의란 무엇인가',\n  author: '마이클 샌델',\n  publisher: '김영사',\n  isbn: '9788934942467',\n  category: '철학',\n  publishYear: '2010',\n  description: '정의에 대한 철학적 탐구',\n  imageUrl: ''\n}];\n\n// 더미 독서모임 데이터\nexport const dummyReadingGroups = [{\n  id: 1,\n  name: '시니어 독서 클럽',\n  description: '50-60대를 위한 독서 모임입니다.',\n  libraryId: '1',\n  libraryName: '경기도립중앙도서관',\n  meetingDate: '2024-01-15',\n  meetingTime: '14:00',\n  maxMembers: 15,\n  currentMembers: 8,\n  bookTitle: '82년생 김지영',\n  bookAuthor: '조남주',\n  category: '소설',\n  difficulty: '쉬움',\n  meetingType: 'library',\n  organizer: '김도서',\n  contact: '010-1234-5678',\n  status: 'active'\n}, {\n  id: 2,\n  name: '역사 탐구 모임',\n  description: '한국사와 세계사를 함께 읽는 모임',\n  libraryId: '2',\n  libraryName: '수원시립중앙도서관',\n  meetingDate: '2024-01-20',\n  meetingTime: '10:00',\n  maxMembers: 12,\n  currentMembers: 6,\n  bookTitle: '사피엔스',\n  bookAuthor: '유발 하라리',\n  category: '인문',\n  difficulty: '보통',\n  meetingType: 'library',\n  organizer: '박역사',\n  contact: '010-2345-6789',\n  status: 'active'\n}];\n/**\n * 경기도 공공데이터 API 서비스 클래스\n * 실제 구현 시 아래 API들을 활용할 수 있습니다:\n * \n * 1. 경기데이터드림 (data.gg.go.kr)\n *    - 경기도 도서관 정보 API\n *    - 도서관 시설 현황 API\n *    - 문화시설 통합 정보 API\n * \n * 2. 도서관정보나루 (data4library.kr) \n *    - 전국 도서관 표준 API\n *    - 도서 검색 API\n *    - 대출/예약 현황 API\n * \n * 3. 서울열린데이터광장 등 시군별 Open API\n *    - 각 시군별 도서관 API\n *    - 지역별 문화시설 API\n */\nexport class LibraryAPIService {\n  constructor(config) {\n    this.config = void 0;\n    this.config = config;\n  }\n\n  /**\n   * 경기도 도서관 목록 조회\n   * 실제 API: https://openapi.gg.go.kr/LibraryStatus\n   */\n  async getLibraries(location, radius) {\n    try {\n      // 1. 검색 범위 확대\n      const params = new URLSearchParams({\n        KEY: this.config.apiKey,\n        Type: 'json',\n        pIndex: '1',\n        pSize: '500' // 100 → 500으로 확대\n      });\n\n      // 2. 여러 페이지 검색\n      const allLibraries = [];\n      for (let page = 1; page <= 5; page++) {\n        const pageParams = new URLSearchParams({\n          KEY: this.config.apiKey,\n          Type: 'json',\n          pIndex: page.toString(),\n          pSize: '100'\n        });\n        // API 호출 및 결과 병합\n      }\n\n      // 3. 서농도서관 수동 추가 (임시)\n      const additionalLibraries = [{\n        id: 'seongnam_lib',\n        name: '서농도서관',\n        address: '경기도 용인시 기흥구 서천서로 83',\n        phone: '031-XXX-XXXX',\n        hours: '09:00-18:00',\n        website: '',\n        distance: 2.5,\n        coordinates: {\n          lat: 37.241,\n          lng: 127.077\n        },\n        type: '공공도서관'\n      }];\n      return [...libraries, ...additionalLibraries];\n    } catch (error) {\n      // 에러 처리\n    }\n  }\n\n  /**\n   * 도서 검색 - 도서관정보나루 API 활용\n   * 실제 API: http://data4library.kr/api/srchBooks\n   */\n  async searchBooks(params) {\n    try {\n      const apiUrl = 'http://data4library.kr/api/srchBooks';\n      const searchParams = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        title: params.query,\n        pageNo: (params.pageNo || 1).toString(),\n        pageSize: (params.pageSize || 10).toString(),\n        format: 'json'\n      });\n      console.log('도서 검색 API 호출:', `${apiUrl}?${searchParams}`);\n      const response = await fetch(`${apiUrl}?${searchParams}`);\n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('API 응답:', data);\n\n      // API 응답 구조 확인\n      if (data.response && data.response.docs) {\n        const books = data.response.docs.map((book, index) => ({\n          id: book.isbn || `book_${index}`,\n          title: book.bookname || '제목 없음',\n          author: book.authors || '작가 미상',\n          publisher: book.publisher || '출판사 미상',\n          isbn: book.isbn || '',\n          category: book.class_nm || '일반',\n          publishYear: book.publication_year || '2023',\n          description: book.description || '',\n          imageUrl: book.bookImageURL || '',\n          loanCount: parseInt(book.loan_count) || 0\n        }));\n        console.log('변환된 도서 데이터:', books);\n        return books;\n      }\n\n      // API 응답이 예상과 다른 경우 더미 데이터 반환\n      console.warn('API 응답 구조가 예상과 다름, 더미 데이터 사용');\n      return this.getDummyBooks(params.query);\n    } catch (error) {\n      console.error('도서 검색 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return this.getDummyBooks(params.query);\n    }\n  }\n\n  /**\n   * 더미 도서 데이터 필터링\n   */\n  getDummyBooks(query) {\n    return dummyBooks.filter(book => book.title.toLowerCase().includes(query.toLowerCase()) || book.author.toLowerCase().includes(query.toLowerCase())).map(book => ({\n      id: book.id.toString(),\n      title: book.title,\n      author: book.author,\n      publisher: book.publisher,\n      isbn: book.isbn,\n      category: book.category,\n      publishYear: book.publishYear,\n      description: book.description,\n      imageUrl: book.imageUrl,\n      loanCount: Math.floor(Math.random() * 100) + 10\n    }));\n  }\n\n  /**\n   * 도서 소장 현황 조회\n   * 실제 API: http://data4library.kr/api/libSrchByBook\n   */\n  async getBookAvailability(isbn) {\n    try {\n      const apiUrl = 'http://data4library.kr/api/libSrchByBook';\n      const params = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        isbn: isbn,\n        format: 'json'\n      });\n      const response = await fetch(`${apiUrl}?${params}`);\n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.response && data.response.libs) {\n        const availability = data.response.libs.map(lib => ({\n          libraryId: lib.lib.libCode || '',\n          libraryName: lib.lib.libName || '도서관명 없음',\n          available: lib.book.loanAvailable === 'Y',\n          loanable: lib.book.loanAvailable === 'Y',\n          reservable: lib.book.reserveAvailable === 'Y',\n          dueDate: lib.book.returnPlanDate || undefined\n        }));\n        return availability;\n      }\n      return [];\n    } catch (error) {\n      console.error('도서 소장 현황 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 도서 예약\n   * 실제 API: 각 도서관별 대출/예약 시스템 API\n   */\n  async reserveBook(bookId, libraryId, userId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/books/reserve`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ bookId, libraryId, userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log(`도서 예약 요청: 도서 ${bookId}, 도서관 ${libraryId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('도서 예약 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 조회\n   * 실제 API: 각 도서관별 프로그램 API 또는 커뮤니티 API\n   */\n  async getReadingGroups(libraryId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups?libraryId=${libraryId}&apiKey=${this.config.apiKey}`);\n      // const data = await response.json();\n      // return data.result;\n\n      // 현재는 더미 데이터 반환\n      if (libraryId) {\n        return dummyReadingGroups.filter(group => group.libraryId === libraryId);\n      }\n      return dummyReadingGroups;\n    } catch (error) {\n      console.error('독서 모임 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 독서 모임 가입\n   */\n  async joinReadingGroup(groupId, userId) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups/${groupId}/join`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log(`독서 모임 가입 요청: 모임 ${groupId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 가입 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 생성\n   */\n  async createReadingGroup(groupData) {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ ...groupData, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n\n      // 현재는 더미 응답 반환\n      console.log('독서 모임 생성 요청:', groupData);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 생성 실패:', error);\n      return false;\n    }\n  }\n}\n\n// 기본 API 설정 (환경변수에서 로드)\nexport const defaultLibraryAPI = new LibraryAPIService({\n  baseURL: process.env.REACT_APP_GYEONGGI_API_URL || 'https://openapi.gg.go.kr',\n  apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || 'demo_key'\n});\n\n// API 키 설정 가이드\nexport const API_SETUP_GUIDE = {\n  title: '경기도 공공데이터 API 연동 가이드',\n  steps: [{\n    step: 1,\n    title: '경기데이터드림 회원가입',\n    description: 'https://data.gg.go.kr 에서 회원가입',\n    url: 'https://data.gg.go.kr'\n  }, {\n    step: 2,\n    title: 'API 키 발급',\n    description: '도서관 정보 API 서비스 신청 및 키 발급',\n    note: '승인까지 1-2일 소요'\n  }, {\n    step: 3,\n    title: '환경변수 설정',\n    description: '.env 파일에 API 키 추가',\n    code: `REACT_APP_GYEONGGI_API_URL=https://openapi.gg.go.kr\nREACT_APP_GYEONGGI_API_KEY=your_api_key_here\nREACT_APP_LIBRARY_API_KEY=your_library_api_key_here`\n  }, {\n    step: 4,\n    title: '도서관정보나루 연동',\n    description: 'data4library.kr에서 추가 도서 정보 API 활용',\n    url: 'https://www.data4library.kr'\n  }],\n  additionalAPIs: [{\n    name: '경기데이터드림',\n    url: 'https://data.gg.go.kr',\n    description: '경기도 공공데이터 포털',\n    apis: ['도서관 시설 정보', '문화시설 현황', '공공시설 위치 정보']\n  }, {\n    name: '도서관정보나루',\n    url: 'https://www.data4library.kr',\n    description: '국가도서관통계시스템',\n    apis: ['전국 도서관 정보', '도서 검색', '대출 통계']\n  }, {\n    name: '각 시군 Open API',\n    description: '수원시, 성남시 등 각 지역별 API',\n    apis: ['지역별 도서관 API', '문화 프로그램 정보', '시설 예약 시스템']\n  }]\n};\n\n// 도서관 정보나루 API 서비스\nconst BASE_URL = 'http://data4library.kr/api';\n\n// API 인증키 (실제 인증키로 설정)\nconst AUTH_KEY = process.env.REACT_APP_LIBRARY_API_KEY || '651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8';\n\n// API 승인 상태 확인 함수\nexport const checkApiApprovalStatus = async apiKey => {\n  try {\n    var _data$message, _data$message2;\n    const response = await fetch(`https://www.data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2024-01-01&endDt=2024-01-31&pageNo=1&pageSize=1&format=json`);\n    const data = await response.json();\n\n    // API 키가 승인되지 않은 경우 에러 응답을 받음\n    if (data.error || (_data$message = data.message) !== null && _data$message !== void 0 && _data$message.includes('인증키') || (_data$message2 = data.message) !== null && _data$message2 !== void 0 && _data$message2.includes('승인')) {\n      return false;\n    }\n    return true;\n  } catch (error) {\n    console.error('API 승인 상태 확인 중 오류:', error);\n    return false;\n  }\n};\n\n// 지역 코드 매핑 (도서관정보나루 API 기준)\nconst REGION_CODES = {\n  '강남구': '11',\n  // 서울특별시\n  '서초구': '11',\n  // 서울특별시\n  '수원시': '31',\n  // 경기도\n  '성남시': '31',\n  // 경기도\n  '부천시': '31',\n  // 경기도\n  '안양시': '31',\n  // 경기도\n  '고양시': '31',\n  // 경기도\n  '용인시': '31',\n  // 경기도\n  '화성시': '31',\n  // 경기도\n  '경기도': '31',\n  // 경기도 전체\n  '전체': '31' // 경기도 전체 (기본값)\n};\n\n// 연령대 매핑 (50-60대 중심)\nconst AGE_GROUPS = '40;50;60';\n/**\n * 인기 대출 도서 조회 API\n */\nexport const fetchPopularBooks = async (region = '전체', startDate = '2025-01-01', endDate = '2025-07-12') => {\n  try {\n    var _data$response$docs;\n    const regionCode = REGION_CODES[region] || '31';\n    const params = new URLSearchParams({\n      authKey: AUTH_KEY,\n      startDt: startDate,\n      endDt: endDate,\n      age: AGE_GROUPS,\n      region: regionCode,\n      format: 'json',\n      pageNo: '1',\n      pageSize: '5' // TOP 5 조회\n    });\n    const url = `${BASE_URL}/loanItemSrch?${params}`;\n    console.log('API 호출 URL:', url);\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`API 호출 실패: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // API 에러 체크\n    if (data.response && data.response.error) {\n      console.warn('API 에러:', data.response.error);\n      if (data.response.error.includes('활성화')) {\n        console.log('💡 API 키가 아직 활성화되지 않았습니다. 더미 데이터를 사용합니다.');\n      }\n      throw new Error(data.response.error);\n    }\n\n    // API 응답 데이터 구조에 맞게 변환\n    const books = ((_data$response$docs = data.response.docs) === null || _data$response$docs === void 0 ? void 0 : _data$response$docs.map((book, index) => ({\n      id: book.isbn || `book_${index}`,\n      title: book.bookname || '제목 없음',\n      author: book.authors || '작가 미상',\n      publisher: book.publisher || '출판사 미상',\n      isbn: book.isbn || '',\n      loanCount: parseInt(book.loan_count) || 0,\n      category: book.class_nm || '일반',\n      publishYear: book.publication_year || '2023'\n    }))) || [];\n    return books;\n  } catch (error) {\n    console.error('인기도서 API 호출 오류:', error);\n\n    // API 호출 실패시 더미 데이터 반환\n    return getFallbackPopularBooks();\n  }\n};\n\n/**\n * API 호출 실패시 사용할 더미 데이터\n */\nconst getFallbackPopularBooks = () => {\n  return [{\n    id: '1',\n    title: '82년생 김지영',\n    author: '조남주',\n    publisher: '민음사',\n    isbn: '9788937473722',\n    loanCount: 1247,\n    category: '소설',\n    publishYear: '2016'\n  }, {\n    id: '2',\n    title: '미드나잇 라이브러리',\n    author: '매트 헤이그',\n    publisher: '인플루엔셜',\n    isbn: '9791197377109',\n    loanCount: 1156,\n    category: '소설',\n    publishYear: '2020'\n  }, {\n    id: '3',\n    title: '완전한 행복',\n    author: '정유정',\n    publisher: '은행나무',\n    isbn: '9788956609485',\n    loanCount: 1089,\n    category: '소설',\n    publishYear: '2021'\n  }, {\n    id: '4',\n    title: '사피엔스',\n    author: '유발 하라리',\n    publisher: '김영사',\n    isbn: '9788934972464',\n    loanCount: 987,\n    category: '인문',\n    publishYear: '2015'\n  }, {\n    id: '5',\n    title: '아몬드',\n    author: '손원평',\n    publisher: '창비',\n    isbn: '9788936434267',\n    loanCount: 876,\n    category: '소설',\n    publishYear: '2017'\n  }];\n};\n\n/**\n * 도서 검색 API 함수 (외부에서 직접 호출용)\n */\nexport const searchBooksAPI = async (query, pageNo = 1, pageSize = 10) => {\n  const apiService = new LibraryAPIService({\n    baseURL: BASE_URL,\n    apiKey: AUTH_KEY\n  });\n  return await apiService.searchBooks({\n    query,\n    pageNo,\n    pageSize\n  });\n};\n\n/**\n * 환경 설정 확인\n */\nexport const checkApiConfiguration = () => {\n  if (!AUTH_KEY || AUTH_KEY.length < 10) {\n    console.warn('⚠️ API 인증키가 설정되지 않았습니다. 더미 데이터를 사용합니다.');\n    return false;\n  }\n  console.log('✅ API 인증키가 설정되었습니다.');\n  return true;\n};\n\n/**\n * 실제 API 사용 예시\n */\nexport const exampleApiUsage = async () => {\n  try {\n    // 도서 검색 예시\n    console.log('=== 도서 검색 API 테스트 ===');\n    const searchResults = await searchBooksAPI('사피엔스', 1, 5);\n    console.log('검색 결과:', searchResults);\n\n    // 인기 도서 조회 예시\n    console.log('=== 인기 도서 API 테스트 ===');\n    const popularBooks = await fetchPopularBooks('수원시', '2024-07-01', '2024-12-31');\n    console.log('인기도서 목록:', popularBooks);\n    return {\n      searchResults,\n      popularBooks\n    };\n  } catch (error) {\n    console.error('API 사용 예시 오류:', error);\n    return {\n      searchResults: [],\n      popularBooks: []\n    };\n  }\n};","map":{"version":3,"names":["dummyLibraries","id","name","address","phone","hours","website","distance","coordinates","lat","lng","type","dummyBooks","title","author","publisher","isbn","category","publishYear","description","imageUrl","dummyReadingGroups","libraryId","libraryName","meetingDate","meetingTime","maxMembers","currentMembers","bookTitle","bookAuthor","difficulty","meetingType","organizer","contact","status","LibraryAPIService","constructor","config","getLibraries","location","radius","params","URLSearchParams","KEY","apiKey","Type","pIndex","pSize","allLibraries","page","pageParams","toString","additionalLibraries","libraries","error","searchBooks","apiUrl","searchParams","authKey","process","env","REACT_APP_LIBRARY_API_KEY","AUTH_KEY","query","pageNo","pageSize","format","console","log","response","fetch","ok","Error","data","json","docs","books","map","book","index","bookname","authors","class_nm","publication_year","bookImageURL","loanCount","parseInt","loan_count","warn","getDummyBooks","filter","toLowerCase","includes","Math","floor","random","getBookAvailability","libs","availability","lib","libCode","libName","available","loanAvailable","loanable","reservable","reserveAvailable","dueDate","returnPlanDate","undefined","reserveBook","bookId","userId","getReadingGroups","group","joinReadingGroup","groupId","createReadingGroup","groupData","defaultLibraryAPI","baseURL","REACT_APP_GYEONGGI_API_URL","REACT_APP_GYEONGGI_API_KEY","API_SETUP_GUIDE","steps","step","url","note","code","additionalAPIs","apis","BASE_URL","checkApiApprovalStatus","_data$message","_data$message2","message","REGION_CODES","AGE_GROUPS","fetchPopularBooks","region","startDate","endDate","_data$response$docs","regionCode","startDt","endDt","age","getFallbackPopularBooks","searchBooksAPI","apiService","checkApiConfiguration","length","exampleApiUsage","searchResults","popularBooks"],"sources":["C:/Users/qoo/Desktop/zziyoonii/senior/src/services/LibraryAPI.ts"],"sourcesContent":["import { LatLng } from 'leaflet';\n\n// 더미 데이터 - 경기도 도서관 (시립 중앙도서관 + 동네 작은도서관)\nexport const dummyLibraries = [\n  // 수원시 도서관들\n  {\n    id: '1',\n    name: '경기도립중앙도서관',\n    address: '경기 수원시 영통구 월드컵로 235',\n    phone: '031-249-4800',\n    hours: '09:00-18:00',\n    website: 'https://www.library.kr/',\n    distance: 0.8,\n    coordinates: { lat: 37.299, lng: 127.070 },\n    type: '공공도서관'\n  },\n  {\n    id: '2',\n    name: '수원시립중앙도서관',\n    address: '경기 수원시 영통구 광교로 183',\n    phone: '031-228-4300',\n    hours: '09:00-22:00',\n    website: 'https://www.suwonlib.go.kr/',\n    distance: 1.2,\n    coordinates: { lat: 37.295, lng: 127.075 },\n    type: '공공도서관'\n  },\n  {\n    id: '3',\n    name: '영통구립도서관',\n    address: '경기 수원시 영통구 영통동 999-1',\n    phone: '031-228-4350',\n    hours: '09:00-20:00',\n    website: 'https://www.suwonlib.go.kr/',\n    distance: 1.5,\n    coordinates: { lat: 37.293, lng: 127.073 },\n    type: '구립도서관'\n  },\n  {\n    id: '4',\n    name: '광교작은도서관',\n    address: '경기 수원시 영통구 광교동 1275',\n    phone: '031-228-4380',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 1.8,\n    coordinates: { lat: 37.291, lng: 127.077 },\n    type: '작은도서관'\n  },\n  {\n    id: '5',\n    name: '망포작은도서관',\n    address: '경기 수원시 영통구 망포동 578-2',\n    phone: '031-228-4390',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 2.1,\n    coordinates: { lat: 37.285, lng: 127.065 },\n    type: '작은도서관'\n  },\n  \n  // 성남시 도서관들\n  {\n    id: '6',\n    name: '성남시립중앙도서관',\n    address: '경기 성남시 분당구 양현로 346',\n    phone: '031-729-4600',\n    hours: '09:00-18:00',\n    website: 'https://www.snlib.go.kr/',\n    distance: 2.5,\n    coordinates: { lat: 37.350, lng: 127.105 },\n    type: '공공도서관'\n  },\n  {\n    id: '7',\n    name: '분당구립정자도서관',\n    address: '경기 성남시 분당구 정자동 178-1',\n    phone: '031-729-4650',\n    hours: '09:00-20:00',\n    website: 'https://www.snlib.go.kr/',\n    distance: 2.8,\n    coordinates: { lat: 37.365, lng: 127.110 },\n    type: '구립도서관'\n  },\n  {\n    id: '8',\n    name: '서현작은도서관',\n    address: '경기 성남시 분당구 서현동 271-3',\n    phone: '031-729-4670',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.1,\n    coordinates: { lat: 37.348, lng: 127.123 },\n    type: '작은도서관'\n  },\n  {\n    id: '9',\n    name: '야탑작은도서관',\n    address: '경기 성남시 분당구 야탑동 344-10',\n    phone: '031-729-4680',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.3,\n    coordinates: { lat: 37.341, lng: 127.128 },\n    type: '작은도서관'\n  },\n  \n  // 고양시 도서관들\n  {\n    id: '10',\n    name: '고양시립중앙도서관',\n    address: '경기 고양시 덕양구 고양대로 1955',\n    phone: '031-8075-9300',\n    hours: '09:00-18:00',\n    website: 'https://www.goyanglib.go.kr/',\n    distance: 4.2,\n    coordinates: { lat: 37.650, lng: 126.830 },\n    type: '공공도서관'\n  },\n  {\n    id: '11',\n    name: '일산동구립도서관',\n    address: '경기 고양시 일산동구 백석동 1256',\n    phone: '031-8075-9350',\n    hours: '09:00-20:00',\n    website: 'https://www.goyanglib.go.kr/',\n    distance: 4.5,\n    coordinates: { lat: 37.670, lng: 126.775 },\n    type: '구립도서관'\n  },\n  {\n    id: '12',\n    name: '백석작은도서관',\n    address: '경기 고양시 일산동구 백석동 1234-5',\n    phone: '031-8075-9380',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.8,\n    coordinates: { lat: 37.675, lng: 126.780 },\n    type: '작은도서관'\n  },\n  {\n    id: '13',\n    name: '마두작은도서관',\n    address: '경기 고양시 일산동구 마두동 775-2',\n    phone: '031-8075-9390',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 5.1,\n    coordinates: { lat: 37.655, lng: 126.785 },\n    type: '작은도서관'\n  },\n  \n  // 부천시 도서관들\n  {\n    id: '14',\n    name: '부천시립중앙도서관',\n    address: '경기 부천시 원미구 길주로 1',\n    phone: '032-625-4700',\n    hours: '09:00-18:00',\n    website: 'https://www.bclib.go.kr/',\n    distance: 3.1,\n    coordinates: { lat: 37.490, lng: 126.783 },\n    type: '공공도서관'\n  },\n  {\n    id: '15',\n    name: '원미구립도서관',\n    address: '경기 부천시 원미구 중동 1033-3',\n    phone: '032-625-4750',\n    hours: '09:00-20:00',\n    website: 'https://www.bclib.go.kr/',\n    distance: 3.4,\n    coordinates: { lat: 37.485, lng: 126.788 },\n    type: '구립도서관'\n  },\n  {\n    id: '16',\n    name: '중동작은도서관',\n    address: '경기 부천시 원미구 중동 1178-1',\n    phone: '032-625-4780',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 3.7,\n    coordinates: { lat: 37.488, lng: 126.791 },\n    type: '작은도서관'\n  },\n  {\n    id: '17',\n    name: '역곡작은도서관',\n    address: '경기 부천시 원미구 역곡동 201-8',\n    phone: '032-625-4790',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.0,\n    coordinates: { lat: 37.486, lng: 126.794 },\n    type: '작은도서관'\n  },\n  \n  // 안양시 도서관들\n  {\n    id: '18',\n    name: '안양시립중앙도서관',\n    address: '경기 안양시 만안구 문예로 30',\n    phone: '031-389-0800',\n    hours: '09:00-22:00',\n    website: 'https://www.aylib.go.kr/',\n    distance: 3.8,\n    coordinates: { lat: 37.400, lng: 126.950 },\n    type: '공공도서관'\n  },\n  {\n    id: '19',\n    name: '만안구립도서관',\n    address: '경기 안양시 만안구 안양동 678-49',\n    phone: '031-389-0850',\n    hours: '09:00-20:00',\n    website: 'https://www.aylib.go.kr/',\n    distance: 4.1,\n    coordinates: { lat: 37.395, lng: 126.955 },\n    type: '구립도서관'\n  },\n  {\n    id: '20',\n    name: '안양동작은도서관',\n    address: '경기 안양시 만안구 안양동 123-45',\n    phone: '031-389-0880',\n    hours: '10:00-18:00',\n    website: '',\n    distance: 4.4,\n    coordinates: { lat: 37.398, lng: 126.958 },\n    type: '작은도서관'\n  },\n  \n  // 용인시 도서관들\n  {\n    id: '21',\n    name: '용인시립중앙도서관',\n    address: '경기 용인시 처인구 중부대로 1199',\n    phone: '031-324-4800',\n    hours: '09:00-18:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 4.8,\n    coordinates: { lat: 37.230, lng: 127.208 },\n    type: '공공도서관'\n  },\n  {\n    id: '22',\n    name: '수지구립도서관',\n    address: '경기 용인시 수지구 수지동 1234-1',\n    phone: '031-324-4850',\n    hours: '09:00-20:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.1,\n    coordinates: { lat: 37.325, lng: 127.095 },\n    type: '구립도서관'\n  },\n  {\n    id: '23',\n    name: '기흥구립도서관',\n    address: '경기 용인시 기흥구 구갈동 567-8',\n    phone: '031-324-4880',\n    hours: '09:00-20:00',\n    website: 'https://www.yonginlib.go.kr/',\n    distance: 5.4,\n    coordinates: { lat: 37.275, lng: 127.115 },\n    type: '구립도서관'\n  },\n  \n  // 화성시 도서관들\n  {\n    id: '24',\n    name: '화성시립중앙도서관',\n    address: '경기 화성시 남양읍 시청로 155',\n    phone: '031-369-6800',\n    hours: '09:00-18:00',\n    website: 'https://www.hscitylib.go.kr/',\n    distance: 6.2,\n    coordinates: { lat: 37.200, lng: 126.831 },\n    type: '공공도서관'\n  },\n  {\n    id: '25',\n    name: '동탄구립도서관',\n    address: '경기 화성시 동탄면 동탄대로 300',\n    phone: '031-369-6850',\n    hours: '09:00-20:00',\n    website: 'https://www.hscitylib.go.kr/',\n    distance: 6.5,\n    coordinates: { lat: 37.205, lng: 127.078 },\n    type: '구립도서관'\n  }\n];\n\n// 더미 도서 데이터\nexport const dummyBooks = [\n  {\n    id: 1,\n    title: '82년생 김지영',\n    author: '조남주',\n    publisher: '민음사',\n    isbn: '9788937473722',\n    category: '소설',\n    publishYear: '2016',\n    description: '한국 여성의 현실을 담은 화제의 소설',\n    imageUrl: ''\n  },\n  {\n    id: 2,\n    title: '미드나잇 라이브러리',\n    author: '매트 헤이그',\n    publisher: '인플루엔셜',\n    isbn: '9791197377109',\n    category: '소설',\n    publishYear: '2020',\n    description: '후회와 선택에 관한 철학적 소설',\n    imageUrl: ''\n  },\n  {\n    id: 3,\n    title: '사피엔스',\n    author: '유발 하라리',\n    publisher: '김영사',\n    isbn: '9788934972464',\n    category: '인문',\n    publishYear: '2015',\n    description: '인류의 역사를 다룬 베스트셀러',\n    imageUrl: ''\n  },\n  {\n    id: 4,\n    title: '아몬드',\n    author: '손원평',\n    publisher: '창비',\n    isbn: '9788936434267',\n    category: '소설',\n    publishYear: '2017',\n    description: '감정을 느끼지 못하는 소년의 성장 소설',\n    imageUrl: ''\n  },\n  {\n    id: 5,\n    title: '정의란 무엇인가',\n    author: '마이클 샌델',\n    publisher: '김영사',\n    isbn: '9788934942467',\n    category: '철학',\n    publishYear: '2010',\n    description: '정의에 대한 철학적 탐구',\n    imageUrl: ''\n  }\n];\n\n// 더미 독서모임 데이터\nexport const dummyReadingGroups = [\n  {\n    id: 1,\n    name: '시니어 독서 클럽',\n    description: '50-60대를 위한 독서 모임입니다.',\n    libraryId: '1',\n    libraryName: '경기도립중앙도서관',\n    meetingDate: '2024-01-15',\n    meetingTime: '14:00',\n    maxMembers: 15,\n    currentMembers: 8,\n    bookTitle: '82년생 김지영',\n    bookAuthor: '조남주',\n    category: '소설',\n    difficulty: '쉬움',\n    meetingType: 'library',\n    organizer: '김도서',\n    contact: '010-1234-5678',\n    status: 'active'\n  },\n  {\n    id: 2,\n    name: '역사 탐구 모임',\n    description: '한국사와 세계사를 함께 읽는 모임',\n    libraryId: '2',\n    libraryName: '수원시립중앙도서관',\n    meetingDate: '2024-01-20',\n    meetingTime: '10:00',\n    maxMembers: 12,\n    currentMembers: 6,\n    bookTitle: '사피엔스',\n    bookAuthor: '유발 하라리',\n    category: '인문',\n    difficulty: '보통',\n    meetingType: 'library',\n    organizer: '박역사',\n    contact: '010-2345-6789',\n    status: 'active'\n  }\n];\n\nexport interface LibraryAPIConfig {\n  baseURL: string;\n  apiKey: string;\n}\n\nexport interface GyeonggiLibraryData {\n  libraryName: string;\n  address: string;\n  phoneNumber: string;\n  website?: string;\n  operatingHours: string;\n  latitude?: number;\n  longitude?: number;\n  libraryType: string;\n}\n\nexport interface BookSearchParams {\n  query: string;\n  libraryId?: string;\n  startDate?: string;\n  endDate?: string;\n  pageNo?: number;\n  pageSize?: number;\n}\n\nexport interface BookSearchResult {\n  id: string;\n  title: string;\n  author: string;\n  publisher: string;\n  isbn: string;\n  category: string;\n  publishYear: string;\n  description?: string;\n  imageUrl?: string;\n  loanCount?: number;\n  availability?: LibraryAvailability[];\n}\n\nexport interface LibraryAvailability {\n  libraryId: string;\n  libraryName: string;\n  available: boolean;\n  loanable: boolean;\n  reservable: boolean;\n  dueDate?: string;\n}\n\n/**\n * 경기도 공공데이터 API 서비스 클래스\n * 실제 구현 시 아래 API들을 활용할 수 있습니다:\n * \n * 1. 경기데이터드림 (data.gg.go.kr)\n *    - 경기도 도서관 정보 API\n *    - 도서관 시설 현황 API\n *    - 문화시설 통합 정보 API\n * \n * 2. 도서관정보나루 (data4library.kr) \n *    - 전국 도서관 표준 API\n *    - 도서 검색 API\n *    - 대출/예약 현황 API\n * \n * 3. 서울열린데이터광장 등 시군별 Open API\n *    - 각 시군별 도서관 API\n *    - 지역별 문화시설 API\n */\nexport class LibraryAPIService {\n  private config: LibraryAPIConfig;\n\n  constructor(config: LibraryAPIConfig) {\n    this.config = config;\n  }\n\n  /**\n   * 경기도 도서관 목록 조회\n   * 실제 API: https://openapi.gg.go.kr/LibraryStatus\n   */\n  async getLibraries(location?: LatLng, radius?: number): Promise<any[]> {\n    try {\n      // 1. 검색 범위 확대\n      const params = new URLSearchParams({\n        KEY: this.config.apiKey,\n        Type: 'json',\n        pIndex: '1',\n        pSize: '500' // 100 → 500으로 확대\n      });\n\n      // 2. 여러 페이지 검색\n      const allLibraries = [];\n      for (let page = 1; page <= 5; page++) {\n        const pageParams = new URLSearchParams({\n          KEY: this.config.apiKey,\n          Type: 'json',\n          pIndex: page.toString(),\n          pSize: '100'\n        });\n        // API 호출 및 결과 병합\n      }\n\n      // 3. 서농도서관 수동 추가 (임시)\n      const additionalLibraries = [\n        {\n          id: 'seongnam_lib',\n          name: '서농도서관',\n          address: '경기도 용인시 기흥구 서천서로 83',\n          phone: '031-XXX-XXXX',\n          hours: '09:00-18:00',\n          website: '',\n          distance: 2.5,\n          coordinates: { lat: 37.241, lng: 127.077 },\n          type: '공공도서관'\n        }\n      ];\n\n      return [...libraries, ...additionalLibraries];\n    } catch (error) {\n      // 에러 처리\n    }\n  }\n\n  /**\n   * 도서 검색 - 도서관정보나루 API 활용\n   * 실제 API: http://data4library.kr/api/srchBooks\n   */\n  async searchBooks(params: BookSearchParams): Promise<BookSearchResult[]> {\n    try {\n      const apiUrl = 'http://data4library.kr/api/srchBooks';\n      const searchParams = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        title: params.query,\n        pageNo: (params.pageNo || 1).toString(),\n        pageSize: (params.pageSize || 10).toString(),\n        format: 'json'\n      });\n\n      console.log('도서 검색 API 호출:', `${apiUrl}?${searchParams}`);\n      \n      const response = await fetch(`${apiUrl}?${searchParams}`);\n      \n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      console.log('API 응답:', data);\n      \n      // API 응답 구조 확인\n      if (data.response && data.response.docs) {\n        const books: BookSearchResult[] = data.response.docs.map((book: any, index: number) => ({\n          id: book.isbn || `book_${index}`,\n          title: book.bookname || '제목 없음',\n          author: book.authors || '작가 미상',\n          publisher: book.publisher || '출판사 미상',\n          isbn: book.isbn || '',\n          category: book.class_nm || '일반',\n          publishYear: book.publication_year || '2023',\n          description: book.description || '',\n          imageUrl: book.bookImageURL || '',\n          loanCount: parseInt(book.loan_count) || 0\n        }));\n        \n        console.log('변환된 도서 데이터:', books);\n        return books;\n      }\n      \n      // API 응답이 예상과 다른 경우 더미 데이터 반환\n      console.warn('API 응답 구조가 예상과 다름, 더미 데이터 사용');\n      return this.getDummyBooks(params.query);\n      \n    } catch (error) {\n      console.error('도서 검색 실패:', error);\n      console.log('더미 데이터로 대체합니다.');\n      return this.getDummyBooks(params.query);\n    }\n  }\n\n  /**\n   * 더미 도서 데이터 필터링\n   */\n  private getDummyBooks(query: string): BookSearchResult[] {\n    return dummyBooks\n      .filter(book => \n        book.title.toLowerCase().includes(query.toLowerCase()) || \n        book.author.toLowerCase().includes(query.toLowerCase())\n      )\n      .map(book => ({\n        id: book.id.toString(),\n        title: book.title,\n        author: book.author,\n        publisher: book.publisher,\n        isbn: book.isbn,\n        category: book.category,\n        publishYear: book.publishYear,\n        description: book.description,\n        imageUrl: book.imageUrl,\n        loanCount: Math.floor(Math.random() * 100) + 10\n      }));\n  }\n\n  /**\n   * 도서 소장 현황 조회\n   * 실제 API: http://data4library.kr/api/libSrchByBook\n   */\n  async getBookAvailability(isbn: string): Promise<LibraryAvailability[]> {\n    try {\n      const apiUrl = 'http://data4library.kr/api/libSrchByBook';\n      const params = new URLSearchParams({\n        authKey: process.env.REACT_APP_LIBRARY_API_KEY || AUTH_KEY,\n        isbn: isbn,\n        format: 'json'\n      });\n\n      const response = await fetch(`${apiUrl}?${params}`);\n      \n      if (!response.ok) {\n        throw new Error(`API 호출 실패: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.response && data.response.libs) {\n        const availability: LibraryAvailability[] = data.response.libs.map((lib: any) => ({\n          libraryId: lib.lib.libCode || '',\n          libraryName: lib.lib.libName || '도서관명 없음',\n          available: lib.book.loanAvailable === 'Y',\n          loanable: lib.book.loanAvailable === 'Y',\n          reservable: lib.book.reserveAvailable === 'Y',\n          dueDate: lib.book.returnPlanDate || undefined\n        }));\n        \n        return availability;\n      }\n      \n      return [];\n      \n    } catch (error) {\n      console.error('도서 소장 현황 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 도서 예약\n   * 실제 API: 각 도서관별 대출/예약 시스템 API\n   */\n  async reserveBook(bookId: string, libraryId: string, userId: string): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/books/reserve`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ bookId, libraryId, userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log(`도서 예약 요청: 도서 ${bookId}, 도서관 ${libraryId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('도서 예약 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 조회\n   * 실제 API: 각 도서관별 프로그램 API 또는 커뮤니티 API\n   */\n  async getReadingGroups(libraryId?: string): Promise<any[]> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups?libraryId=${libraryId}&apiKey=${this.config.apiKey}`);\n      // const data = await response.json();\n      // return data.result;\n      \n      // 현재는 더미 데이터 반환\n      if (libraryId) {\n        return dummyReadingGroups.filter(group => group.libraryId === libraryId);\n      }\n      return dummyReadingGroups;\n    } catch (error) {\n      console.error('독서 모임 조회 실패:', error);\n      return [];\n    }\n  }\n\n  /**\n   * 독서 모임 가입\n   */\n  async joinReadingGroup(groupId: string, userId: string): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups/${groupId}/join`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ userId, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log(`독서 모임 가입 요청: 모임 ${groupId}, 사용자 ${userId}`);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 가입 실패:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 독서 모임 생성\n   */\n  async createReadingGroup(groupData: any): Promise<boolean> {\n    try {\n      // 실제 구현 시:\n      // const response = await fetch(`${this.config.baseURL}/reading-groups`, {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ ...groupData, apiKey: this.config.apiKey })\n      // });\n      // return response.ok;\n      \n      // 현재는 더미 응답 반환\n      console.log('독서 모임 생성 요청:', groupData);\n      return true;\n    } catch (error) {\n      console.error('독서 모임 생성 실패:', error);\n      return false;\n    }\n  }\n}\n\n// 기본 API 설정 (환경변수에서 로드)\nexport const defaultLibraryAPI = new LibraryAPIService({\n  baseURL: process.env.REACT_APP_GYEONGGI_API_URL || 'https://openapi.gg.go.kr',\n  apiKey: process.env.REACT_APP_GYEONGGI_API_KEY || 'demo_key'\n});\n\n// API 키 설정 가이드\nexport const API_SETUP_GUIDE = {\n  title: '경기도 공공데이터 API 연동 가이드',\n  steps: [\n    {\n      step: 1,\n      title: '경기데이터드림 회원가입',\n      description: 'https://data.gg.go.kr 에서 회원가입',\n      url: 'https://data.gg.go.kr'\n    },\n    {\n      step: 2,\n      title: 'API 키 발급',\n      description: '도서관 정보 API 서비스 신청 및 키 발급',\n      note: '승인까지 1-2일 소요'\n    },\n    {\n      step: 3,\n      title: '환경변수 설정',\n      description: '.env 파일에 API 키 추가',\n      code: `REACT_APP_GYEONGGI_API_URL=https://openapi.gg.go.kr\nREACT_APP_GYEONGGI_API_KEY=your_api_key_here\nREACT_APP_LIBRARY_API_KEY=your_library_api_key_here`\n    },\n    {\n      step: 4,\n      title: '도서관정보나루 연동',\n      description: 'data4library.kr에서 추가 도서 정보 API 활용',\n      url: 'https://www.data4library.kr'\n    }\n  ],\n  additionalAPIs: [\n    {\n      name: '경기데이터드림',\n      url: 'https://data.gg.go.kr',\n      description: '경기도 공공데이터 포털',\n      apis: [\n        '도서관 시설 정보',\n        '문화시설 현황',\n        '공공시설 위치 정보'\n      ]\n    },\n    {\n      name: '도서관정보나루',\n      url: 'https://www.data4library.kr',\n      description: '국가도서관통계시스템',\n      apis: [\n        '전국 도서관 정보',\n        '도서 검색',\n        '대출 통계'\n      ]\n    },\n    {\n      name: '각 시군 Open API',\n      description: '수원시, 성남시 등 각 지역별 API',\n      apis: [\n        '지역별 도서관 API',\n        '문화 프로그램 정보',\n        '시설 예약 시스템'\n      ]\n    }\n  ]\n};\n\n// 도서관 정보나루 API 서비스\nconst BASE_URL = 'http://data4library.kr/api';\n\n// API 인증키 (실제 인증키로 설정)\nconst AUTH_KEY = process.env.REACT_APP_LIBRARY_API_KEY || '651824a6d5a5d765b513f7f8059ef5ffb2ac3c30f15f0114a8764076c8b902b8';\n\n// API 승인 상태 확인 함수\nexport const checkApiApprovalStatus = async (apiKey: string): Promise<boolean> => {\n  try {\n    const response = await fetch(`https://www.data4library.kr/api/loanItemSrch?authKey=${apiKey}&startDt=2024-01-01&endDt=2024-01-31&pageNo=1&pageSize=1&format=json`);\n    const data = await response.json();\n    \n    // API 키가 승인되지 않은 경우 에러 응답을 받음\n    if (data.error || data.message?.includes('인증키') || data.message?.includes('승인')) {\n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('API 승인 상태 확인 중 오류:', error);\n    return false;\n  }\n};\n\n// 지역 코드 매핑 (도서관정보나루 API 기준)\nconst REGION_CODES = {\n  '강남구': '11',  // 서울특별시\n  '서초구': '11',  // 서울특별시\n  '수원시': '31',  // 경기도\n  '성남시': '31',  // 경기도\n  '부천시': '31',  // 경기도\n  '안양시': '31',  // 경기도\n  '고양시': '31',  // 경기도\n  '용인시': '31',  // 경기도\n  '화성시': '31',  // 경기도\n  '경기도': '31',  // 경기도 전체\n  '전체': '31'     // 경기도 전체 (기본값)\n};\n\n// 연령대 매핑 (50-60대 중심)\nconst AGE_GROUPS = '40;50;60';\n\nexport interface PopularBookData {\n  id: string;\n  title: string;\n  author: string;\n  publisher: string;\n  isbn: string;\n  loanCount: number;\n  category: string;\n  publishYear: string;\n}\n\nexport interface ApiResponse {\n  response: {\n    docs: PopularBookData[];\n    numFound: number;\n    start: number;\n  };\n}\n\n/**\n * 인기 대출 도서 조회 API\n */\nexport const fetchPopularBooks = async (\n  region: string = '전체',\n  startDate: string = '2025-01-01',\n  endDate: string = '2025-07-12'\n): Promise<PopularBookData[]> => {\n  try {\n    const regionCode = REGION_CODES[region as keyof typeof REGION_CODES] || '31';\n    \n    const params = new URLSearchParams({\n      authKey: AUTH_KEY,\n      startDt: startDate,\n      endDt: endDate,\n      age: AGE_GROUPS,\n      region: regionCode,\n      format: 'json',\n      pageNo: '1',\n      pageSize: '5' // TOP 5 조회\n    });\n\n    const url = `${BASE_URL}/loanItemSrch?${params}`;\n    \n    console.log('API 호출 URL:', url);\n    \n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      throw new Error(`API 호출 실패: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    // API 에러 체크\n    if (data.response && data.response.error) {\n      console.warn('API 에러:', data.response.error);\n      if (data.response.error.includes('활성화')) {\n        console.log('💡 API 키가 아직 활성화되지 않았습니다. 더미 데이터를 사용합니다.');\n      }\n      throw new Error(data.response.error);\n    }\n    \n    // API 응답 데이터 구조에 맞게 변환\n    const books: PopularBookData[] = data.response.docs?.map((book: any, index: number) => ({\n      id: book.isbn || `book_${index}`,\n      title: book.bookname || '제목 없음',\n      author: book.authors || '작가 미상',\n      publisher: book.publisher || '출판사 미상',\n      isbn: book.isbn || '',\n      loanCount: parseInt(book.loan_count) || 0,\n      category: book.class_nm || '일반',\n      publishYear: book.publication_year || '2023'\n    })) || [];\n    \n    return books;\n    \n  } catch (error) {\n    console.error('인기도서 API 호출 오류:', error);\n    \n    // API 호출 실패시 더미 데이터 반환\n    return getFallbackPopularBooks();\n  }\n};\n\n/**\n * API 호출 실패시 사용할 더미 데이터\n */\nconst getFallbackPopularBooks = (): PopularBookData[] => {\n  return [\n    {\n      id: '1',\n      title: '82년생 김지영',\n      author: '조남주',\n      publisher: '민음사',\n      isbn: '9788937473722',\n      loanCount: 1247,\n      category: '소설',\n      publishYear: '2016'\n    },\n    {\n      id: '2',\n      title: '미드나잇 라이브러리',\n      author: '매트 헤이그',\n      publisher: '인플루엔셜',\n      isbn: '9791197377109',\n      loanCount: 1156,\n      category: '소설',\n      publishYear: '2020'\n    },\n    {\n      id: '3',\n      title: '완전한 행복',\n      author: '정유정',\n      publisher: '은행나무',\n      isbn: '9788956609485',\n      loanCount: 1089,\n      category: '소설',\n      publishYear: '2021'\n    },\n    {\n      id: '4',\n      title: '사피엔스',\n      author: '유발 하라리',\n      publisher: '김영사',\n      isbn: '9788934972464',\n      loanCount: 987,\n      category: '인문',\n      publishYear: '2015'\n    },\n    {\n      id: '5',\n      title: '아몬드',\n      author: '손원평',\n      publisher: '창비',\n      isbn: '9788936434267',\n      loanCount: 876,\n      category: '소설',\n      publishYear: '2017'\n    }\n  ];\n};\n\n/**\n * 도서 검색 API 함수 (외부에서 직접 호출용)\n */\nexport const searchBooksAPI = async (\n  query: string,\n  pageNo: number = 1,\n  pageSize: number = 10\n): Promise<BookSearchResult[]> => {\n  const apiService = new LibraryAPIService({\n    baseURL: BASE_URL,\n    apiKey: AUTH_KEY\n  });\n  \n  return await apiService.searchBooks({\n    query,\n    pageNo,\n    pageSize\n  });\n};\n\n/**\n * 환경 설정 확인\n */\nexport const checkApiConfiguration = (): boolean => {\n  if (!AUTH_KEY || AUTH_KEY.length < 10) {\n    console.warn('⚠️ API 인증키가 설정되지 않았습니다. 더미 데이터를 사용합니다.');\n    return false;\n  }\n  console.log('✅ API 인증키가 설정되었습니다.');\n  return true;\n};\n\n/**\n * 실제 API 사용 예시\n */\nexport const exampleApiUsage = async () => {\n  try {\n    // 도서 검색 예시\n    console.log('=== 도서 검색 API 테스트 ===');\n    const searchResults = await searchBooksAPI('사피엔스', 1, 5);\n    console.log('검색 결과:', searchResults);\n    \n    // 인기 도서 조회 예시\n    console.log('=== 인기 도서 API 테스트 ===');\n    const popularBooks = await fetchPopularBooks('수원시', '2024-07-01', '2024-12-31');\n    console.log('인기도서 목록:', popularBooks);\n    \n    return { searchResults, popularBooks };\n  } catch (error) {\n    console.error('API 사용 예시 오류:', error);\n    return { searchResults: [], popularBooks: [] };\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}